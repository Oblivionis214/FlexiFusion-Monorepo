declare const connectWalletImpl: (axiosInstance: Readonly<{
    post: <T = any, R = import("axios").AxiosResponse<T, any>, D = any>(url: string, data?: D | undefined, config?: import("axios").AxiosRequestConfig<D> | undefined) => Promise<R>;
}>, variables: Readonly<{
    walletPublicKey: string;
    timestamp: number;
    signature: string;
    walletBlockchain: import("@notifi-network/notifi-core").WalletBlockchain;
    accountId?: string | undefined;
    connectWalletConflictResolutionTechnique?: "DISCONNECT" | "DISCONNECT_AND_CLOSE_OLD_ACCOUNT" | "FAIL" | undefined;
}>) => Promise<{
    __typename?: "ConnectedWallet" | undefined;
    address?: string | undefined;
    walletBlockchain: "ACALA" | "APTOS" | "ARBITRUM" | "AVALANCHE" | "BASE" | "BINANCE" | "ETHEREUM" | "EVMOS" | "INJECTIVE" | "NEAR" | "NIBIRU" | "OFF_CHAIN" | "OPTIMISM" | "OSMOSIS" | "POLYGON" | "SOLANA" | "SUI" | "ZKSYNC";
}>;
export default connectWalletImpl;
//# sourceMappingURL=connectWalletImpl.d.ts.map