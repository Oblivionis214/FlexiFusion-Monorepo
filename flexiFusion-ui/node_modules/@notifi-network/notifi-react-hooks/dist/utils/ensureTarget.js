"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureDiscord = exports.ensureWebhook = exports.ensureTelegram = exports.ensureSms = exports.ensureEmail = void 0;
const ensureTarget = (create, identify, valueTransform) => {
    return async (service, existing, value) => {
        if (value === undefined) {
            return undefined;
        }
        const transformedValue = valueTransform !== undefined ? valueTransform(value) : value;
        const found = existing === null || existing === void 0 ? void 0 : existing.find((it) => identify(it) === transformedValue);
        if (found !== undefined) {
            return found.id;
        }
        const created = await create(service, transformedValue);
        existing === null || existing === void 0 ? void 0 : existing.push(created);
        return created.id;
    };
};
const ensureEmail = ensureTarget(async (service, value) => await service.createEmailTarget({
    name: value.toLowerCase(),
    value: value.toLowerCase(),
}), (arg) => { var _a, _b; return (_b = (_a = arg.emailAddress) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : undefined; }, (value) => value.toLowerCase());
exports.ensureEmail = ensureEmail;
const ensureSms = ensureTarget(async (service, value) => await service.createSmsTarget({
    name: value,
    value,
}), (arg) => arg.phoneNumber);
exports.ensureSms = ensureSms;
const ensureTelegram = ensureTarget(async (service, value) => await service.createTelegramTarget({
    name: value.toLowerCase(),
    value: value.toLowerCase(),
}), (arg) => { var _a, _b; return (_b = (_a = arg.telegramId) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : null; }, (value) => value.toLowerCase());
exports.ensureTelegram = ensureTelegram;
// Webhook cannot use ensureTarget due to requiring more than one parameter in its creation
const ensureWebhook = async (service, existing, params) => {
    if (params === undefined) {
        return null;
    }
    const found = existing === null || existing === void 0 ? void 0 : existing.find((it) => it.url.toLowerCase() === params.url.toLowerCase() &&
        it.format === params.format);
    if (found !== undefined) {
        return found.id;
    }
    const created = await service.createWebhookTarget(Object.assign(Object.assign({}, params), { name: params.url.toLowerCase(), url: params.url.toLowerCase() }));
    existing === null || existing === void 0 ? void 0 : existing.push(created);
    return created.id;
};
exports.ensureWebhook = ensureWebhook;
const ensureDiscord = ensureTarget(async (service, value) => await service.createDiscordTarget({
    name: value,
    value,
}), (arg) => arg.name, () => 'Default');
exports.ensureDiscord = ensureDiscord;
exports.default = ensureTarget;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlVGFyZ2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL3V0aWxzL2Vuc3VyZVRhcmdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFxQkEsTUFBTSxZQUFZLEdBQUcsQ0FDbkIsTUFBOEIsRUFDOUIsUUFBeUIsRUFDekIsY0FBbUMsRUFLSCxFQUFFO0lBQ2xDLE9BQU8sS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDeEMsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3ZCLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO1FBRUQsTUFBTSxnQkFBZ0IsR0FDcEIsY0FBYyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFFL0QsTUFBTSxLQUFLLEdBQUcsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLElBQUksQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUM7UUFFeEUsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3ZCLE9BQU8sS0FBSyxDQUFDLEVBQUUsQ0FBQztTQUNqQjtRQUVELE1BQU0sT0FBTyxHQUFHLE1BQU0sTUFBTSxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3hELFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEIsT0FBTyxPQUFPLENBQUMsRUFBRSxDQUFDO0lBQ3BCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FDOUIsS0FBSyxFQUFFLE9BQWlDLEVBQUUsS0FBYSxFQUFFLEVBQUUsQ0FDekQsTUFBTSxPQUFPLENBQUMsaUJBQWlCLENBQUM7SUFDOUIsSUFBSSxF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