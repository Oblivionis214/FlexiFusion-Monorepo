"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAlertPaused = exports.isAlertObsolete = void 0;
const hasKey = (obj, key) => {
    return Object.prototype.hasOwnProperty.call(obj, key);
};
const parseFilterOptions = (alert) => {
    const filterOptions = {};
    if (alert.filterOptions === null) {
        return filterOptions;
    }
    let jsonObject = {};
    try {
        jsonObject = JSON.parse(alert.filterOptions);
    }
    catch (e) {
        jsonObject = {};
    }
    if (hasKey(jsonObject, 'alertFrequency') &&
        (jsonObject.alertFrequency === 'ALWAYS' ||
            jsonObject.alertFrequency === 'SINGLE')) {
        filterOptions.alertFrequency = jsonObject.alertFrequency;
    }
    if (hasKey(jsonObject, 'threshold') &&
        typeof jsonObject.threshold === 'string') {
        try {
            filterOptions.threshold = parseInt(jsonObject.threshold, 10);
        }
        catch (e) {
            filterOptions.threshold = NaN;
        }
    }
    if (hasKey(jsonObject, 'delayProcessingUntil') &&
        typeof jsonObject.delayProcessingUntil === 'string') {
        filterOptions.delayProcessingUntil = jsonObject.delayProcessingUntil;
    }
    return filterOptions;
};
const isAlertPaused = (alert) => {
    if (alert.filterOptions === null) {
        return false;
    }
    const filterOptions = parseFilterOptions(alert);
    if (filterOptions.delayProcessingUntil === undefined) {
        return false;
    }
    const delayProcessingUntil = Date.parse(filterOptions.delayProcessingUntil);
    return !isNaN(delayProcessingUntil) && delayProcessingUntil > Date.now();
};
exports.isAlertPaused = isAlertPaused;
const isAlertObsolete = (alert) => {
    if (alert.filterOptions === null) {
        return false;
    }
    const filterOptions = parseFilterOptions(alert);
    return filterOptions.alertFrequency === 'SINGLE' && isAlertPaused(alert);
};
exports.isAlertObsolete = isAlertObsolete;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnRVdGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi91dGlscy9hbGVydFV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUlBLE1BQU0sTUFBTSxHQUFHLENBQ2IsR0FBTSxFQUNOLEdBQVEsRUFDeUIsRUFBRTtJQUNuQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDeEQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxrQkFBa0IsR0FBRyxDQUN6QixLQUF1QixFQUNFLEVBQUU7SUFDM0IsTUFBTSxhQUFhLEdBQWtCLEVBQUUsQ0FBQztJQUN4QyxJQUFJLEtBQUssQ0FBQyxhQUFhLEtBQUssSUFBSSxFQUFFO1FBQ2hDLE9BQU8sYUFBYSxDQUFDO0tBQ3RCO0lBRUQsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLElBQUk7UUFDRixVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDOUM7SUFBQyxPQUFPLENBQVUsRUFBRTtRQUNuQixVQUFVLEdBQUcsRUFBRSxDQUFDO0tBQ2pCO0lBRUQsSUFDRSxNQUFNLENBQUMsVUFBVSxFQUFFLGdCQUFnQixDQUFDO1FBQ3BDLENBQUMsVUFBVSxDQUFDLGNBQWMsS0FBSyxRQUFRO1lBQ3JDLFVBQVUsQ0FBQyxjQUFjLEtBQUssUUFBUSxDQUFDLEVBQ3pDO1FBQ0EsYUFBYSxDQUFDLGNBQWMsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDO0tBQzFEO0lBRUQsSUFDRSxNQUFNLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQztRQUMvQixPQUFPLFVBQVUsQ0FBQyxTQUFTLEtBQUssUUFBUSxFQUN4QztRQUNBLElBQUk7WUFDRixhQUFhLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQzlEO1FBQUMsT0FBTyxDQUFVLEVBQUU7WUFDbkIsYUFBYSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7U0FDL0I7S0FDRjtJQUVELElBQ0UsTUFBTSxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztRQUMxQyxPQUFPLFVBQVUsQ0FBQyxvQkFBb0IsS0FBSyxRQUFRLEVBQ25EO1FBQ0EsYUFBYSxDQUFDLG9CQUFvQixHQUFHLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQztLQUN0RTtJQUVELE9BQU8sYUFBYSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVGLE1BQU0sYUFBYSxHQUFHLENBQUMsS0FBdUIsRUFBVyxFQUFFO0lBQ3pELElBQUksS0FBSyxDQUFDLGFBQWEsS0FBSyxJQUFJLEVBQUU7UUFDaEMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELElBQUksYUFBYSxDQUFDLG9CQUFvQixLQUFLLFNBQVMsRUFBRTtRQUNwRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxvQkFBb0IsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQzVFLE9BQU8sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsSUFBSSxvQkFBb0IsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDM0UsQ0FBQyxDQUFDO0FBV3dCLHNDQUFhO0FBVHZDLE1BQU0sZUFBZSxHQUFHLENBQUMsS0FBdUIsRUFBVyxFQUFFO0lBQzNELElBQUksS0FBSyxDQUFDLGFBQWEsS0FBSyxJQUFJLEVBQUU7UUFDaEMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE1BQU0sYUFBYSxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE9BQU8sYUFBYSxDQUFDLGNBQWMsS0FBSyxRQUFRLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNFLENBQUMsQ0FBQztBQUVPLDBDQUFlIn0=