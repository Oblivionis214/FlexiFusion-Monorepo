"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ensureTarget_1 = require("./ensureTarget");
const ensureTargetIds = async (service, existing, input) => {
    const { emailAddress, phoneNumber, telegramId, webhook, includeDiscord } = input;
    const [emailTargetId, smsTargetId, telegramTargetId, webhookTargetId, discordTargetId,] = await Promise.all([
        (0, ensureTarget_1.ensureEmail)(service, existing.emailTargets, emailAddress),
        (0, ensureTarget_1.ensureSms)(service, existing.smsTargets, phoneNumber),
        (0, ensureTarget_1.ensureTelegram)(service, existing.telegramTargets, telegramId),
        (0, ensureTarget_1.ensureWebhook)(service, existing.webhookTargets, webhook),
        includeDiscord
            ? (0, ensureTarget_1.ensureDiscord)(service, existing.discordTargets, 'Default')
            : Promise.resolve(null),
    ]);
    const emailTargetIds = [];
    if (emailTargetId !== null) {
        emailTargetIds.push(emailTargetId);
    }
    const smsTargetIds = [];
    if (smsTargetId !== null) {
        smsTargetIds.push(smsTargetId);
    }
    const telegramTargetIds = [];
    if (telegramTargetId !== null) {
        telegramTargetIds.push(telegramTargetId);
    }
    const webhookTargetIds = [];
    if (webhookTargetId !== null) {
        webhookTargetIds.push(webhookTargetId);
    }
    const discordTargetIds = [];
    if (discordTargetId !== null) {
        discordTargetIds.push(discordTargetId);
    }
    return {
        emailTargetIds,
        smsTargetIds,
        telegramTargetIds,
        webhookTargetIds,
        discordTargetIds,
    };
};
exports.default = ensureTargetIds;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlVGFyZ2V0SWRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL3V0aWxzL2Vuc3VyZVRhcmdldElkcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQWNBLGlEQU13QjtBQVV4QixNQUFNLGVBQWUsR0FBRyxLQUFLLEVBQzNCLE9BSTRCLEVBQzVCLFFBQXNCLEVBQ3RCLEtBTUUsRUFDRixFQUFFO0lBQ0YsTUFBTSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsR0FDdEUsS0FBSyxDQUFDO0lBRVIsTUFBTSxDQUNKLGFBQWEsRUFDYixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLGVBQWUsRUFDZixlQUFlLEVBQ2hCLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3BCLElBQUEsMEJBQVcsRUFBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUM7UUFDekQsSUFBQSx3QkFBUyxFQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQztRQUNwRCxJQUFBLDZCQUFjLEVBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDO1FBQzdELElBQUEsNEJBQWEsRUFBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUM7UUFDeEQsY0FBYztZQUNaLENBQUMsQ0FBQyxJQUFBLDRCQUFhLEVBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxjQUFjLEVBQUUsU0FBUyxDQUFDO1lBQzVELENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztLQUMxQixDQUFDLENBQUM7SUFFSCxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDMUIsSUFBSSxhQUFhLEtBQUssSUFBSSxFQUFFO1FBQzFCLGNBQWMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDcEM7SUFFRCxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDeEIsSUFBSSxXQUFXLEtBQUssSUFBSSxFQUFFO1FBQ3hCLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDaEM7SUFFRCxNQUFNLGlCQUFpQixHQUFHLEVBQUUsQ0FBQztJQUM3QixJQUFJLGdCQUFnQixLQUFLLElBQUksRUFBRTtRQUM3QixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztLQUMxQztJQUVELE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0lBQzVCLElBQUksZUFBZSxLQUFLLElBQUksRUFBRTtRQUM1QixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7S0FDeEM7SUFFRCxNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUM1QixJQUFJLGVBQWUsS0FBSyxJQUFJLEVBQUU7UUFDNUIsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0tBQ3hDO0lBRUQsT0FBTztRQUNMLGNBQWM7UUFDZCxZQUFZO1FBQ1osaUJBQWlCO1FBQ2pCLGdCQUFnQjtRQUNoQixnQkFBZ0I7S0FDakIsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLGtCQUFlLGVBQWUsQ0FBQyJ9