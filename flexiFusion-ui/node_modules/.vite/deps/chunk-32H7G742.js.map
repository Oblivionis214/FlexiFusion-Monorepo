{
  "version": 3,
  "sources": ["../../localforage/dist/localforage.js", "../../@notifi-network/notifi-frontend-client/dist/index.mjs", "../../@notifi-network/notifi-graphql/dist/index.mjs", "../../uuid/dist/esm-browser/index.js", "../../uuid/dist/esm-browser/v1.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/v5.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/nil.js", "../../uuid/dist/esm-browser/version.js", "../../graphql-request/src/index.ts", "../../graphql-request/src/defaultJsonSerializer.ts", "../../graphql-request/src/helpers.ts", "../../graphql-request/src/parseArgs.ts", "../../graphql-request/src/resolveRequestDocument.ts", "../../graphql-request/src/types.ts", "../../graphql-request/src/graphql-ws.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// lib/configuration/NotifiFrontendConfiguration.ts\nvar checkIsConfigWithPublicKeyAndAddress = (config) => {\n  return \"accountAddress\" in config;\n};\nvar configFactoryPublicKey = (args) => {\n  return {\n    tenantId: args.tenantId,\n    env: args.env,\n    walletBlockchain: args.walletBlockchain,\n    walletPublicKey: args.account.publicKey,\n    storageOption: args.storageOption\n  };\n};\nvar configFactoryPublicKeyAndAddress = (args) => {\n  return {\n    tenantId: args.tenantId,\n    env: args.env,\n    walletBlockchain: args.walletBlockchain,\n    authenticationKey: args.account.publicKey,\n    accountAddress: args.account.address,\n    storageOption: args.storageOption\n  };\n};\nvar validateConfigInput = (config) => {\n  return \"address\" in config.account;\n};\nvar newFrontendConfig = (config) => {\n  return validateConfigInput(config) ? configFactoryPublicKeyAndAddress(config) : configFactoryPublicKey(config);\n};\nvar envUrl = (env) => {\n  switch (env) {\n    case \"Development\":\n      return \"https://api.dev.notifi.network/gql\";\n    case \"Local\":\n      return \"https://localhost:5001/gql\";\n    case \"Production\":\n      return \"https://api.notifi.network/gql\";\n    case \"Staging\":\n      return \"https://api.stg.notifi.network/gql\";\n  }\n};\n\n// lib/utils/notNullOrEmpty.ts\nvar notNullOrEmpty = (item) => {\n  return item !== void 0 && item !== null;\n};\n\n// lib/utils/packFilterOptions.ts\nvar packFilterOptions = (clientOptions) => {\n  if (clientOptions === null) {\n    return \"{}\";\n  }\n  return JSON.stringify(clientOptions);\n};\n\n// lib/utils/areIdsEqual.ts\nvar areIdsEqual = (ids, items) => {\n  const idSet = new Set(ids);\n  return items.length === idSet.size && items.every((it) => it !== void 0 && idSet.has(it.id));\n};\n\n// lib/utils/resolveRef.ts\nvar createRefResolver = (validator) => {\n  return (name, valueOrRef, inputs) => {\n    if (valueOrRef.type === \"value\") {\n      return valueOrRef.value;\n    } else {\n      if (valueOrRef.ref === null) {\n        throw new Error(`Invalid configuration: Ref ${name} is null`);\n      }\n      const runtimeInput = inputs[valueOrRef.ref];\n      if (validator(runtimeInput)) {\n        return runtimeInput;\n      } else {\n        throw new Error(`Invalid value provided for ${name}: ${runtimeInput}`);\n      }\n    }\n  };\n};\nvar resolveStringRef = createRefResolver(\n  (item) => {\n    return typeof item === \"string\";\n  }\n);\nvar resolveNumberRef = createRefResolver(\n  (item) => {\n    return typeof item === \"number\" && !Number.isNaN(item);\n  }\n);\nvar resolveStringArrayRef = createRefResolver(\n  (item) => {\n    return Array.isArray(item) && item.every((element) => typeof element === \"string\");\n  }\n);\nvar resolveCheckRatioArrayRef = createRefResolver(\n  (item) => {\n    return Array.isArray(item) && item.every(\n      (element) => typeof element === \"object\" && typeof element.type === \"string\" && typeof element.ratio === \"number\" && !Number.isNaN(element.ratio)\n    );\n  }\n);\n\n// lib/client/ensureSource.ts\nvar ensureDirectPushSource = async (service, _eventType, _inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  const source = sources == null ? void 0 : sources.find(\n    (it) => it !== void 0 && it.type === \"DIRECT_PUSH\"\n  );\n  if (source === void 0) {\n    throw new Error(\"Failed to identify direct push source\");\n  }\n  return source;\n};\nvar ensureFusionSource = async (service, eventType, inputs) => {\n  const address = resolveStringRef(\n    eventType.name,\n    eventType.sourceAddress,\n    inputs\n  );\n  const eventTypeId = resolveStringRef(\n    eventType.name,\n    eventType.fusionEventId,\n    inputs\n  );\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  const existing = sources == null ? void 0 : sources.find(\n    (it) => it !== void 0 && it.type === \"FUSION_SOURCE\" && it.blockchainAddress === address && it.fusionEventTypeId === eventTypeId\n  );\n  if (existing !== void 0) {\n    return existing;\n  }\n  const createMutation = await service.createSource({\n    type: \"FUSION_SOURCE\",\n    blockchainAddress: address,\n    fusionEventTypeId: eventTypeId\n  });\n  const source = createMutation.createSource;\n  if (source === void 0) {\n    throw new Error(\"Failed to create source\");\n  }\n  return source;\n};\nvar ensureBroadcastSource = async (service, eventType, inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  if (sources === void 0) {\n    throw new Error(\"Failed to fetch sources\");\n  }\n  const address = resolveStringRef(\n    eventType.name,\n    eventType.broadcastId,\n    inputs\n  );\n  const existing = sources.find(\n    (it) => (it == null ? void 0 : it.type) === \"BROADCAST\" && it.blockchainAddress === address\n  );\n  if (existing !== void 0) {\n    return existing;\n  }\n  const createMutation = await service.createSource({\n    type: \"BROADCAST\",\n    blockchainAddress: address\n  });\n  const result = createMutation.createSource;\n  if (result === void 0) {\n    throw new Error(\"Failed to create source\");\n  }\n  return result;\n};\nvar ensureTradingPairSource = async (service, _eventType, _inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  const source = sources == null ? void 0 : sources.find((it) => (it == null ? void 0 : it.type) === \"DIRECT_PUSH\");\n  if (source === void 0) {\n    throw new Error(\"Failed to identify trading pair source (=directPush)\");\n  }\n  return source;\n};\nvar ensurePriceChangeSources = async (service, eventType, _inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  if (sources === void 0) {\n    throw new Error(\"Failed to fetch sources\");\n  }\n  const results = [];\n  const sourcesToCreate = new Set(eventType.tokenIds);\n  sources.forEach((existing) => {\n    if ((existing == null ? void 0 : existing.type) === \"COIN_PRICE_CHANGES\") {\n      sourcesToCreate.delete(existing.blockchainAddress);\n      results.push(existing);\n    }\n  });\n  if (sourcesToCreate.size > 0) {\n    let createSourcePromise = Promise.resolve();\n    sourcesToCreate.forEach((tokenId) => {\n      createSourcePromise = createSourcePromise.then(async () => {\n        const result = await service.createSource({\n          type: \"COIN_PRICE_CHANGES\",\n          blockchainAddress: tokenId\n        });\n        const source = result.createSource;\n        if (source !== void 0) {\n          results.push(source);\n        }\n      });\n    });\n    await createSourcePromise;\n  }\n  return results;\n};\nvar ensureWalletBalanceSources = async (service, _eventType, _inputs) => {\n  const connectedWalletsQuery = await service.getConnectedWallets({});\n  const connectedWallets = connectedWalletsQuery.connectedWallet;\n  if (!connectedWallets) {\n    throw new Error(\"Failed to fetch connected wallets\");\n  }\n  const connectedWalletSources = connectedWallets.map((it) => {\n    var _a;\n    const sourceType = ((wallet) => {\n      switch (wallet) {\n        case \"ACALA\":\n          return \"ACALA_WALLET\";\n        case \"APTOS\":\n          return \"APTOS_WALLET\";\n        case \"ARBITRUM\":\n          return \"ARBITRUM_WALLET\";\n        case \"AVALANCHE\":\n          return \"AVALANCHE_WALLET\";\n        case \"BINANCE\":\n          return \"BINANCE_WALLET\";\n        case \"ETHEREUM\":\n          return \"ETHEREUM_WALLET\";\n        case \"BASE\":\n          return \"ETHEREUM_WALLET\";\n        case \"POLYGON\":\n          return \"POLYGON_WALLET\";\n        case \"SOLANA\":\n          return \"SOLANA_WALLET\";\n        case \"OPTIMISM\":\n          return \"OPTIMISM_WALLET\";\n        case \"SUI\":\n          return \"SUI_WALLET\";\n        case \"ZKSYNC\":\n          return \"ZKSYNC_WALLET\";\n        default:\n          throw new Error(\"Unsupported walletType\");\n      }\n    })(it == null ? void 0 : it.walletBlockchain);\n    const sourceAddress = (_a = it == null ? void 0 : it.address) != null ? _a : \"\";\n    return {\n      name: `${sourceType} ${sourceAddress}`,\n      blockchainAddress: sourceAddress,\n      type: sourceType\n    };\n  });\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  if (sources === void 0) {\n    throw new Error(\"Failed to fetch sources\");\n  }\n  const promises = connectedWalletSources.map(async (connectedWalletSource) => {\n    const found = sources.find(\n      (source) => (source == null ? void 0 : source.name) === connectedWalletSource.name\n    );\n    if (found) {\n      return found;\n    }\n    const { createSource: newSource } = await service.createSource(\n      connectedWalletSource\n    );\n    if (!newSource) {\n      throw new Error(`Failed to create ${connectedWalletSource.type} source`);\n    }\n    return newSource;\n  });\n  const ensuredSources = await Promise.all(promises);\n  return ensuredSources;\n};\nvar normalizeSourceAddress = (sourceType, blockchainAddress) => {\n  switch (sourceType) {\n    case \"ETHEREUM_WALLET\":\n    case \"POLYGON_WALLET\":\n    case \"ARBITRUM_WALLET\":\n    case \"BINANCE_WALLET\":\n    case \"OPTIMISM_WALLET\":\n    case \"AVALANCHE_WALLET\":\n    case \"ZKSYNC_WALLET\":\n    case \"BENQI\":\n    case \"DELTA_PRIME\":\n    case \"DELTA_PRIME_LENDING_RATES\":\n    case \"APTOS_WALLET\":\n      return normalizeHexString(blockchainAddress);\n    default:\n      return blockchainAddress;\n  }\n};\nvar normalizeHexString = (input) => {\n  let result = input;\n  if (input !== \"\") {\n    result = input.toLowerCase();\n    if (!result.startsWith(\"0x\")) {\n      result = \"0x\" + result;\n    }\n  }\n  return result;\n};\nvar ensureCustomSources = async (service, eventType, inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  if (sources === void 0) {\n    throw new Error(\"Failed to fetch sources\");\n  }\n  const address = resolveStringRef(\n    eventType.name,\n    eventType.sourceAddress,\n    inputs\n  );\n  const sourceAddress = normalizeSourceAddress(eventType.sourceType, address);\n  const existing = sources.find(\n    (it) => (it == null ? void 0 : it.type) === eventType.sourceType && it.blockchainAddress === sourceAddress\n  );\n  if (existing !== void 0) {\n    return existing;\n  }\n  const createMutation = await service.createSource({\n    type: eventType.sourceType,\n    blockchainAddress: sourceAddress\n  });\n  const result = createMutation.createSource;\n  if (result === void 0) {\n    throw new Error(\"Failed to create source\");\n  }\n  return result;\n};\nvar ensureXMTPSources = async (service, eventType, inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  if (sources === void 0) {\n    throw new Error(\"Failed to fetch sources\");\n  }\n  const XMTPTopics = resolveStringArrayRef(\n    eventType.name,\n    eventType.XMTPTopics,\n    inputs\n  );\n  const XMTPTopicSources = XMTPTopics.map((topic) => ({\n    name: topic,\n    blockchainAddress: topic,\n    type: \"XMTP\"\n  }));\n  const promises = XMTPTopicSources.map(async (source) => {\n    const found = sources.find(\n      (it) => (it == null ? void 0 : it.type) === \"XMTP\" && it.name === source.name\n    );\n    if (found) {\n      return found;\n    }\n    const { createSource: newSource } = await service.createSource(source);\n    if (!newSource) {\n      throw new Error(\"Failed to create XMTP source\");\n    }\n    return newSource;\n  });\n  const ensuredSources = await Promise.all(promises);\n  return ensuredSources;\n};\nvar ensureHealthCheckSources = async (service, _eventType, _inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  const source = sources == null ? void 0 : sources.find((it) => (it == null ? void 0 : it.type) === \"DIRECT_PUSH\");\n  if (source === void 0) {\n    throw new Error(\"Failed to identify Health Check source (=directPush)\");\n  }\n  return source;\n};\nvar ensureCreateSupportConversationSources = async (service, eventType, _inputs) => {\n  const sourcesQuery = await service.getSources({});\n  const sources = sourcesQuery.source;\n  const source = sources == null ? void 0 : sources.find((it) => (it == null ? void 0 : it.type) === \"NOTIFI_CHAT\");\n  if (source) {\n    return source;\n  }\n  const createMutation = await service.createSource({\n    type: eventType.sourceType,\n    blockchainAddress: \"*\"\n  });\n  const newSource = createMutation.createSource;\n  if (newSource === void 0) {\n    throw new Error(\"Failed to create source\");\n  }\n  return newSource;\n};\nvar ensureSources = async (service, eventType, inputs) => {\n  switch (eventType.type) {\n    case \"directPush\": {\n      const source = await ensureDirectPushSource(service, eventType, inputs);\n      return [source];\n    }\n    case \"broadcast\": {\n      const source = await ensureBroadcastSource(service, eventType, inputs);\n      return [source];\n    }\n    case \"tradingPair\": {\n      const source = await ensureTradingPairSource(service, eventType, inputs);\n      return [source];\n    }\n    case \"priceChange\": {\n      const sources = await ensurePriceChangeSources(\n        service,\n        eventType,\n        inputs\n      );\n      return sources;\n    }\n    case \"walletBalance\": {\n      const sources = await ensureWalletBalanceSources(\n        service,\n        eventType,\n        inputs\n      );\n      return sources;\n    }\n    case \"custom\": {\n      const source = await ensureCustomSources(service, eventType, inputs);\n      return [source];\n    }\n    case \"XMTP\": {\n      const sources = await ensureXMTPSources(service, eventType, inputs);\n      return sources;\n    }\n    case \"healthCheck\": {\n      const source = await ensureHealthCheckSources(service, eventType, inputs);\n      return [source];\n    }\n    case \"fusionToggle\":\n    case \"fusion\": {\n      const source = await ensureFusionSource(service, eventType, inputs);\n      return [source];\n    }\n    case \"createSupportConversation\": {\n      const source = await ensureCreateSupportConversationSources(\n        service,\n        eventType,\n        inputs\n      );\n      return [source];\n    }\n    case \"label\": {\n      throw new Error(\"Unsupported event type\");\n    }\n  }\n};\nvar ensureSourceGroup = async (service, name, sourceIds) => {\n  var _a, _b;\n  const sourceGroupsQuery = await service.getSourceGroups({});\n  const existing = (_a = sourceGroupsQuery.sourceGroup) == null ? void 0 : _a.find(\n    (it) => it !== void 0 && it.name === name\n  );\n  if (existing === void 0) {\n    const createMutation = await service.createSourceGroup({\n      name,\n      sourceIds\n    });\n    const createResult = createMutation.createSourceGroup;\n    if (createResult === void 0) {\n      throw new Error(\"Failed to create source group\");\n    }\n    return createResult;\n  }\n  if (areIdsEqual(sourceIds, (_b = existing.sources) != null ? _b : [])) {\n    return existing;\n  }\n  const updateMutation = await service.updateSourceGroup({\n    id: existing.id,\n    name,\n    sourceIds\n  });\n  const updateResult = updateMutation.updateSourceGroup;\n  if (updateResult === void 0) {\n    throw new Error(\"Failed to update source group\");\n  }\n  return updateResult;\n};\nvar getDirectPushFilter = (source, eventType, inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"DIRECT_TENANT_MESSAGES\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter\");\n  }\n  const type = resolveStringRef(eventType.name, eventType.directPushId, inputs);\n  const filterOptions = {\n    directMessageType: type\n  };\n  return {\n    filter,\n    filterOptions\n  };\n};\nvar getBroadcastFilter = (source, _eventType, _inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"BROADCAST_MESSAGES\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter\");\n  }\n  return {\n    filter,\n    filterOptions: {}\n  };\n};\nvar tradingPairInputsValidator = (inputs) => {\n  if (typeof inputs.direction !== \"string\" || typeof inputs.price !== \"number\" || typeof inputs.pair !== \"string\") {\n    return false;\n  }\n  return true;\n};\nvar getTradingPairFilter = (source, eventType, inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"DIRECT_TENANT_MESSAGES\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve TradingPair filter (=directMessage)\");\n  }\n  const tradingPairs = resolveStringArrayRef(\n    eventType.name,\n    eventType.tradingPairs,\n    inputs\n  );\n  if (tradingPairs.length === 0)\n    throw new Error(\"No trading pairs found\");\n  const tradingPair = tradingPairInputsValidator(inputs) ? inputs.pair : tradingPairs[0];\n  const value = tradingPairInputsValidator(inputs) ? inputs.price.toFixed(8) : \"1.00000000\";\n  return {\n    filter,\n    filterOptions: {\n      tradingPair,\n      values: {\n        and: [\n          {\n            key: \"spotPrice\",\n            op: inputs.direction === \"above\" ? \"gt\" : \"lt\",\n            value\n          }\n        ]\n      }\n    }\n  };\n};\nvar getPriceChangeFilter = (sources, _eventType, _inputs) => {\n  const filter = sources.flatMap((it) => {\n    var _a;\n    return (_a = it.applicableFilters) != null ? _a : [];\n  }).find((it) => (it == null ? void 0 : it.filterType) === \"COIN_PRICE_CHANGE_EVENTS\");\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter\");\n  }\n  return {\n    filter,\n    filterOptions: {}\n  };\n};\nvar getWalletBalanceSourceFilter = (source, _eventType, _inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"BALANCE\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter: wallet balance\");\n  }\n  return {\n    filter,\n    filterOptions: {}\n  };\n};\nvar getFusionSourceFilter = (source, eventType, inputs) => {\n  var _a, _b;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"FUSION_SOURCE\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve fusion source filter\");\n  }\n  let filterOptions = {};\n  if (eventType.selectedUIType === \"TOGGLE\" || eventType.selectedUIType === \"MULTI_THRESHOLD\") {\n    if (eventType.alertFrequency !== void 0) {\n      filterOptions = {\n        alertFrequency: eventType.alertFrequency\n      };\n    }\n  } else if (eventType.selectedUIType === \"HEALTH_CHECK\") {\n    const healthRatioKey = `${eventType.name}__healthRatio`;\n    if (!inputs[healthRatioKey]) {\n      inputs[`${eventType.name}__healthRatio`] = eventType.checkRatios[1].ratio;\n    }\n    const healthRatio = resolveNumberRef(\n      healthRatioKey,\n      { type: \"ref\", ref: healthRatioKey },\n      inputs\n    );\n    const thresholdDirectionKey = `${eventType.name}__healthThresholdDirection`;\n    if (!inputs[thresholdDirectionKey]) {\n      inputs[thresholdDirectionKey] = eventType.checkRatios[0].type === \"above\" ? \"above\" : \"below\";\n    }\n    const thresholdDirection = (_b = resolveStringRef(\n      thresholdDirectionKey,\n      { type: \"ref\", ref: thresholdDirectionKey },\n      inputs\n    )) != null ? _b : eventType.checkRatios[0].ratio;\n    if (!healthRatio || !thresholdDirection) {\n      throw new Error(\"Failed to retrieve health ratio or direction\");\n    }\n    filterOptions = {\n      alertFrequency: eventType.alertFrequency,\n      threshold: eventType.numberType === \"percentage\" ? healthRatio / 100 : healthRatio,\n      thresholdDirection: thresholdDirection === \"above\" ? \"above\" : \"below\"\n    };\n  }\n  return {\n    filter,\n    filterOptions\n  };\n};\nvar getCustomFilterOptions = (eventType, inputs) => {\n  var _a, _b;\n  switch (eventType.selectedUIType) {\n    case \"TOGGLE\":\n      return eventType.filterOptions;\n    case \"HEALTH_CHECK\": {\n      const healthRatioKey = `${eventType.name}__healthRatio`;\n      const healthRatio = (_a = resolveNumberRef(\n        healthRatioKey,\n        { type: \"ref\", ref: healthRatioKey },\n        inputs\n      )) != null ? _a : eventType.checkRatios[0].ratio;\n      const thresholdDirectionKey = `${eventType.name}__healthThresholdDirection`;\n      const thresholdDirection = (_b = resolveStringRef(\n        thresholdDirectionKey,\n        { type: \"ref\", ref: thresholdDirectionKey },\n        inputs\n      )) != null ? _b : eventType.checkRatios[0].ratio;\n      if (!healthRatio || !thresholdDirection) {\n        throw new Error(\"Failed to retrieve health ratio or direction\");\n      }\n      return {\n        alertFrequency: eventType.alertFrequency,\n        threshold: eventType.numberType === \"percentage\" ? healthRatio / 100 : healthRatio,\n        thresholdDirection: thresholdDirection === \"above\" ? \"above\" : \"below\"\n      };\n    }\n  }\n};\nvar getCustomFilter = (source, eventType, inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === eventType.filterType\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter\");\n  }\n  return {\n    filter,\n    filterOptions: getCustomFilterOptions(eventType, inputs)\n  };\n};\nvar getXMTPFilter = (source, _eventType, _inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"WEB3_CHAT_MESSAGES\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter: XMTP\");\n  }\n  return {\n    filter,\n    filterOptions: {}\n  };\n};\nvar getCreateSupportConversationFilter = (source, eventType, _inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"NOTIFI_CHAT_MESSAGES\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter: CreateSupportConversation\");\n  }\n  return {\n    filter,\n    filterOptions: {\n      alertFrequency: eventType.alertFrequency\n    }\n  };\n};\nvar checkInputsIsWithIndex = (inputs) => {\n  if (\"index\" in inputs) {\n    return true;\n  }\n  return false;\n};\nvar getHealthCheckFilter = (source, eventType, inputs) => {\n  var _a;\n  const filter = (_a = source.applicableFilters) == null ? void 0 : _a.find(\n    (it) => (it == null ? void 0 : it.filterType) === \"VALUE_THRESHOLD\"\n  );\n  if (filter === void 0) {\n    throw new Error(\"Failed to retrieve filter: healthCheck\");\n  }\n  const checkRatios = resolveCheckRatioArrayRef(\n    eventType.name,\n    eventType.checkRatios,\n    inputs\n  );\n  let threshold = checkRatios[0].ratio;\n  let thresholdDirection = checkRatios[0].type;\n  const checkInputsIsWithCustomPercentage = (inputs2) => {\n    if (\"customPercentage\" in inputs2 && \"thresholdDirection\" in inputs2) {\n      return true;\n    }\n    return false;\n  };\n  if (checkInputsIsWithIndex(inputs)) {\n    threshold = checkRatios[inputs.index].ratio;\n    thresholdDirection = checkRatios[inputs.index].type;\n  } else if (checkInputsIsWithCustomPercentage(inputs)) {\n    threshold = inputs.customPercentage;\n    thresholdDirection = inputs.thresholdDirection;\n  }\n  return {\n    filter,\n    filterOptions: {\n      alertFrequency: eventType.alertFrequency,\n      threshold,\n      thresholdDirection\n    }\n  };\n};\nvar ensureSourceAndFilters = async (service, eventType, inputs) => {\n  const sources = await ensureSources(service, eventType, inputs);\n  const sourceGroup = await ensureSourceGroup(\n    service,\n    eventType.name,\n    sources.map((it) => it.id)\n  );\n  switch (eventType.type) {\n    case \"directPush\": {\n      const { filter, filterOptions } = getDirectPushFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"broadcast\": {\n      const { filter, filterOptions } = getBroadcastFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"tradingPair\": {\n      if (!tradingPairInputsValidator(inputs)) {\n        throw new Error(\"Invalid tradingPair inputs\");\n      }\n      const { filter, filterOptions } = getTradingPairFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"priceChange\": {\n      const { filter, filterOptions } = getPriceChangeFilter(\n        sources,\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"custom\": {\n      const { filter, filterOptions } = getCustomFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"XMTP\": {\n      const { filter, filterOptions } = getXMTPFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"healthCheck\": {\n      const { filter, filterOptions } = getHealthCheckFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"label\": {\n      throw new Error(\"Unsupported event type\");\n    }\n    case \"walletBalance\": {\n      const { filter, filterOptions } = getWalletBalanceSourceFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"fusionToggle\":\n    case \"fusion\": {\n      const { filter, filterOptions } = getFusionSourceFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n    case \"createSupportConversation\": {\n      const { filter, filterOptions } = getCreateSupportConversationFilter(\n        sources[0],\n        eventType,\n        inputs\n      );\n      return {\n        sourceGroup,\n        filter,\n        filterOptions\n      };\n    }\n  }\n};\n\n// lib/client/ensureTarget.ts\nvar ensureTarget = (create, fetch, identify, valueTransform) => {\n  return async (service, value) => {\n    if (value === void 0) {\n      return void 0;\n    }\n    const existing = await fetch(service);\n    const transformedValue = valueTransform !== void 0 ? valueTransform(value) : value;\n    const found = existing == null ? void 0 : existing.find((it) => identify(it) === transformedValue);\n    if (found !== void 0) {\n      return found.id;\n    }\n    const created = await create(service, transformedValue);\n    return created.id;\n  };\n};\nvar ensureEmail = ensureTarget(\n  async (service, value) => {\n    const mutation = await service.createEmailTarget({\n      name: value.toLowerCase(),\n      value: value.toLowerCase()\n    });\n    const result = mutation.createEmailTarget;\n    if (result === void 0) {\n      throw new Error(\"Failed to create email target\");\n    }\n    return result;\n  },\n  async (service) => {\n    const query = await service.getEmailTargets({});\n    return query.emailTarget;\n  },\n  (arg) => {\n    var _a;\n    return (_a = arg == null ? void 0 : arg.emailAddress) == null ? void 0 : _a.toLowerCase();\n  },\n  (value) => value.toLowerCase()\n);\nvar ensureSms = ensureTarget(\n  async (service, value) => {\n    const mutation = await service.createSmsTarget({\n      name: value,\n      value\n    });\n    const result = mutation.createSmsTarget;\n    if (result === void 0) {\n      throw new Error(\"Failed to create sms target\");\n    }\n    return result;\n  },\n  async (service) => {\n    const query = await service.getSmsTargets({});\n    return query.smsTarget;\n  },\n  (arg) => arg == null ? void 0 : arg.phoneNumber\n);\nvar ensureTelegram = ensureTarget(\n  async (service, value) => {\n    const mutation = await service.createTelegramTarget({\n      name: value.toLowerCase(),\n      value: value.toLowerCase()\n    });\n    const result = mutation.createTelegramTarget;\n    if (result === void 0) {\n      throw new Error(\"Failed to create telegramTarget\");\n    }\n    return result;\n  },\n  async (service) => {\n    const query = await service.getTelegramTargets({});\n    return query.telegramTarget;\n  },\n  (arg) => {\n    var _a;\n    return (_a = arg == null ? void 0 : arg.telegramId) == null ? void 0 : _a.toLowerCase();\n  },\n  (value) => value.toLowerCase()\n);\nvar ensureDiscord = ensureTarget(\n  async (service, value) => {\n    const mutation = await service.createDiscordTarget({\n      name: value,\n      value\n    });\n    const result = mutation.createDiscordTarget;\n    if (result === void 0) {\n      throw new Error(\"Failed to create discordTarget\");\n    }\n    return result;\n  },\n  async (service) => {\n    const query = await service.getDiscordTargets({});\n    return query.discordTarget;\n  },\n  (arg) => arg == null ? void 0 : arg.name,\n  () => \"Default\"\n);\nvar ensureWebhook = async (service, params) => {\n  if (params === void 0) {\n    return void 0;\n  }\n  const query = await service.getWebhookTargets({});\n  const existing = query.webhookTarget;\n  const found = existing == null ? void 0 : existing.find(\n    (it) => (it == null ? void 0 : it.url.toLowerCase()) === params.url.toLowerCase() && (it == null ? void 0 : it.format) === params.format\n  );\n  if (found !== void 0) {\n    return found.id;\n  }\n  const mutation = await service.createWebhookTarget(__spreadProps(__spreadValues({}, params), {\n    name: params.url.toLowerCase(),\n    url: params.url.toLowerCase()\n  }));\n  const created = mutation.createWebhookTarget;\n  if (created === void 0) {\n    throw new Error(\"Failed to create webhook target\");\n  }\n  return created.id;\n};\n\n// lib/storage/InMemoryStorageDriver.ts\nvar getEnvPrefix = (env) => {\n  switch (env) {\n    case \"Production\":\n      return \"notifi-jwt\";\n    case \"Development\":\n      return \"notifi-jwt:dev\";\n    case \"Staging\":\n      return \"notifi-jwt:stg\";\n    case \"Local\":\n      return \"notifi-jwt:local\";\n  }\n};\nvar createInMemoryStorageDriver = (config) => {\n  let keyPrefix = `${getEnvPrefix(config.env)}:${config.tenantId}:${config.walletBlockchain}`;\n  if (checkIsConfigWithPublicKeyAndAddress(config)) {\n    keyPrefix += `:${config.accountAddress}:${config.authenticationKey}`;\n  } else {\n    keyPrefix += `:${config.walletPublicKey}`;\n  }\n  const storageBackend = {};\n  const storageDriver = {\n    get: (key) => {\n      const newKey = `${keyPrefix}:${key}`;\n      let result = null;\n      if (newKey in storageBackend) {\n        const json = storageBackend[newKey];\n        result = JSON.parse(json);\n      }\n      return Promise.resolve(result);\n    },\n    set: (key, newValue) => {\n      const newKey = `${keyPrefix}:${key}`;\n      if (newValue === null) {\n        delete storageBackend[newKey];\n      } else {\n        storageBackend[newKey] = JSON.stringify(newValue);\n      }\n      return Promise.resolve();\n    },\n    has: (key) => {\n      const newKey = `${keyPrefix}:${key}`;\n      return Promise.resolve(newKey in storageBackend);\n    }\n  };\n  return storageDriver;\n};\n\n// lib/storage/NotifiFrontendStorage.ts\nvar KEY_AUTHORIZATION = \"authorization\";\nvar KEY_ROLES = \"roles\";\nvar NotifiFrontendStorage = class {\n  constructor(_driver) {\n    this._driver = _driver;\n  }\n  getAuthorization() {\n    return this._driver.get(KEY_AUTHORIZATION);\n  }\n  setAuthorization(newValue) {\n    return this._driver.set(KEY_AUTHORIZATION, newValue);\n  }\n  hasAuthorization() {\n    return this._driver.has(KEY_AUTHORIZATION);\n  }\n  getRoles() {\n    return this._driver.get(KEY_ROLES);\n  }\n  setRoles(newValue) {\n    return this._driver.set(KEY_ROLES, newValue);\n  }\n  hasRoles() {\n    return this._driver.has(KEY_ROLES);\n  }\n};\n\n// lib/storage/LocalForageStorageDriver.ts\nimport localforage from \"localforage\";\nlocalforage.config({\n  name: \"notifi\"\n});\nvar getEnvPrefix2 = (env) => {\n  switch (env) {\n    case \"Production\":\n      return \"notifi-jwt\";\n    case \"Development\":\n      return \"notifi-jwt:dev\";\n    case \"Staging\":\n      return \"notifi-jwt:stg\";\n    case \"Local\":\n      return \"notifi-jwt:local\";\n  }\n};\nvar createLocalForageStorageDriver = (config) => {\n  let keyPrefix = `${getEnvPrefix2(config.env)}:${config.tenantId}:${config.walletBlockchain}`;\n  if (checkIsConfigWithPublicKeyAndAddress(config)) {\n    keyPrefix += `:${config.accountAddress}:${config.authenticationKey}`;\n  } else {\n    keyPrefix += `:${config.walletPublicKey}`;\n  }\n  const storageDriver = {\n    get: async (key) => {\n      const item = await localforage.getItem(`${keyPrefix}:${key}`);\n      return item;\n    },\n    set: async (key, newValue) => {\n      await localforage.setItem(`${keyPrefix}:${key}`, newValue);\n    },\n    has: async (key) => {\n      const keys = await localforage.keys();\n      return keys.indexOf(`${keyPrefix}:${key}`) >= 0;\n    }\n  };\n  return storageDriver;\n};\n\n// lib/client/NotifiFrontendClient.ts\nvar SIGNING_MESSAGE = `Sign in with Notifi \n\n    No password needed or gas is needed. \n\n    Clicking \\u201CApprove\\u201D only means you have proved this wallet is owned by you! \n\n    This request will not trigger any transaction or cost any gas fees. \n\n    Use of our website and service is subject to our terms of service and privacy policy. \n \n 'Nonce:' `;\nvar NotifiFrontendClient = class {\n  constructor(_configuration, _service, _storage) {\n    this._configuration = _configuration;\n    this._service = _service;\n    this._storage = _storage;\n    this._clientRandomUuid = null;\n    this._userState = null;\n  }\n  get userState() {\n    return this._userState;\n  }\n  async initialize() {\n    const [storedAuthorization, roles] = await Promise.all([\n      this._storage.getAuthorization(),\n      this._storage.getRoles()\n    ]);\n    let authorization = storedAuthorization;\n    if (authorization === null) {\n      this._service.setJwt(void 0);\n      const logOutStatus = {\n        status: \"loggedOut\"\n      };\n      this._userState = logOutStatus;\n      return logOutStatus;\n    }\n    const expiryDate = new Date(authorization.expiry);\n    const now = /* @__PURE__ */ new Date();\n    if (expiryDate <= now) {\n      this._service.setJwt(void 0);\n      const expiredStatus = {\n        status: \"expired\",\n        authorization\n      };\n      this._userState = expiredStatus;\n      return expiredStatus;\n    }\n    const refreshTime = /* @__PURE__ */ new Date();\n    refreshTime.setDate(now.getDate() + 7);\n    if (expiryDate < refreshTime) {\n      try {\n        const refreshMutation = await this._service.refreshAuthorization({});\n        const newAuthorization = refreshMutation.refreshAuthorization;\n        if (newAuthorization !== void 0) {\n          this._storage.setAuthorization(newAuthorization);\n          authorization = newAuthorization;\n        }\n      } catch (e) {\n        console.log(\"Failed to refresh Notifi token\", e);\n      }\n    }\n    this._service.setJwt(authorization.token);\n    const userState = {\n      status: \"authenticated\",\n      authorization,\n      roles: roles != null ? roles : []\n    };\n    this._userState = userState;\n    return userState;\n  }\n  async logOut() {\n    await Promise.all([\n      this._storage.setAuthorization(null),\n      this._storage.setRoles(null),\n      this._service.logOut()\n    ]);\n    return {\n      status: \"loggedOut\"\n    };\n  }\n  async logIn(signMessageParams) {\n    const timestamp = Math.round(Date.now() / 1e3);\n    const signature = await this._signMessage({\n      signMessageParams,\n      timestamp\n    });\n    const { tenantId, walletBlockchain } = this._configuration;\n    let loginResult = void 0;\n    switch (walletBlockchain) {\n      case \"BASE\":\n      case \"ETHEREUM\":\n      case \"POLYGON\":\n      case \"ARBITRUM\":\n      case \"AVALANCHE\":\n      case \"BINANCE\":\n      case \"OPTIMISM\":\n      case \"ZKSYNC\":\n      case \"SOLANA\": {\n        const result = await this._service.logInFromDapp({\n          walletBlockchain,\n          walletPublicKey: this._configuration.walletPublicKey,\n          dappAddress: tenantId,\n          timestamp,\n          signature\n        });\n        loginResult = result.logInFromDapp;\n        break;\n      }\n      case \"SUI\":\n      case \"ACALA\":\n      case \"NEAR\":\n      case \"INJECTIVE\":\n      case \"OSMOSIS\":\n      case \"NIBIRU\":\n      case \"APTOS\": {\n        const result = await this._service.logInFromDapp({\n          walletBlockchain,\n          walletPublicKey: this._configuration.authenticationKey,\n          accountId: this._configuration.accountAddress,\n          dappAddress: tenantId,\n          timestamp,\n          signature\n        });\n        loginResult = result.logInFromDapp;\n        break;\n      }\n    }\n    if (loginResult === void 0) {\n      return Promise.reject(\"Failed to login\");\n    }\n    await this._handleLogInResult(loginResult);\n    return loginResult;\n  }\n  async _signMessage({\n    signMessageParams,\n    timestamp\n  }) {\n    if (this._configuration.walletBlockchain !== signMessageParams.walletBlockchain) {\n      throw new Error(\n        \"Sign message params and configuration must have the same blockchain\"\n      );\n    }\n    switch (signMessageParams.walletBlockchain) {\n      case \"ETHEREUM\":\n      case \"POLYGON\":\n      case \"ARBITRUM\":\n      case \"AVALANCHE\":\n      case \"BINANCE\":\n      case \"OPTIMISM\": {\n        const { walletPublicKey, tenantId } = this._configuration;\n        const messageBuffer = new TextEncoder().encode(\n          `${SIGNING_MESSAGE}${walletPublicKey}${tenantId}${timestamp.toString()}`\n        );\n        const signedBuffer = await signMessageParams.signMessage(messageBuffer);\n        const signature = normalizeHexString(\n          Buffer.from(signedBuffer).toString(\"hex\")\n        );\n        return signature;\n      }\n      case \"OSMOSIS\":\n      case \"ZKSYNC\":\n      case \"INJECTIVE\": {\n        const { authenticationKey, tenantId } = this._configuration;\n        const messageBuffer = new TextEncoder().encode(\n          `${SIGNING_MESSAGE}${authenticationKey}${tenantId}${timestamp.toString()}`\n        );\n        const signedBuffer = await signMessageParams.signMessage(messageBuffer);\n        const signature = Buffer.from(signedBuffer).toString(\"base64\");\n        return signature;\n      }\n      case \"SOLANA\": {\n        const { walletPublicKey, tenantId } = this._configuration;\n        const messageBuffer = new TextEncoder().encode(\n          `${SIGNING_MESSAGE}${walletPublicKey}${tenantId}${timestamp.toString()}`\n        );\n        const signedBuffer = await signMessageParams.signMessage(messageBuffer);\n        const signature = Buffer.from(signedBuffer).toString(\"base64\");\n        return signature;\n      }\n      case \"ACALA\": {\n        const { accountAddress, tenantId } = this._configuration;\n        const message = `${SIGNING_MESSAGE}${accountAddress}${tenantId}${timestamp.toString()}`;\n        const signedBuffer = await signMessageParams.signMessage(\n          accountAddress,\n          message\n        );\n        return signedBuffer;\n      }\n      case \"APTOS\": {\n        const signature = await signMessageParams.signMessage(\n          SIGNING_MESSAGE,\n          timestamp\n        );\n        return signature;\n      }\n      case \"SUI\": {\n        const { accountAddress, tenantId } = this._configuration;\n        const messageBuffer = new TextEncoder().encode(\n          `${SIGNING_MESSAGE}${accountAddress}${tenantId}${timestamp.toString()}`\n        );\n        const signedBuffer = await signMessageParams.signMessage(messageBuffer);\n        const signature = signedBuffer.toString();\n        return signature;\n      }\n      case \"NEAR\": {\n        const { authenticationKey, accountAddress, tenantId } = this._configuration;\n        const message = `${`ed25519:` + authenticationKey}${tenantId}${accountAddress}${timestamp.toString()}`;\n        const textAsBuffer = new TextEncoder().encode(message);\n        const hashBuffer = await window.crypto.subtle.digest(\n          \"SHA-256\",\n          textAsBuffer\n        );\n        const messageBuffer = new Uint8Array(hashBuffer);\n        const signedBuffer = await signMessageParams.signMessage(messageBuffer);\n        const signature = Buffer.from(signedBuffer).toString(\"base64\");\n        return signature;\n      }\n      default:\n        return \"Chain not yet supported\";\n    }\n  }\n  async _handleLogInResult(user) {\n    const authorization = user == null ? void 0 : user.authorization;\n    const saveAuthorizationPromise = authorization !== void 0 ? this._storage.setAuthorization(authorization) : Promise.resolve();\n    const roles = user == null ? void 0 : user.roles;\n    const saveRolesPromise = roles !== void 0 ? this._storage.setRoles(roles.filter(notNullOrEmpty)) : Promise.resolve();\n    if (authorization && roles) {\n      const userState = {\n        status: \"authenticated\",\n        authorization,\n        roles: roles.filter((role) => !!role)\n      };\n      this._userState = userState;\n    }\n    await Promise.all([saveAuthorizationPromise, saveRolesPromise]);\n  }\n  async fetchData() {\n    return this._service.fetchData({});\n  }\n  async beginLoginViaTransaction({\n    walletBlockchain,\n    walletAddress\n  }) {\n    const { tenantId } = this._configuration;\n    const result = await this._service.beginLogInByTransaction({\n      walletAddress,\n      walletBlockchain,\n      dappAddress: tenantId\n    });\n    const nonce = result.beginLogInByTransaction.nonce;\n    if (nonce === null) {\n      throw new Error(\"Failed to begin login process\");\n    }\n    const ruuid = crypto.randomUUID();\n    this._clientRandomUuid = ruuid;\n    const encoder = new TextEncoder();\n    const data = encoder.encode(nonce + ruuid);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const logValue = \"Notifi Auth: 0x\" + hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n    return { nonce: logValue };\n  }\n  async completeLoginViaTransaction({\n    walletBlockchain,\n    walletAddress,\n    transactionSignature\n  }) {\n    const { tenantId } = this._configuration;\n    const clientRandomUuid = this._clientRandomUuid;\n    this._clientRandomUuid = null;\n    if (clientRandomUuid === null) {\n      throw new Error(\n        \"BeginLoginViaTransaction is required to be called first\"\n      );\n    }\n    const result = await this._service.completeLogInByTransaction({\n      walletAddress,\n      walletBlockchain,\n      dappAddress: tenantId,\n      randomUuid: clientRandomUuid,\n      transactionSignature\n    });\n    await this._handleLogInResult(result.completeLogInByTransaction);\n    return result;\n  }\n  async getTargetGroups() {\n    var _a, _b;\n    const query = await this._service.getTargetGroups({});\n    const results = (_b = (_a = query.targetGroup) == null ? void 0 : _a.filter(notNullOrEmpty)) != null ? _b : [];\n    return results;\n  }\n  async ensureTargetGroup({\n    name,\n    emailAddress,\n    phoneNumber,\n    telegramId,\n    webhook,\n    discordId\n  }) {\n    var _a;\n    const [\n      targetGroupsQuery,\n      emailTargetId,\n      smsTargetId,\n      telegramTargetId,\n      webhookTargetId,\n      discordTargetId\n    ] = await Promise.all([\n      this._service.getTargetGroups({}),\n      ensureEmail(this._service, emailAddress),\n      ensureSms(this._service, phoneNumber),\n      ensureTelegram(this._service, telegramId),\n      ensureWebhook(this._service, webhook),\n      ensureDiscord(this._service, discordId)\n    ]);\n    const emailTargetIds = emailTargetId === void 0 ? [] : [emailTargetId];\n    const smsTargetIds = smsTargetId === void 0 ? [] : [smsTargetId];\n    const telegramTargetIds = telegramTargetId === void 0 ? [] : [telegramTargetId];\n    const webhookTargetIds = webhookTargetId === void 0 ? [] : [webhookTargetId];\n    const discordTargetIds = discordTargetId === void 0 ? [] : [discordTargetId];\n    const existing = (_a = targetGroupsQuery.targetGroup) == null ? void 0 : _a.find(\n      (it) => (it == null ? void 0 : it.name) === name\n    );\n    if (existing !== void 0) {\n      return this._updateTargetGroup({\n        existing,\n        emailTargetIds,\n        smsTargetIds,\n        telegramTargetIds,\n        webhookTargetIds,\n        discordTargetIds\n      });\n    }\n    const createMutation = await this._service.createTargetGroup({\n      name,\n      emailTargetIds,\n      smsTargetIds,\n      telegramTargetIds,\n      webhookTargetIds,\n      discordTargetIds\n    });\n    if (createMutation.createTargetGroup === void 0) {\n      throw new Error(\"Failed to create target group\");\n    }\n    return createMutation.createTargetGroup;\n  }\n  async _updateTargetGroup({\n    existing,\n    emailTargetIds,\n    smsTargetIds,\n    telegramTargetIds,\n    webhookTargetIds,\n    discordTargetIds\n  }) {\n    var _a, _b, _c, _d, _e, _f;\n    if (areIdsEqual(emailTargetIds, (_a = existing.emailTargets) != null ? _a : []) && areIdsEqual(smsTargetIds, (_b = existing.smsTargets) != null ? _b : []) && areIdsEqual(telegramTargetIds, (_c = existing.telegramTargets) != null ? _c : []) && areIdsEqual(webhookTargetIds, (_d = existing.webhookTargets) != null ? _d : []) && areIdsEqual(discordTargetIds, (_e = existing.discordTargets) != null ? _e : [])) {\n      return existing;\n    }\n    const updateMutation = await this._service.updateTargetGroup({\n      id: existing.id,\n      name: (_f = existing.name) != null ? _f : existing.id,\n      emailTargetIds,\n      smsTargetIds,\n      telegramTargetIds,\n      webhookTargetIds,\n      discordTargetIds\n    });\n    const updated = updateMutation.updateTargetGroup;\n    if (updated === void 0) {\n      throw new Error(\"Failed to update target group\");\n    }\n    return updated;\n  }\n  async getSourceGroups() {\n    var _a, _b;\n    const query = await this._service.getSourceGroups({});\n    const results = (_b = (_a = query.sourceGroup) == null ? void 0 : _a.filter(notNullOrEmpty)) != null ? _b : [];\n    return results;\n  }\n  async getAlerts() {\n    var _a, _b;\n    const query = await this._service.getAlerts({});\n    return (_b = (_a = query.alert) == null ? void 0 : _a.filter(notNullOrEmpty)) != null ? _b : [];\n  }\n  async ensureAlert({\n    eventType,\n    inputs,\n    targetGroupName = \"Default\"\n  }) {\n    var _a, _b;\n    const [alertsQuery, targetGroupsQuery, sourceAndFilters] = await Promise.all([\n      this._service.getAlerts({}),\n      this._service.getTargetGroups({}),\n      ensureSourceAndFilters(this._service, eventType, inputs)\n    ]);\n    const targetGroup = (_a = targetGroupsQuery.targetGroup) == null ? void 0 : _a.find(\n      (it) => (it == null ? void 0 : it.name) === targetGroupName\n    );\n    if (targetGroup === void 0) {\n      throw new Error(\"Target group does not exist\");\n    }\n    const { sourceGroup, filter, filterOptions } = sourceAndFilters;\n    const packedOptions = packFilterOptions(filterOptions);\n    const existing = (_b = alertsQuery.alert) == null ? void 0 : _b.find(\n      (it) => it !== void 0 && it.name === eventType.name\n    );\n    if (existing !== void 0) {\n      if (existing.sourceGroup.id === sourceGroup.id && existing.targetGroup.id === targetGroup.id && existing.filter.id === filter.id && existing.filterOptions === packedOptions) {\n        return existing;\n      }\n      await this.deleteAlert({\n        id: existing.id\n      });\n    }\n    const mutation = await this._service.createAlert({\n      name: eventType.name,\n      sourceGroupId: sourceGroup.id,\n      filterId: filter.id,\n      targetGroupId: targetGroup.id,\n      filterOptions: packedOptions,\n      groupName: \"managed\"\n    });\n    const created = mutation.createAlert;\n    if (created === void 0) {\n      throw new Error(\"Failed to create alert\");\n    }\n    return created;\n  }\n  async deleteAlert({\n    id\n  }) {\n    var _a;\n    const mutation = await this._service.deleteAlert({ id });\n    const result = (_a = mutation.deleteAlert) == null ? void 0 : _a.id;\n    if (result === void 0) {\n      throw new Error(\"Failed to delete alert\");\n    }\n  }\n  async updateWallets() {\n    const walletEventTypeItem = {\n      name: \"User Wallets\",\n      type: \"walletBalance\"\n    };\n    const result = await ensureSourceAndFilters(\n      this._service,\n      walletEventTypeItem,\n      {}\n    );\n    return result;\n  }\n  /**\n   *@deprecated\n   *@description Use getFusionNotificationHistory instead\n   */\n  async getNotificationHistory(variables) {\n    var _a, _b;\n    const query = await this._service.getNotificationHistory(variables);\n    const nodes = (_a = query.notificationHistory) == null ? void 0 : _a.nodes;\n    const pageInfo = (_b = query.notificationHistory) == null ? void 0 : _b.pageInfo;\n    if (nodes === void 0 || pageInfo === void 0) {\n      throw new Error(\"Failed to fetch notification history\");\n    }\n    return { pageInfo, nodes };\n  }\n  async getUnreadNotificationHistoryCount() {\n    const query = await this._service.getUnreadNotificationHistoryCount({});\n    const result = query.unreadNotificationHistoryCount;\n    if (!result) {\n      throw new Error(\"Failed to fetch unread notification history count\");\n    }\n    return result;\n  }\n  async getUserSettings() {\n    const query = await this._service.getUserSettings({});\n    const result = query.userSettings;\n    if (!result) {\n      throw new Error(\"Failed to fetch user settings\");\n    }\n    return result;\n  }\n  async getFusionNotificationHistory(variables) {\n    var _a, _b;\n    const query = await this._service.getFusionNotificationHistory(variables);\n    const nodes = (_a = query.fusionNotificationHistory) == null ? void 0 : _a.nodes;\n    const pageInfo = (_b = query.fusionNotificationHistory) == null ? void 0 : _b.pageInfo;\n    if (nodes === void 0 || pageInfo === void 0) {\n      throw new Error(\"Failed to fetch notification history\");\n    }\n    return { pageInfo, nodes };\n  }\n  async fetchSubscriptionCard(variables) {\n    const query = await this._service.findTenantConfig({\n      input: __spreadProps(__spreadValues({}, variables), {\n        tenant: this._configuration.tenantId\n      })\n    });\n    const result = query.findTenantConfig;\n    if (result === void 0) {\n      throw new Error(\"Failed to find tenant config\");\n    }\n    const value = result.dataJson;\n    if (value === void 0) {\n      throw new Error(\"Invalid config data\");\n    }\n    const obj = JSON.parse(value);\n    let card = void 0;\n    switch (obj.version) {\n      case \"v1\": {\n        card = obj;\n        break;\n      }\n      case \"IntercomV1\": {\n        card = obj;\n      }\n    }\n    if (card === void 0) {\n      throw new Error(\"Unsupported config format\");\n    }\n    return card;\n  }\n  async copyAuthorization(config) {\n    var _a;\n    const auth = await this._storage.getAuthorization();\n    const roles = await this._storage.getRoles();\n    const driver = ((_a = config.storageOption) == null ? void 0 : _a.driverType) === \"InMemory\" ? createInMemoryStorageDriver(config) : createLocalForageStorageDriver(config);\n    const otherStorage = new NotifiFrontendStorage(driver);\n    await Promise.all([\n      otherStorage.setAuthorization(auth),\n      otherStorage.setRoles(roles)\n    ]);\n  }\n  async sendEmailTargetVerification({\n    targetId\n  }) {\n    var _a;\n    const emailTarget = await this._service.sendEmailTargetVerificationRequest({\n      targetId\n    });\n    const id = (_a = emailTarget.sendEmailTargetVerificationRequest) == null ? void 0 : _a.id;\n    if (id === void 0) {\n      throw new Error(`Unknown error requesting verification`);\n    }\n    return id;\n  }\n  async subscribeWallet(params) {\n    const { walletBlockchain, signMessage, walletPublicKey } = params.walletParams;\n    const signMessageParams = {\n      walletBlockchain,\n      signMessage\n    };\n    if (this._userState && this._userState.status === \"authenticated\") {\n      await this.logIn(signMessageParams);\n    }\n    const timestamp = Math.round(Date.now() / 1e3);\n    const signature = await this._signMessage({\n      signMessageParams,\n      timestamp\n    });\n    const connectedWallet = await this._service.connectWallet({\n      walletBlockchain,\n      walletPublicKey,\n      accountId: walletBlockchain === \"APTOS\" || walletBlockchain === \"ACALA\" || walletBlockchain === \"NEAR\" || walletBlockchain === \"SUI\" ? params.walletParams.accountAddress : void 0,\n      signature,\n      timestamp,\n      connectWalletConflictResolutionTechnique: params.connectWalletConflictResolutionTechnique\n    });\n    return connectedWallet;\n  }\n  async getConversationMessages(input) {\n    const query = await this._service.getConversationMessages(input);\n    return query;\n  }\n  async sendConversationMessages(input) {\n    const mutation = await this._service.sendConversationMessages(input);\n    return mutation;\n  }\n  async createSupportConversation(input) {\n    const mutation = await this._service.createSupportConversation(input);\n    return mutation;\n  }\n  async createDiscordTarget(input) {\n    const mutation = await this._service.createDiscordTarget({\n      name: input,\n      value: input\n    });\n    return mutation.createDiscordTarget;\n  }\n  async markFusionNotificationHistoryAsRead(input) {\n    const mutation = await this._service.markFusionNotificationHistoryAsRead(\n      input\n    );\n    return mutation;\n  }\n  async updateUserSettings(input) {\n    const mutation = await this._service.updateUserSettings(input);\n    return mutation;\n  }\n};\n\n// lib/client/clientFactory.ts\nimport { NotifiService } from \"@notifi-network/notifi-graphql\";\nimport { GraphQLClient } from \"graphql-request\";\nvar newNotifiStorage = (config) => {\n  var _a;\n  const driver = ((_a = config.storageOption) == null ? void 0 : _a.driverType) === \"InMemory\" ? createInMemoryStorageDriver(config) : createLocalForageStorageDriver(config);\n  return new NotifiFrontendStorage(driver);\n};\nvar newNotifiService = (config) => {\n  const url = envUrl(config.env);\n  const client = new GraphQLClient(url);\n  return new NotifiService(client);\n};\nvar newFrontendClient = (args) => {\n  const config = newFrontendConfig(args);\n  const service = newNotifiService(config);\n  const storage = newNotifiStorage(config);\n  return new NotifiFrontendClient(config, service, storage);\n};\n\n// lib/models/IntercomCardConfig.ts\nvar LABEL_TYPE_MENU_LABELS = {\n  ChatCompanyName: \"Chat Company Name\",\n  ChatFTUTitle: \"Chat FTU Title\",\n  ChatFTUDescription: \"Chat FTU Description\",\n  ChatFTUSubTitle: \"Chat FTU Sub Title\",\n  ChatBannerTitle: \"Chat Banner Title\",\n  ChatIntroQuestion: \"Chat Intro Question\"\n};\nexport {\n  LABEL_TYPE_MENU_LABELS,\n  NotifiFrontendClient,\n  NotifiFrontendStorage,\n  SIGNING_MESSAGE,\n  checkIsConfigWithPublicKeyAndAddress,\n  createInMemoryStorageDriver,\n  createLocalForageStorageDriver,\n  ensureDiscord,\n  ensureEmail,\n  ensureSms,\n  ensureSourceAndFilters,\n  ensureTarget,\n  ensureTelegram,\n  ensureWebhook,\n  envUrl,\n  newFrontendClient,\n  newFrontendConfig,\n  newNotifiService,\n  newNotifiStorage,\n  normalizeHexString,\n  notNullOrEmpty,\n  packFilterOptions\n};\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\n\n// lib/NotifiService.ts\nimport { v4 as uuid } from \"uuid\";\n\n// package.json\nvar version = \"0.90.8\";\n\n// ../../node_modules/tslib/tslib.es6.js\nvar __assign = function() {\n  __assign = Object.assign || function __assign2(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s)\n        if (Object.prototype.hasOwnProperty.call(s, p))\n          t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n// ../../node_modules/graphql-tag/lib/index.js\nimport { parse } from \"graphql\";\nvar docCache = /* @__PURE__ */ new Map();\nvar fragmentSourceMap = /* @__PURE__ */ new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, \" \").trim();\n}\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n  var seenKeys = /* @__PURE__ */ new Set();\n  var definitions = [];\n  ast.definitions.forEach(function(fragmentDefinition) {\n    if (fragmentDefinition.kind === \"FragmentDefinition\") {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n      var sourceKeySet = fragmentSourceMap.get(fragmentName);\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\ngraphql-tag enforces all fragment names across your application to be unique; read more about\\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = /* @__PURE__ */ new Set());\n      }\n      sourceKeySet.add(sourceKey);\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n  return __assign(__assign({}, ast), { definitions });\n}\nfunction stripLoc(doc) {\n  var workSet = new Set(doc.definitions);\n  workSet.forEach(function(node) {\n    if (node.loc)\n      delete node.loc;\n    Object.keys(node).forEach(function(key) {\n      var value = node[key];\n      if (value && typeof value === \"object\") {\n        workSet.add(value);\n      }\n    });\n  });\n  var loc = doc.loc;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n  return doc;\n}\nfunction parseDocument(source) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    var parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables\n    });\n    if (!parsed || parsed.kind !== \"Document\") {\n      throw new Error(\"Not a valid GraphQL document.\");\n    }\n    docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n  }\n  return docCache.get(cacheKey);\n}\nfunction gql(literals) {\n  var args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n  if (typeof literals === \"string\") {\n    literals = [literals];\n  }\n  var result = literals[0];\n  args.forEach(function(arg, i) {\n    if (arg && arg.kind === \"Document\") {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n  return parseDocument(result);\n}\nfunction resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\nvar extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables\n};\n(function(gql_1) {\n  gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nvar lib_default = gql;\n\n// lib/gql/generated.ts\nvar FilterFragmentFragmentDoc = lib_default`\n    fragment FilterFragment on Filter {\n  id\n  name\n  filterType\n}\n    `;\nvar SourceFragmentFragmentDoc = lib_default`\n    fragment SourceFragment on Source {\n  id\n  name\n  type\n  blockchainAddress\n  fusionEventTypeId\n  applicableFilters {\n    ...FilterFragment\n  }\n}\n    ${FilterFragmentFragmentDoc}`;\nvar SourceGroupFragmentFragmentDoc = lib_default`\n    fragment SourceGroupFragment on SourceGroup {\n  id\n  name\n  sources {\n    ...SourceFragment\n  }\n}\n    ${SourceFragmentFragmentDoc}`;\nvar EmailTargetFragmentFragmentDoc = lib_default`\n    fragment EmailTargetFragment on EmailTarget {\n  emailAddress\n  id\n  isConfirmed\n  name\n}\n    `;\nvar SmsTargetFragmentFragmentDoc = lib_default`\n    fragment SmsTargetFragment on SmsTarget {\n  id\n  isConfirmed\n  name\n  phoneNumber\n}\n    `;\nvar TelegramTargetFragmentFragmentDoc = lib_default`\n    fragment TelegramTargetFragment on TelegramTarget {\n  id\n  isConfirmed\n  name\n  telegramId\n  confirmationUrl\n}\n    `;\nvar WebhookTargetFragmentFragmentDoc = lib_default`\n    fragment WebhookTargetFragment on WebhookTarget {\n  id\n  url\n  status\n  format\n  headers {\n    key\n    value\n  }\n  name\n}\n    `;\nvar DiscordTargetFragmentFragmentDoc = lib_default`\n    fragment DiscordTargetFragment on DiscordTarget {\n  id\n  discordAccountId\n  discriminator\n  isConfirmed\n  username\n  name\n  userStatus\n  verificationLink\n  discordServerInviteLink\n}\n    `;\nvar TargetGroupFragmentFragmentDoc = lib_default`\n    fragment TargetGroupFragment on TargetGroup {\n  id\n  name\n  emailTargets {\n    ...EmailTargetFragment\n  }\n  smsTargets {\n    ...SmsTargetFragment\n  }\n  telegramTargets {\n    ...TelegramTargetFragment\n  }\n  webhookTargets {\n    ...WebhookTargetFragment\n  }\n  discordTargets {\n    ...DiscordTargetFragment\n  }\n}\n    ${EmailTargetFragmentFragmentDoc}\n${SmsTargetFragmentFragmentDoc}\n${TelegramTargetFragmentFragmentDoc}\n${WebhookTargetFragmentFragmentDoc}\n${DiscordTargetFragmentFragmentDoc}`;\nvar AlertFragmentFragmentDoc = lib_default`\n    fragment AlertFragment on Alert {\n  id\n  groupName\n  name\n  filterOptions\n  filter {\n    ...FilterFragment\n  }\n  sourceGroup {\n    ...SourceGroupFragment\n  }\n  targetGroup {\n    ...TargetGroupFragment\n  }\n}\n    ${FilterFragmentFragmentDoc}\n${SourceGroupFragmentFragmentDoc}\n${TargetGroupFragmentFragmentDoc}`;\nvar ConnectedWalletFragmentFragmentDoc = lib_default`\n    fragment ConnectedWalletFragment on ConnectedWallet {\n  address\n  walletBlockchain\n}\n    `;\nvar ConvMessagePageInfoFragmentDoc = lib_default`\n    fragment ConvMessagePageInfo on PageInfo {\n  hasNextPage\n  endCursor\n}\n    `;\nvar ParticipantFragmentDoc = lib_default`\n    fragment Participant on ConversationParticipant {\n  conversationId\n  conversationParticipantType\n  profile {\n    avatarData\n    avatarDataType\n    id\n    preferredAddress\n    preferredBlockchain\n    preferredName\n  }\n  resolvedName\n  userId\n  walletAddress\n  walletBlockchain\n}\n    `;\nvar ConversationMessageFragmentDoc = lib_default`\n    fragment ConversationMessage on ConversationMessage {\n  id\n  userId\n  conversationId\n  createdDate\n  updatedDate\n  message\n  conversationParticipant {\n    ...Participant\n  }\n}\n    ${ParticipantFragmentDoc}`;\nvar FusionNotificationHistoryEntryFragmentFragmentDoc = lib_default`\n    fragment FusionNotificationHistoryEntryFragment on FusionNotificationHistoryEntry {\n  __typename\n  id\n  createdDate\n  read\n  fusionEventVariables\n  detail {\n    __typename\n    ... on AccountBalanceChangedEventDetails {\n      walletBlockchain\n      direction\n      newValue\n      previousValue\n      tokenSymbol\n      isWhaleWatch\n    }\n    ... on BroadcastMessageEventDetails {\n      messageType: type\n      subject\n      message\n      messageHtml\n    }\n    ... on DirectTenantMessageEventDetails {\n      tenantName\n      targetTemplatesJson\n      templateVariablesJson\n    }\n    ... on NftCollectionsReportEventDetails {\n      type\n      providerName\n      sourceLink\n      collections {\n        collectionId\n        name\n        imgUrl\n        volume1Day\n        volume1DayChange\n      }\n    }\n    ... on ChatMessageReceivedEventDetails {\n      senderName\n      conversationId\n      messageId\n      senderId\n      senderBlockchain\n      senderName\n      messageBody\n    }\n    ... on DAOProposalChangedEventDetails {\n      tenantName\n      proposalTitle: title\n      description\n      state\n      daoUrl\n      proposalUrl\n    }\n    ... on NftAuctionChangedEventDetails {\n      auctionTitle: title\n      auctionUrl\n      walletBlockchain\n      highBidAmount\n      highBidSymbol\n      imageUrl\n    }\n    ... on WalletsActivityReportEventDetails {\n      providerName\n      sourceLink\n      walletActivityType: type\n      wallets {\n        address\n        volume1Day\n        maxPurchase1Day\n        maxPurchaseName\n        maxPurchaseImgUrl\n        maxPurchaseTokenAddress\n      }\n    }\n    ... on HealthValueOverThresholdEventDetails {\n      name\n      value\n      threshold\n      url\n    }\n    ... on GenericEventDetails {\n      sourceName\n      notificationTypeName\n      genericMessage: message\n      genericMessageHtml: messageHtml\n      eventDetailsJson\n      action {\n        name\n        url\n      }\n      icon\n    }\n  }\n}\n    `;\nvar NotificationHistoryEntryFragmentFragmentDoc = lib_default`\n    fragment NotificationHistoryEntryFragment on NotificationHistoryEntry {\n  __typename\n  id\n  createdDate\n  eventId\n  read\n  sourceAddress\n  category\n  transactionSignature\n  targets {\n    type\n    name\n  }\n  detail {\n    __typename\n    ... on AccountBalanceChangedEventDetails {\n      walletBlockchain\n      direction\n      newValue\n      previousValue\n      tokenSymbol\n      isWhaleWatch\n    }\n    ... on BroadcastMessageEventDetails {\n      messageType: type\n      subject\n      message\n      messageHtml\n    }\n    ... on DirectTenantMessageEventDetails {\n      tenantName\n      targetTemplatesJson\n      templateVariablesJson\n    }\n    ... on NftCollectionsReportEventDetails {\n      type\n      providerName\n      sourceLink\n      collections {\n        collectionId\n        name\n        imgUrl\n        volume1Day\n        volume1DayChange\n      }\n    }\n    ... on ChatMessageReceivedEventDetails {\n      senderName\n      conversationId\n      messageId\n      senderId\n      senderBlockchain\n      senderName\n      messageBody\n    }\n    ... on DAOProposalChangedEventDetails {\n      tenantName\n      proposalTitle: title\n      description\n      state\n      daoUrl\n      proposalUrl\n    }\n    ... on NftAuctionChangedEventDetails {\n      auctionTitle: title\n      auctionUrl\n      walletBlockchain\n      highBidAmount\n      highBidSymbol\n      imageUrl\n    }\n    ... on WalletsActivityReportEventDetails {\n      providerName\n      sourceLink\n      walletActivityType: type\n      wallets {\n        address\n        volume1Day\n        maxPurchase1Day\n        maxPurchaseName\n        maxPurchaseImgUrl\n        maxPurchaseTokenAddress\n      }\n    }\n    ... on HealthValueOverThresholdEventDetails {\n      name\n      value\n      threshold\n      url\n    }\n    ... on GenericEventDetails {\n      sourceName\n      notificationTypeName\n      genericMessage: message\n      genericMessageHtml: messageHtml\n      eventDetailsJson\n      action {\n        name\n        url\n      }\n      icon\n    }\n  }\n}\n    `;\nvar PageInfoFragmentFragmentDoc = lib_default`\n    fragment PageInfoFragment on PageInfo {\n  hasNextPage\n  endCursor\n}\n    `;\nvar TenantConfigFragmentFragmentDoc = lib_default`\n    fragment TenantConfigFragment on TenantConfig {\n  id\n  type\n  dataJson\n}\n    `;\nvar TenantUserAlertFragmentFragmentDoc = lib_default`\n    fragment TenantUserAlertFragment on TenantUserAlert {\n  id\n  name\n  groupName\n  filterOptions\n  filter {\n    ...FilterFragment\n  }\n  sourceGroup {\n    ...SourceGroupFragment\n  }\n  targetGroup {\n    hasVerifiedFcm\n    hasVerifiedSms\n    hasVerifiedWeb3\n    hasVerifiedEmails\n    hasVerifiedWebhook\n    hasVerifiedDiscord\n    hasVerifiedTelegram\n  }\n}\n    ${FilterFragmentFragmentDoc}\n${SourceGroupFragmentFragmentDoc}`;\nvar TenantConnectedWalletFragmentFragmentDoc = lib_default`\n    fragment TenantConnectedWalletFragment on TenantConnectedWallet {\n  address\n  walletBlockchain\n}\n    `;\nvar TenantUserFragmentFragmentDoc = lib_default`\n    fragment TenantUserFragment on TenantUser {\n  id\n  alerts {\n    ...TenantUserAlertFragment\n  }\n  connectedWallets {\n    ...TenantConnectedWalletFragment\n  }\n}\n    ${TenantUserAlertFragmentFragmentDoc}\n${TenantConnectedWalletFragmentFragmentDoc}`;\nvar AuthorizationFragmentFragmentDoc = lib_default`\n    fragment AuthorizationFragment on Authorization {\n  token\n  expiry\n}\n    `;\nvar UserFragmentFragmentDoc = lib_default`\n    fragment UserFragment on User {\n  email\n  emailConfirmed\n  authorization {\n    ...AuthorizationFragment\n  }\n  roles\n}\n    ${AuthorizationFragmentFragmentDoc}`;\nvar UserTopicFragmentFragmentDoc = lib_default`\n    fragment UserTopicFragment on UserTopic {\n  name\n  topicName\n  targetCollections\n  targetTemplate\n}\n    `;\nvar AddSourceToSourceGroupDocument = lib_default`\n    mutation addSourceToSourceGroup($input: AddSourceToSourceGroupInput!) {\n  addSourceToSourceGroup(addSourceToSourceGroupInput: $input) {\n    ...SourceGroupFragment\n  }\n}\n    ${SourceGroupFragmentFragmentDoc}`;\nvar BeginLogInByTransactionDocument = lib_default`\n    mutation beginLogInByTransaction($walletAddress: String!, $walletBlockchain: WalletBlockchain!, $dappAddress: String!) {\n  beginLogInByTransaction(\n    beginLogInByTransactionInput: {walletAddress: $walletAddress, walletBlockchain: $walletBlockchain, dappAddress: $dappAddress}\n  ) {\n    nonce\n  }\n}\n    `;\nvar BroadcastMessageDocument = lib_default`\n    mutation broadcastMessage($idempotencyKey: String, $topicName: String!, $targetTemplates: [KeyValuePairOfTargetTypeAndStringInput!], $variables: [KeyValuePairOfStringAndStringInput!], $timestamp: Long!, $walletBlockchain: WalletBlockchain!, $signature: String!) {\n  broadcastMessage(\n    broadcastMessageInput: {idempotencyKey: $idempotencyKey, sourceAddress: $topicName, targetTemplates: $targetTemplates, variables: $variables, timestamp: $timestamp, walletBlockchain: $walletBlockchain}\n    signature: $signature\n  ) {\n    id\n  }\n}\n    `;\nvar CompleteLogInByTransactionDocument = lib_default`\n    mutation completeLogInByTransaction($walletAddress: String!, $walletBlockchain: WalletBlockchain!, $dappAddress: String!, $randomUuid: String!, $transactionSignature: String!) {\n  completeLogInByTransaction(\n    completeLogInByTransactionInput: {walletAddress: $walletAddress, walletBlockchain: $walletBlockchain, dappAddress: $dappAddress, randomUuid: $randomUuid, transactionSignature: $transactionSignature}\n  ) {\n    ...UserFragment\n  }\n}\n    ${UserFragmentFragmentDoc}`;\nvar ConnectWalletDocument = lib_default`\n    mutation connectWallet($walletPublicKey: String!, $timestamp: Long!, $signature: String!, $walletBlockchain: WalletBlockchain!, $accountId: String, $connectWalletConflictResolutionTechnique: ConnectWalletConflictResolutionTechnique) {\n  connectWallet(\n    connectWalletInput: {walletPublicKey: $walletPublicKey, timestamp: $timestamp, walletBlockchain: $walletBlockchain, accountId: $accountId, connectWalletConflictResolutionTechnique: $connectWalletConflictResolutionTechnique}\n    signature: $signature\n  ) {\n    ...ConnectedWalletFragment\n  }\n}\n    ${ConnectedWalletFragmentFragmentDoc}`;\nvar CreateAlertDocument = lib_default`\n    mutation createAlert($name: String!, $sourceGroupId: String!, $filterId: String!, $targetGroupId: String!, $filterOptions: String!, $groupName: String!) {\n  createAlert(\n    alertInput: {name: $name, sourceGroupId: $sourceGroupId, filterId: $filterId, targetGroupId: $targetGroupId, filterOptions: $filterOptions, groupName: $groupName}\n  ) {\n    ...AlertFragment\n  }\n}\n    ${AlertFragmentFragmentDoc}`;\nvar CreateDirectPushAlertDocument = lib_default`\n    mutation createDirectPushAlert($input: CreateDirectPushAlertInput!) {\n  createDirectPushAlert(createDirectPushAlertInput: $input) {\n    ...AlertFragment\n  }\n}\n    ${AlertFragmentFragmentDoc}`;\nvar CreateDiscordTargetDocument = lib_default`\n    mutation createDiscordTarget($name: String!, $value: String!) {\n  createDiscordTarget(createTargetInput: {name: $name, value: $value}) {\n    ...DiscordTargetFragment\n  }\n}\n    ${DiscordTargetFragmentFragmentDoc}`;\nvar CreateEmailTargetDocument = lib_default`\n    mutation createEmailTarget($name: String!, $value: String!) {\n  createEmailTarget(createTargetInput: {name: $name, value: $value}) {\n    ...EmailTargetFragment\n  }\n}\n    ${EmailTargetFragmentFragmentDoc}`;\nvar CreateSmsTargetDocument = lib_default`\n    mutation createSmsTarget($name: String!, $value: String!) {\n  createSmsTarget(createTargetInput: {name: $name, value: $value}) {\n    ...SmsTargetFragment\n  }\n}\n    ${SmsTargetFragmentFragmentDoc}`;\nvar CreateSourceDocument = lib_default`\n    mutation createSource($name: String, $blockchainAddress: String!, $type: SourceType!, $fusionEventTypeId: String) {\n  createSource(\n    createSourceInput: {name: $name, blockchainAddress: $blockchainAddress, type: $type, fusionEventTypeId: $fusionEventTypeId}\n  ) {\n    ...SourceFragment\n  }\n}\n    ${SourceFragmentFragmentDoc}`;\nvar CreateSourceGroupDocument = lib_default`\n    mutation createSourceGroup($name: String!, $sourceIds: [String!]!) {\n  createSourceGroup(sourceGroupInput: {name: $name, sourceIds: $sourceIds}) {\n    ...SourceGroupFragment\n  }\n}\n    ${SourceGroupFragmentFragmentDoc}`;\nvar CreateSupportConversationDocument = lib_default`\n    mutation createSupportConversation {\n  createSupportConversation {\n    id\n    conversationType\n    conversationGates {\n      id\n    }\n    name\n    createdDate\n    participants {\n      conversationParticipantType\n      profile {\n        id\n        preferredAddress\n        preferredName\n        avatarData\n        avatarDataType\n      }\n      resolvedName\n    }\n    backgroundImageUrl\n  }\n}\n    `;\nvar CreateTargetGroupDocument = lib_default`\n    mutation createTargetGroup($name: String!, $emailTargetIds: [String!]!, $smsTargetIds: [String!]!, $telegramTargetIds: [String!]!, $webhookTargetIds: [String!]!, $discordTargetIds: [String!]!) {\n  createTargetGroup(\n    targetGroupInput: {name: $name, emailTargetIds: $emailTargetIds, smsTargetIds: $smsTargetIds, telegramTargetIds: $telegramTargetIds, webhookTargetIds: $webhookTargetIds, discordTargetIds: $discordTargetIds}\n  ) {\n    ...TargetGroupFragment\n  }\n}\n    ${TargetGroupFragmentFragmentDoc}`;\nvar CreateTelegramTargetDocument = lib_default`\n    mutation createTelegramTarget($name: String!, $value: String!) {\n  createTelegramTarget(createTargetInput: {name: $name, value: $value}) {\n    ...TelegramTargetFragment\n  }\n}\n    ${TelegramTargetFragmentFragmentDoc}`;\nvar CreateTenantUserDocument = lib_default`\n    mutation createTenantUser($input: CreateTenantUserInput!) {\n  createTenantUser(createTenantUserInput: $input) {\n    ...TenantUserFragment\n  }\n}\n    ${TenantUserFragmentFragmentDoc}`;\nvar CreateWebhookTargetDocument = lib_default`\n    mutation createWebhookTarget($name: String!, $url: String!, $format: WebhookPayloadFormat!, $headers: [KeyValuePairOfStringAndStringInput!]!) {\n  createWebhookTarget(\n    createTargetInput: {name: $name, url: $url, format: $format, headers: $headers}\n  ) {\n    ...WebhookTargetFragment\n  }\n}\n    ${WebhookTargetFragmentFragmentDoc}`;\nvar DeleteAlertDocument = lib_default`\n    mutation deleteAlert($id: String!) {\n  deleteAlert(alertId: $id) {\n    id\n  }\n}\n    `;\nvar DeleteDirectPushAlertDocument = lib_default`\n    mutation deleteDirectPushAlert($input: DeleteDirectPushAlertInput!) {\n  deleteDirectPushAlert(deleteDirectPushAlertInput: $input) {\n    id\n  }\n}\n    `;\nvar DeleteSourceGroupDocument = lib_default`\n    mutation deleteSourceGroup($id: String!) {\n  deleteSourceGroup(sourceGroupInput: {id: $id}) {\n    id\n  }\n}\n    `;\nvar DeleteTargetGroupDocument = lib_default`\n    mutation deleteTargetGroup($id: String!) {\n  deleteTargetGroup(targetGroupInput: {id: $id}) {\n    id\n  }\n}\n    `;\nvar DeleteUserAlertDocument = lib_default`\n    mutation deleteUserAlert($alertId: String!) {\n  deleteUserAlert(alertId: $alertId) {\n    id\n  }\n}\n    `;\nvar DeleteWebhookTargetDocument = lib_default`\n    mutation deleteWebhookTarget($id: String!) {\n  deleteWebhookTarget(deleteTargetInput: {id: $id}) {\n    id\n  }\n}\n    `;\nvar LogInFromDappDocument = lib_default`\n    mutation logInFromDapp($walletBlockchain: WalletBlockchain!, $walletPublicKey: String!, $dappAddress: String!, $timestamp: Long!, $signature: String!, $accountId: String) {\n  logInFromDapp(\n    dappLogInInput: {walletBlockchain: $walletBlockchain, walletPublicKey: $walletPublicKey, dappAddress: $dappAddress, timestamp: $timestamp, accountId: $accountId}\n    signature: $signature\n  ) {\n    ...UserFragment\n  }\n}\n    ${UserFragmentFragmentDoc}`;\nvar LogInFromServiceDocument = lib_default`\n    mutation logInFromService($input: ServiceLogInInput!) {\n  logInFromService(serviceLogInInput: $input) {\n    ...AuthorizationFragment\n  }\n}\n    ${AuthorizationFragmentFragmentDoc}`;\nvar MarkFusionNotificationHistoryAsReadDocument = lib_default`\n    mutation markFusionNotificationHistoryAsRead($ids: [String!]!, $beforeId: String, $readState: NotificationHistoryReadState) {\n  markFusionNotificationHistoryAsRead(\n    input: {ids: $ids, beforeId: $beforeId, readState: $readState}\n  )\n}\n    `;\nvar PublishFusionMessageDocument = lib_default`\n    mutation publishFusionMessage($eventTypeId: String!, $variablesJson: String!, $specificWallets: [KeyValuePairOfStringAndWalletBlockchainInput!]) {\n  publishFusionMessage(\n    publishFusionMessageInput: {eventTypeId: $eventTypeId, variablesJson: $variablesJson, specificWallets: $specificWallets}\n  ) {\n    eventUuid\n  }\n}\n    `;\nvar RefreshAuthorizationDocument = lib_default`\n    mutation refreshAuthorization {\n  refreshAuthorization {\n    ...AuthorizationFragment\n  }\n}\n    ${AuthorizationFragmentFragmentDoc}`;\nvar RemoveSourceFromSourceGroupDocument = lib_default`\n    mutation removeSourceFromSourceGroup($input: RemoveSourceFromSourceGroupInput!) {\n  removeSourceFromSourceGroup(removeSourceFromSourceGroupInput: $input) {\n    ...SourceGroupFragment\n  }\n}\n    ${SourceGroupFragmentFragmentDoc}`;\nvar SendConversationMessageDocument = lib_default`\n    mutation sendConversationMessage($sendConversationMessageInput: SendConversationMessageInput!) {\n  sendConversationMessage(\n    sendConversationMessageInput: $sendConversationMessageInput\n  ) {\n    ...ConversationMessage\n  }\n}\n    ${ConversationMessageFragmentDoc}`;\nvar SendEmailTargetVerificationRequestDocument = lib_default`\n    mutation sendEmailTargetVerificationRequest($targetId: String!) {\n  sendEmailTargetVerificationRequest(\n    sendTargetConfirmationRequestInput: {targetId: $targetId}\n  ) {\n    ...EmailTargetFragment\n  }\n}\n    ${EmailTargetFragmentFragmentDoc}`;\nvar SendMessageDocument = lib_default`\n    mutation sendMessage($input: SendMessageInput!) {\n  sendMessage(sendMessageInput: $input)\n}\n    `;\nvar UpdateSourceGroupDocument = lib_default`\n    mutation updateSourceGroup($id: String!, $name: String!, $sourceIds: [String!]!) {\n  updateSourceGroup: createSourceGroup(\n    sourceGroupInput: {id: $id, name: $name, sourceIds: $sourceIds}\n  ) {\n    ...SourceGroupFragment\n  }\n}\n    ${SourceGroupFragmentFragmentDoc}`;\nvar UpdateTargetGroupDocument = lib_default`\n    mutation updateTargetGroup($id: String!, $name: String!, $emailTargetIds: [String!]!, $smsTargetIds: [String!]!, $telegramTargetIds: [String!]!, $webhookTargetIds: [String!]!, $discordTargetIds: [String!]!) {\n  updateTargetGroup: createTargetGroup(\n    targetGroupInput: {id: $id, name: $name, emailTargetIds: $emailTargetIds, smsTargetIds: $smsTargetIds, telegramTargetIds: $telegramTargetIds, webhookTargetIds: $webhookTargetIds, discordTargetIds: $discordTargetIds}\n  ) {\n    ...TargetGroupFragment\n  }\n}\n    ${TargetGroupFragmentFragmentDoc}`;\nvar UpdateUserSettingsDocument = lib_default`\n    mutation updateUserSettings($input: UserSettingsInput!) {\n  updateUserSettings(userSettings: $input) {\n    detailedAlertHistoryEnabled\n    userHasChatEnabled\n    ftuStage\n  }\n}\n    `;\nvar FetchDataDocument = lib_default`\n    query fetchData {\n  alert {\n    ...AlertFragment\n  }\n  sourceGroup {\n    ...SourceGroupFragment\n  }\n  connectedWallet {\n    ...ConnectedWalletFragment\n  }\n  source {\n    ...SourceFragment\n  }\n  targetGroup {\n    ...TargetGroupFragment\n  }\n  emailTarget {\n    ...EmailTargetFragment\n  }\n  smsTarget {\n    ...SmsTargetFragment\n  }\n  telegramTarget {\n    ...TelegramTargetFragment\n  }\n  discordTarget {\n    ...DiscordTargetFragment\n  }\n  filter {\n    ...FilterFragment\n  }\n}\n    ${AlertFragmentFragmentDoc}\n${SourceGroupFragmentFragmentDoc}\n${ConnectedWalletFragmentFragmentDoc}\n${SourceFragmentFragmentDoc}\n${TargetGroupFragmentFragmentDoc}\n${EmailTargetFragmentFragmentDoc}\n${SmsTargetFragmentFragmentDoc}\n${TelegramTargetFragmentFragmentDoc}\n${DiscordTargetFragmentFragmentDoc}\n${FilterFragmentFragmentDoc}`;\nvar FindTenantConfigDocument = lib_default`\n    query findTenantConfig($input: FindTenantConfigInput!) {\n  findTenantConfig(findTenantConfigInput: $input) {\n    ...TenantConfigFragment\n  }\n}\n    ${TenantConfigFragmentFragmentDoc}`;\nvar GetAlertsDocument = lib_default`\n    query getAlerts {\n  alert {\n    ...AlertFragment\n  }\n}\n    ${AlertFragmentFragmentDoc}`;\nvar GetConfigurationForDappDocument = lib_default`\n    query getConfigurationForDapp($dappAddress: String!) {\n  configurationForDapp(getConfigurationForDappInput: {dappAddress: $dappAddress}) {\n    supportedSmsCountryCodes\n    supportedTargetTypes\n  }\n}\n    `;\nvar GetConnectedWalletsDocument = lib_default`\n    query getConnectedWallets {\n  connectedWallet {\n    ...ConnectedWalletFragment\n  }\n}\n    ${ConnectedWalletFragmentFragmentDoc}`;\nvar GetConversationMessagesDocument = lib_default`\n    query getConversationMessages($getConversationMessagesInput: GetConversationMessagesInput!, $after: String, $first: Int) {\n  conversationMessages(\n    first: $first\n    after: $after\n    getConversationMessagesInput: $getConversationMessagesInput\n  ) {\n    nodes {\n      ...ConversationMessage\n    }\n    pageInfo {\n      ...ConvMessagePageInfo\n    }\n  }\n}\n    ${ConversationMessageFragmentDoc}\n${ConvMessagePageInfoFragmentDoc}`;\nvar GetDiscordTargetsDocument = lib_default`\n    query getDiscordTargets {\n  discordTarget {\n    ...DiscordTargetFragment\n  }\n}\n    ${DiscordTargetFragmentFragmentDoc}`;\nvar GetEmailTargetsDocument = lib_default`\n    query getEmailTargets {\n  emailTarget {\n    ...EmailTargetFragment\n  }\n}\n    ${EmailTargetFragmentFragmentDoc}`;\nvar GetFiltersDocument = lib_default`\n    query getFilters {\n  filter {\n    ...FilterFragment\n  }\n}\n    ${FilterFragmentFragmentDoc}`;\nvar GetFusionNotificationHistoryDocument = lib_default`\n    query getFusionNotificationHistory($after: String, $first: Int, $includeHidden: Boolean) {\n  fusionNotificationHistory(\n    after: $after\n    first: $first\n    includeHidden: $includeHidden\n  ) {\n    nodes {\n      ...FusionNotificationHistoryEntryFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n    ${FusionNotificationHistoryEntryFragmentFragmentDoc}\n${PageInfoFragmentFragmentDoc}`;\nvar GetNotificationHistoryDocument = lib_default`\n    query getNotificationHistory($after: String, $first: Int) {\n  notificationHistory(after: $after, first: $first) {\n    nodes {\n      ...NotificationHistoryEntryFragment\n    }\n    pageInfo {\n      ...PageInfoFragment\n    }\n  }\n}\n    ${NotificationHistoryEntryFragmentFragmentDoc}\n${PageInfoFragmentFragmentDoc}`;\nvar GetSmsTargetsDocument = lib_default`\n    query getSmsTargets {\n  smsTarget {\n    ...SmsTargetFragment\n  }\n}\n    ${SmsTargetFragmentFragmentDoc}`;\nvar GetSourceConnectionDocument = lib_default`\n    query getSourceConnection($input: GetSourcesInput, $first: Int, $after: String) {\n  sources(getSourcesInput: $input, first: $first, after: $after) {\n    pageInfo {\n      ...PageInfoFragment\n    }\n    nodes {\n      ...SourceFragment\n    }\n  }\n}\n    ${PageInfoFragmentFragmentDoc}\n${SourceFragmentFragmentDoc}`;\nvar GetSourceGroupsDocument = lib_default`\n    query getSourceGroups {\n  sourceGroup {\n    ...SourceGroupFragment\n  }\n}\n    ${SourceGroupFragmentFragmentDoc}`;\nvar GetSourcesDocument = lib_default`\n    query getSources {\n  source {\n    ...SourceFragment\n  }\n}\n    ${SourceFragmentFragmentDoc}`;\nvar GetTargetGroupsDocument = lib_default`\n    query getTargetGroups {\n  targetGroup {\n    ...TargetGroupFragment\n  }\n}\n    ${TargetGroupFragmentFragmentDoc}`;\nvar GetTelegramTargetsDocument = lib_default`\n    query getTelegramTargets {\n  telegramTarget {\n    ...TelegramTargetFragment\n  }\n}\n    ${TelegramTargetFragmentFragmentDoc}`;\nvar GetTenantConnectedWalletDocument = lib_default`\n    query getTenantConnectedWallet($input: GetTenantConnectedWalletInput, $first: Int, $after: String) {\n  tenantConnectedWallet(\n    getTenantConnectedWalletInput: $input\n    first: $first\n    after: $after\n  ) {\n    pageInfo {\n      ...PageInfoFragment\n    }\n    nodes {\n      ...TenantConnectedWalletFragment\n      user {\n        ...TenantUserFragment\n      }\n    }\n  }\n}\n    ${PageInfoFragmentFragmentDoc}\n${TenantConnectedWalletFragmentFragmentDoc}\n${TenantUserFragmentFragmentDoc}`;\nvar GetTenantUserDocument = lib_default`\n    query getTenantUser($first: Int, $after: String) {\n  tenantUser(first: $first, after: $after) {\n    pageInfo {\n      ...PageInfoFragment\n    }\n    nodes {\n      ...TenantUserFragment\n    }\n  }\n}\n    ${PageInfoFragmentFragmentDoc}\n${TenantUserFragmentFragmentDoc}`;\nvar GetTopicsDocument = lib_default`\n    query getTopics {\n  topics {\n    nodes {\n      ...UserTopicFragment\n    }\n  }\n}\n    ${UserTopicFragmentFragmentDoc}`;\nvar GetUnreadNotificationHistoryCountDocument = lib_default`\n    query getUnreadNotificationHistoryCount {\n  unreadNotificationHistoryCount {\n    count\n  }\n}\n    `;\nvar GetUserSettingsDocument = lib_default`\n    query getUserSettings {\n  userSettings {\n    detailedAlertHistoryEnabled\n    userHasChatEnabled\n    ftuStage\n  }\n}\n    `;\nvar GetWebhookTargetsDocument = lib_default`\n    query getWebhookTargets {\n  webhookTarget {\n    ...WebhookTargetFragment\n  }\n}\n    ${WebhookTargetFragmentFragmentDoc}`;\nvar defaultWrapper = (action, _operationName, _operationType) => action();\nfunction getSdk(client, withWrapper = defaultWrapper) {\n  return {\n    addSourceToSourceGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(AddSourceToSourceGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"addSourceToSourceGroup\", \"mutation\");\n    },\n    beginLogInByTransaction(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(BeginLogInByTransactionDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"beginLogInByTransaction\", \"mutation\");\n    },\n    broadcastMessage(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(BroadcastMessageDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"broadcastMessage\", \"mutation\");\n    },\n    completeLogInByTransaction(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CompleteLogInByTransactionDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"completeLogInByTransaction\", \"mutation\");\n    },\n    connectWallet(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(ConnectWalletDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"connectWallet\", \"mutation\");\n    },\n    createAlert(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateAlertDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createAlert\", \"mutation\");\n    },\n    createDirectPushAlert(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateDirectPushAlertDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createDirectPushAlert\", \"mutation\");\n    },\n    createDiscordTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateDiscordTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createDiscordTarget\", \"mutation\");\n    },\n    createEmailTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateEmailTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createEmailTarget\", \"mutation\");\n    },\n    createSmsTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateSmsTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createSmsTarget\", \"mutation\");\n    },\n    createSource(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateSourceDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createSource\", \"mutation\");\n    },\n    createSourceGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateSourceGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createSourceGroup\", \"mutation\");\n    },\n    createSupportConversation(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateSupportConversationDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createSupportConversation\", \"mutation\");\n    },\n    createTargetGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateTargetGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createTargetGroup\", \"mutation\");\n    },\n    createTelegramTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateTelegramTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createTelegramTarget\", \"mutation\");\n    },\n    createTenantUser(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateTenantUserDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createTenantUser\", \"mutation\");\n    },\n    createWebhookTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(CreateWebhookTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"createWebhookTarget\", \"mutation\");\n    },\n    deleteAlert(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteAlertDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteAlert\", \"mutation\");\n    },\n    deleteDirectPushAlert(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteDirectPushAlertDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteDirectPushAlert\", \"mutation\");\n    },\n    deleteSourceGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteSourceGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteSourceGroup\", \"mutation\");\n    },\n    deleteTargetGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteTargetGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteTargetGroup\", \"mutation\");\n    },\n    deleteUserAlert(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteUserAlertDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteUserAlert\", \"mutation\");\n    },\n    deleteWebhookTarget(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(DeleteWebhookTargetDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"deleteWebhookTarget\", \"mutation\");\n    },\n    logInFromDapp(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(LogInFromDappDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"logInFromDapp\", \"mutation\");\n    },\n    logInFromService(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(LogInFromServiceDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"logInFromService\", \"mutation\");\n    },\n    markFusionNotificationHistoryAsRead(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(MarkFusionNotificationHistoryAsReadDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"markFusionNotificationHistoryAsRead\", \"mutation\");\n    },\n    publishFusionMessage(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(PublishFusionMessageDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"publishFusionMessage\", \"mutation\");\n    },\n    refreshAuthorization(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(RefreshAuthorizationDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"refreshAuthorization\", \"mutation\");\n    },\n    removeSourceFromSourceGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(RemoveSourceFromSourceGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"removeSourceFromSourceGroup\", \"mutation\");\n    },\n    sendConversationMessage(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(SendConversationMessageDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"sendConversationMessage\", \"mutation\");\n    },\n    sendEmailTargetVerificationRequest(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(SendEmailTargetVerificationRequestDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"sendEmailTargetVerificationRequest\", \"mutation\");\n    },\n    sendMessage(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(SendMessageDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"sendMessage\", \"mutation\");\n    },\n    updateSourceGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(UpdateSourceGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"updateSourceGroup\", \"mutation\");\n    },\n    updateTargetGroup(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(UpdateTargetGroupDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"updateTargetGroup\", \"mutation\");\n    },\n    updateUserSettings(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(UpdateUserSettingsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"updateUserSettings\", \"mutation\");\n    },\n    fetchData(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(FetchDataDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"fetchData\", \"query\");\n    },\n    findTenantConfig(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(FindTenantConfigDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"findTenantConfig\", \"query\");\n    },\n    getAlerts(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetAlertsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getAlerts\", \"query\");\n    },\n    getConfigurationForDapp(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetConfigurationForDappDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getConfigurationForDapp\", \"query\");\n    },\n    getConnectedWallets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetConnectedWalletsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getConnectedWallets\", \"query\");\n    },\n    getConversationMessages(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetConversationMessagesDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getConversationMessages\", \"query\");\n    },\n    getDiscordTargets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetDiscordTargetsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getDiscordTargets\", \"query\");\n    },\n    getEmailTargets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetEmailTargetsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getEmailTargets\", \"query\");\n    },\n    getFilters(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetFiltersDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getFilters\", \"query\");\n    },\n    getFusionNotificationHistory(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetFusionNotificationHistoryDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getFusionNotificationHistory\", \"query\");\n    },\n    getNotificationHistory(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetNotificationHistoryDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getNotificationHistory\", \"query\");\n    },\n    getSmsTargets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetSmsTargetsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getSmsTargets\", \"query\");\n    },\n    getSourceConnection(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetSourceConnectionDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getSourceConnection\", \"query\");\n    },\n    getSourceGroups(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetSourceGroupsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getSourceGroups\", \"query\");\n    },\n    getSources(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetSourcesDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getSources\", \"query\");\n    },\n    getTargetGroups(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetTargetGroupsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getTargetGroups\", \"query\");\n    },\n    getTelegramTargets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetTelegramTargetsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getTelegramTargets\", \"query\");\n    },\n    getTenantConnectedWallet(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetTenantConnectedWalletDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getTenantConnectedWallet\", \"query\");\n    },\n    getTenantUser(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetTenantUserDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getTenantUser\", \"query\");\n    },\n    getTopics(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetTopicsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getTopics\", \"query\");\n    },\n    getUnreadNotificationHistoryCount(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetUnreadNotificationHistoryCountDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getUnreadNotificationHistoryCount\", \"query\");\n    },\n    getUserSettings(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetUserSettingsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getUserSettings\", \"query\");\n    },\n    getWebhookTargets(variables, requestHeaders) {\n      return withWrapper((wrappedRequestHeaders) => client.request(GetWebhookTargetsDocument, variables, __spreadValues(__spreadValues({}, requestHeaders), wrappedRequestHeaders)), \"getWebhookTargets\", \"query\");\n    }\n  };\n}\n\n// lib/NotifiService.ts\nvar NotifiService = class {\n  constructor(graphQLClient) {\n    this._typedClient = getSdk(graphQLClient);\n  }\n  setJwt(jwt) {\n    this._jwt = jwt;\n  }\n  async logOut() {\n    this._jwt = void 0;\n  }\n  async addSourceToSourceGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.addSourceToSourceGroup(variables, headers);\n  }\n  async beginLogInByTransaction(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.beginLogInByTransaction(variables, headers);\n  }\n  async broadcastMessage(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.broadcastMessage(variables, headers);\n  }\n  async completeLogInByTransaction(variables) {\n    var _a, _b;\n    const headers = this._requestHeaders();\n    const result = await this._typedClient.completeLogInByTransaction(\n      variables,\n      headers\n    );\n    const token = (_b = (_a = result.completeLogInByTransaction) == null ? void 0 : _a.authorization) == null ? void 0 : _b.token;\n    if (token !== void 0) {\n      this._jwt = token;\n    }\n    return result;\n  }\n  async connectWallet(variables) {\n    const headers = this._requestHeaders();\n    return await this._typedClient.connectWallet(variables, headers);\n  }\n  async createAlert(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createAlert(variables, headers);\n  }\n  async createDirectPushAlert(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createDirectPushAlert(variables, headers);\n  }\n  async createEmailTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createEmailTarget(variables, headers);\n  }\n  async createDiscordTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createDiscordTarget(variables, headers);\n  }\n  async createSmsTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createSmsTarget(variables, headers);\n  }\n  async createSource(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createSource(variables, headers);\n  }\n  async createSourceGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createSourceGroup(variables, headers);\n  }\n  async createSupportConversation(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createSupportConversation(variables, headers);\n  }\n  async createTargetGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createTargetGroup(variables, headers);\n  }\n  async createTenantUser(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createTenantUser(variables, headers);\n  }\n  async createWebhookTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createWebhookTarget(variables, headers);\n  }\n  async createTelegramTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.createTelegramTarget(variables, headers);\n  }\n  async deleteAlert(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteAlert(variables, headers);\n  }\n  async DeleteDirectPushAlert(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteDirectPushAlert(variables, headers);\n  }\n  async deleteUserAlert(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteUserAlert(variables, headers);\n  }\n  async deleteSourceGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteSourceGroup(variables, headers);\n  }\n  async deleteTargetGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteTargetGroup(variables, headers);\n  }\n  async deleteWebhookTarget(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.deleteWebhookTarget(variables, headers);\n  }\n  async fetchData(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.fetchData(variables, headers);\n  }\n  async findTenantConfig(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.findTenantConfig(variables, headers);\n  }\n  async getAlerts(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getAlerts(variables, headers);\n  }\n  async getConfigurationForDapp(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getConfigurationForDapp(variables, headers);\n  }\n  async getConnectedWallets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getConnectedWallets(variables, headers);\n  }\n  async getConversationMessages(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getConversationMessages(variables, headers);\n  }\n  async getEmailTargets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getEmailTargets(variables, headers);\n  }\n  async getDiscordTargets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getDiscordTargets(variables, headers);\n  }\n  async getFilters(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getFilters(variables, headers);\n  }\n  async getFusionNotificationHistory(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getFusionNotificationHistory(variables, headers);\n  }\n  /**\n   * @deprecated Use getFusionNotificationHistory instead\n   */\n  async getNotificationHistory(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getNotificationHistory(variables, headers);\n  }\n  async getSmsTargets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getSmsTargets(variables, headers);\n  }\n  async getSourceConnection(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getSourceConnection(variables, headers);\n  }\n  async getSourceGroups(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getSourceGroups(variables, headers);\n  }\n  async getSources(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getSources(variables, headers);\n  }\n  async getTargetGroups(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getTargetGroups(variables, headers);\n  }\n  async getTelegramTargets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getTelegramTargets(variables, headers);\n  }\n  async getTenantConnectedWallets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getTenantConnectedWallet(variables, headers);\n  }\n  async getTenantUser(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getTenantUser(variables, headers);\n  }\n  async getTopics(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getTopics(variables, headers);\n  }\n  async getUnreadNotificationHistoryCount(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getUnreadNotificationHistoryCount(\n      variables,\n      headers\n    );\n  }\n  async getUserSettings(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getUserSettings(variables, headers);\n  }\n  async getWebhookTargets(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.getWebhookTargets(variables, headers);\n  }\n  async logInFromDapp(variables) {\n    var _a, _b;\n    const headers = this._requestHeaders();\n    const result = await this._typedClient.logInFromDapp(variables, headers);\n    const token = (_b = (_a = result.logInFromDapp) == null ? void 0 : _a.authorization) == null ? void 0 : _b.token;\n    if (token !== void 0) {\n      this._jwt = token;\n    }\n    return result;\n  }\n  async logInFromService(variables) {\n    var _a;\n    const headers = this._requestHeaders();\n    const result = await this._typedClient.logInFromService(variables, headers);\n    const token = (_a = result.logInFromService) == null ? void 0 : _a.token;\n    if (token !== void 0) {\n      this._jwt = token;\n    }\n    return result;\n  }\n  async markFusionNotificationHistoryAsRead(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.markFusionNotificationHistoryAsRead(\n      variables,\n      headers\n    );\n  }\n  async updateUserSettings(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.updateUserSettings(variables, headers);\n  }\n  async refreshAuthorization(variables) {\n    var _a;\n    const headers = this._requestHeaders();\n    const result = await this._typedClient.refreshAuthorization(\n      variables,\n      headers\n    );\n    const token = (_a = result.refreshAuthorization) == null ? void 0 : _a.token;\n    if (token !== void 0) {\n      this._jwt = token;\n    }\n    return result;\n  }\n  async removeSourceFromSourceGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.removeSourceFromSourceGroup(variables, headers);\n  }\n  async sendConversationMessages(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.sendConversationMessage(variables, headers);\n  }\n  async sendEmailTargetVerificationRequest(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.sendEmailTargetVerificationRequest(\n      variables,\n      headers\n    );\n  }\n  async sendMessage(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.sendMessage(variables, headers);\n  }\n  async updateSourceGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.updateSourceGroup(variables, headers);\n  }\n  async updateTargetGroup(variables) {\n    const headers = this._requestHeaders();\n    return this._typedClient.updateTargetGroup(variables, headers);\n  }\n  _requestHeaders() {\n    const requestId = uuid();\n    const headers = {\n      \"X-Request-Id\": requestId,\n      \"X-Notifi-Client-Version\": version\n    };\n    if (this._jwt !== void 0) {\n      headers[\"Authorization\"] = `Bearer ${this._jwt}`;\n    }\n    return headers;\n  }\n};\nexport {\n  NotifiService\n};\n", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;", "import { defaultJsonSerializer } from './defaultJsonSerializer.js'\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js'\nimport {\n  parseBatchRequestArgs,\n  parseRawRequestArgs,\n  parseRawRequestExtendedArgs,\n  parseRequestArgs,\n  parseRequestExtendedArgs,\n} from './parseArgs.js'\nimport { resolveRequestDocument } from './resolveRequestDocument.js'\nimport type {\n  BatchRequestDocument,\n  FetchOptions,\n  GraphQLClientRequestHeaders,\n  GraphQLClientResponse,\n  HTTPMethodInput,\n  JsonSerializer,\n  MaybeLazy,\n  RequestConfig,\n  RequestMiddleware,\n  ResponseMiddleware,\n  VariablesAndRequestHeadersArgs,\n} from './types.js'\nimport {\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  ClientError,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n} from './types.js'\nimport type { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport crossFetch, * as CrossFetch from 'cross-fetch'\n\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers?: GraphQLClientRequestHeaders): Record<string, string> => {\n  let oHeaders: Record<string, string> = {}\n  if (headers) {\n    if (\n      (typeof Headers !== `undefined` && headers instanceof Headers) ||\n      (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)\n    ) {\n      oHeaders = HeadersInstanceToPlainObject(headers)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(([name, value]) => {\n        if (name && value !== undefined) {\n          oHeaders[name] = value\n        }\n      })\n    } else {\n      oHeaders = headers as Record<string, string>\n    }\n  }\n\n  return oHeaders\n}\n\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str: string): string => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim()\n\ntype BuildRequestConfigParamsBatch<V> = {\n  query: string[]\n  variables: V[] | undefined\n  operationName: undefined\n  jsonSerializer: JsonSerializer\n}\n\ntype BuildRequestConfigParamsSingle<V> = {\n  query: string\n  variables: V | undefined\n  operationName: string | undefined\n  jsonSerializer: JsonSerializer\n}\n\ntype BuildRequestConfigParams<V> = BuildRequestConfigParamsSingle<V> | BuildRequestConfigParamsBatch<V>\n\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = <V extends Variables>(params: BuildRequestConfigParams<V>): string => {\n  if (!Array.isArray(params.query)) {\n    const params_ = params as BuildRequestConfigParamsSingle<V>\n    const search: string[] = [`query=${encodeURIComponent(cleanQuery(params_.query))}`]\n\n    if (params.variables) {\n      search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`)\n    }\n\n    if (params_.operationName) {\n      search.push(`operationName=${encodeURIComponent(params_.operationName)}`)\n    }\n\n    return search.join(`&`)\n  }\n\n  if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n    throw new Error(`Cannot create query with given variable type, array expected`)\n  }\n\n  // Batch support\n  const params_ = params as BuildRequestConfigParamsBatch<V>\n  const payload = params.query.reduce<{ query: string; variables: string | undefined }[]>(\n    (acc, currentQuery, index) => {\n      acc.push({\n        query: cleanQuery(currentQuery),\n        variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n      })\n      return acc\n    },\n    []\n  )\n\n  return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`\n}\n\ntype Fetch = (url: string, config: RequestInit) => Promise<Response>\n\ninterface RequestVerbParams<V extends Variables = Variables> {\n  url: string\n  query: string | string[]\n  fetch: Fetch\n  fetchOptions: FetchOptions\n  variables?: V\n  headers?: GraphQLClientRequestHeaders\n  operationName?: string\n  middleware?: RequestMiddleware<V>\n}\n\nconst createHttpMethodFetcher =\n  (method: 'GET' | 'POST') =>\n  async <V extends Variables>(params: RequestVerbParams<V>) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params\n\n    const headers = { ...params.headers }\n    let queryParams = ``\n    let body = undefined\n\n    if (method === `POST`) {\n      body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer)\n      if (typeof body === `string`) {\n        // @ts-expect-error todo\n        headers[`Content-Type`] = `application/json`\n      }\n    } else {\n      // @ts-expect-error todo needs ADT for TS to understand the different states\n      queryParams = buildRequestConfig<V>({\n        query,\n        variables,\n        operationName,\n        jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n      })\n    }\n\n    const init: RequestInit = {\n      method,\n      headers,\n      body,\n      ...fetchOptions,\n    }\n\n    let urlResolved = url\n    let initResolved = init\n    if (middleware) {\n      const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }))\n      const { url: urlNew, ...initNew } = result\n      urlResolved = urlNew\n      initResolved = initNew\n    }\n    if (queryParams) {\n      urlResolved = `${urlResolved}?${queryParams}`\n    }\n    return await fetch(urlResolved, initResolved)\n  }\n\n/**\n * GraphQL Client.\n */\nclass GraphQLClient {\n  constructor(private url: string, public readonly requestConfig: RequestConfig = {}) {}\n\n  /**\n   * Send a GraphQL query to the server.\n   */\n  rawRequest: RawRequestMethod = async <T, V extends Variables = Variables>(\n    ...args: RawRequestMethodArgs<V>\n  ): Promise<GraphQLClientResponse<T>> => {\n    const [queryOrOptions, variables, requestHeaders] = args\n    const rawRequestOptions = parseRawRequestArgs<V>(queryOrOptions, variables, requestHeaders)\n\n    const {\n      headers,\n      fetch = crossFetch,\n      method = `POST`,\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.requestConfig\n    const { url } = this\n    if (rawRequestOptions.signal !== undefined) {\n      fetchOptions.signal = rawRequestOptions.signal\n    }\n\n    const { operationName } = resolveRequestDocument(rawRequestOptions.query)\n\n    return makeRequest<T, V>({\n      url,\n      query: rawRequestOptions.query,\n      variables: rawRequestOptions.variables as V,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(rawRequestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send a GraphQL document to the server.\n   */\n  async request<T, V extends Variables = Variables>(\n    document: RequestDocument | TypedDocumentNode<T, V>,\n    ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n  ): Promise<T>\n  async request<T, V extends Variables = Variables>(options: RequestOptions<V, T>): Promise<T>\n  async request<T, V extends Variables = Variables>(\n    documentOrOptions: RequestDocument | TypedDocumentNode<T, V> | RequestOptions<V>,\n    ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n  ): Promise<T> {\n    const [variables, requestHeaders] = variablesAndRequestHeaders\n    const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders)\n\n    const {\n      headers,\n      fetch = crossFetch,\n      method = `POST`,\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.requestConfig\n    const { url } = this\n    if (requestOptions.signal !== undefined) {\n      fetchOptions.signal = requestOptions.signal\n    }\n\n    const { query, operationName } = resolveRequestDocument(requestOptions.document)\n\n    return makeRequest<T>({\n      url,\n      query,\n      variables: requestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(requestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send GraphQL documents in batch to the server.\n   */\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(documents: BatchRequestDocument<V>[], requestHeaders?: GraphQLClientRequestHeaders): Promise<T>\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(options: BatchRequestsOptions<V>): Promise<T>\n  // prettier-ignore\n  batchRequests<T extends BatchResult, V extends Variables = Variables>(documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>, requestHeaders?: GraphQLClientRequestHeaders): Promise<T> {\n    const batchRequestOptions = parseBatchRequestArgs<V>(documentsOrOptions, requestHeaders)\n    const { headers, ...fetchOptions } = this.requestConfig\n\n    if (batchRequestOptions.signal !== undefined) {\n      fetchOptions.signal = batchRequestOptions.signal\n    }\n\n    const queries = batchRequestOptions.documents.map(\n      ({ document }) => resolveRequestDocument(document).query\n    )\n    const variables = batchRequestOptions.documents.map(({ variables }) => variables)\n\n    return makeRequest<T>({\n      url: this.url,\n      query: queries,\n      // @ts-expect-error TODO reconcile batch variables into system.\n      variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(batchRequestOptions.requestHeaders),\n      },\n      operationName: undefined,\n      fetch: this.requestConfig.fetch ?? crossFetch,\n      method: this.requestConfig.method || `POST`,\n      fetchOptions,\n      middleware: this.requestConfig.requestMiddleware,\n    })\n      .then((response) => {\n        if (this.requestConfig.responseMiddleware) {\n          this.requestConfig.responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (this.requestConfig.responseMiddleware) {\n          this.requestConfig.responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  setHeaders(headers: GraphQLClientRequestHeaders): GraphQLClient {\n    this.requestConfig.headers = headers\n    return this\n  }\n\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  setHeader(key: string, value: string): GraphQLClient {\n    const { headers } = this.requestConfig\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-expect-error todo\n      headers[key] = value\n    } else {\n      this.requestConfig.headers = { [key]: value }\n    }\n\n    return this\n  }\n\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  setEndpoint(value: string): GraphQLClient {\n    this.url = value\n    return this\n  }\n}\n\nconst makeRequest = async <T = unknown, V extends Variables = Variables>(params: {\n  url: string\n  query: string | string[]\n  variables?: V\n  headers?: GraphQLClientRequestHeaders\n  operationName?: string\n  fetch: Fetch\n  method?: HTTPMethodInput\n  fetchOptions: FetchOptions\n  middleware?: RequestMiddleware<V>\n}): Promise<GraphQLClientResponse<T>> => {\n  const { query, variables, fetchOptions } = params\n  const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`))\n  const isBatchingQuery = Array.isArray(params.query)\n  const response = await fetcher(params)\n  const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer)\n\n  const successfullyReceivedData = Array.isArray(result)\n    ? !result.some(({ data }) => !data)\n    : Boolean(result.data)\n\n  const successfullyPassedErrorPolicy =\n    Array.isArray(result) ||\n    !result.errors ||\n    (Array.isArray(result.errors) && !result.errors.length) ||\n    fetchOptions.errorPolicy === `all` ||\n    fetchOptions.errorPolicy === `ignore`\n\n  if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n    // @ts-expect-error TODO fixme\n    const { errors: _, ...rest } = Array.isArray(result) ? result : result\n    const data = fetchOptions.errorPolicy === `ignore` ? rest : result\n    const dataEnvelope = isBatchingQuery ? { data } : data\n\n    // @ts-expect-error TODO\n    return {\n      ...dataEnvelope,\n      headers: response.headers,\n      status: response.status,\n    }\n  } else {\n    const errorResult =\n      typeof result === `string`\n        ? {\n            error: result,\n          }\n        : result\n    throw new ClientError(\n      // @ts-expect-error TODO\n      { ...errorResult, status: response.status, headers: response.headers },\n      { query, variables }\n    )\n  }\n}\n\n// prettier-ignore\ninterface RawRequestMethod {\n  <T, V extends Variables = Variables>(query: string, variables?: V, requestHeaders?: GraphQLClientRequestHeaders): Promise<GraphQLClientResponse<T>>\n  <T, V extends Variables = Variables>(options: RawRequestOptions<V>): Promise<GraphQLClientResponse<T>>\n}\n\n// prettier-ignore\ntype RawRequestMethodArgs<V extends Variables> =\n  | [query: string, variables?: V, requestHeaders?: GraphQLClientRequestHeaders]\n  | [RawRequestOptions<V>]\n\n// prettier-ignore\ninterface RawRequest {\n  <T, V extends Variables = Variables>(url: string, query: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<GraphQLClientResponse<T>>\n  <T, V extends Variables = Variables>(options: RawRequestExtendedOptions<V>): Promise<GraphQLClientResponse<T>>\n}\n\n// prettier-ignore\ntype RawRequestArgs<V extends Variables> = \n  | [options: RawRequestExtendedOptions<V>, query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n  | [url: string,                           query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nconst rawRequest: RawRequest = async <T, V extends Variables>(\n  ...args: RawRequestArgs<V>\n): Promise<GraphQLClientResponse<T>> => {\n  const [urlOrOptions, query, ...variablesAndRequestHeaders] = args\n  const requestOptions = parseRawRequestExtendedArgs<V>(urlOrOptions, query, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.rawRequest<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\n// REMARKS: In order to have autocomplete for options work make it the first overload. If not\n// then autocomplete will instead show the various methods for a string, which is not what we want.\n// prettier-ignore\nasync function request<T, V extends Variables = Variables>(options: RequestExtendedOptions<V, T>): Promise<T>\n// prettier-ignore\nasync function request<T, V extends Variables = Variables>(url: string, document: RequestDocument | TypedDocumentNode<T, V>, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<T>\n// prettier-ignore\n// eslint-disable-next-line\nasync function request<T, V extends Variables = Variables>(urlOrOptions: string | RequestExtendedOptions<V, T>, document?: RequestDocument | TypedDocumentNode<T, V>, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<T> {\n  const requestOptions = parseRequestExtendedArgs<V>(urlOrOptions, document, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.request<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nconst batchRequests: BatchRequests = async (...args: BatchRequestsArgs) => {\n  const params = parseBatchRequestsArgsExtended(args)\n  const client = new GraphQLClient(params.url)\n  return client.batchRequests(params)\n}\n\ninterface Result<Data extends object = object> {\n  data: Data\n}\n\ntype BatchResult = [Result, ...Result[]]\n\n// prettier-ignore\ninterface BatchRequests {\n  <T extends BatchResult, V extends Variables = Variables>(url: string, documents: BatchRequestDocument<V>[], requestHeaders?: GraphQLClientRequestHeaders): Promise<T>\n  <T extends BatchResult, V extends Variables = Variables>(options: BatchRequestsExtendedOptions<V>): Promise<T>\n}\n\ntype BatchRequestsArgs =\n  | [url: string, documents: BatchRequestDocument[], requestHeaders?: GraphQLClientRequestHeaders]\n  | [options: BatchRequestsExtendedOptions]\n\nconst parseBatchRequestsArgsExtended = (args: BatchRequestsArgs): BatchRequestsExtendedOptions => {\n  if (args.length === 1) {\n    return args[0]\n  } else {\n    return {\n      url: args[0],\n      documents: args[1],\n      requestHeaders: args[2],\n      signal: undefined,\n    }\n  }\n}\n\nconst createRequestBody = (\n  query: string | string[],\n  variables?: Variables | Variables[],\n  operationName?: string,\n  jsonSerializer?: JsonSerializer\n): string => {\n  const jsonSerializer_ = jsonSerializer ?? defaultJsonSerializer\n  if (!Array.isArray(query)) {\n    return jsonSerializer_.stringify({ query, variables, operationName })\n  }\n\n  if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n    throw new Error(`Cannot create request body with given variable type, array expected`)\n  }\n\n  // Batch support\n  const payload = query.reduce<{ query: string; variables: Variables | undefined }[]>(\n    (acc, currentQuery, index) => {\n      acc.push({ query: currentQuery, variables: variables ? variables[index] : undefined })\n      return acc\n    },\n    []\n  )\n\n  return jsonSerializer_.stringify(payload)\n}\n\nconst getResult = async (\n  response: Response,\n  jsonSerializer: JsonSerializer\n): Promise<\n  | { data: object; errors: undefined }[]\n  | { data: object; errors: undefined }\n  | { data: undefined; errors: object }\n  | { data: undefined; errors: object[] }\n> => {\n  let contentType: string | undefined\n\n  response.headers.forEach((value, key) => {\n    if (key.toLowerCase() === `content-type`) {\n      contentType = value\n    }\n  })\n\n  if (\n    contentType &&\n    (contentType.toLowerCase().startsWith(`application/json`) ||\n      contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n      contentType.toLowerCase().startsWith(`application/graphql-response+json`))\n  ) {\n    return jsonSerializer.parse(await response.text()) as any\n  } else {\n    return response.text() as any\n  }\n}\n\nconst callOrIdentity = <T>(value: MaybeLazy<T>) => {\n  return typeof value === `function` ? (value as () => T)() : value\n}\n\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n * ```\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks: TemplateStringsArray, ...variables: unknown[]): string => {\n  return chunks.reduce(\n    (acc, chunk, index) => `${acc}${chunk}${index in variables ? String(variables[index]) : ``}`,\n    ``\n  )\n}\n\nexport { GraphQLWebSocketClient } from './graphql-ws.js'\nexport { resolveRequestDocument } from './resolveRequestDocument.js'\nexport {\n  BatchRequestDocument,\n  batchRequests,\n  BatchRequestsExtendedOptions,\n  BatchRequestsOptions,\n  ClientError,\n  GraphQLClient,\n  rawRequest,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  request,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestMiddleware,\n  RequestOptions,\n  ResponseMiddleware,\n  Variables,\n}\nexport default request\n", "import type { JsonSerializer } from './types.js'\n\nexport const defaultJsonSerializer: JsonSerializer = JSON\n", "export type RemoveIndex<T> = {\n  [K in keyof T as string extends K ? never : number extends K ? never : K]: T[K]\n}\n\nexport const uppercase = <S extends string>(str: S): Uppercase<S> => str.toUpperCase() as Uppercase<S>\n\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers: Response['headers']): Record<string, string> => {\n  const o: Record<string, string> = {}\n  headers.forEach((v, k) => {\n    o[k] = v\n  })\n  return o\n}\n", "import type {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  GraphQLClientRequestHeaders,\n  RawRequestExtendedOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestExtendedOptions,\n  RequestOptions,\n  Variables,\n  VariablesAndRequestHeadersArgs,\n} from './types.js'\n\nexport const parseRequestArgs = <V extends Variables = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: GraphQLClientRequestHeaders\n): RequestOptions<V> => {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n        document: documentOrOptions as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestOptions<V>)\n}\n\nexport const parseRawRequestArgs = <V extends Variables = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: GraphQLClientRequestHeaders\n): RawRequestOptions<V> => {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : ({\n        query: queryOrOptions as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RawRequestOptions<V>)\n}\n\nexport const parseBatchRequestArgs = <V extends Variables = Variables>(\n  documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n  requestHeaders?: GraphQLClientRequestHeaders\n): BatchRequestsOptions<V> => {\n  return (documentsOrOptions as BatchRequestsOptions<V>).documents\n    ? (documentsOrOptions as BatchRequestsOptions<V>)\n    : {\n        documents: documentsOrOptions as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport const parseRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return (urlOrOptions as RequestExtendedOptions<V>).document\n    ? (urlOrOptions as RequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        document: document as RequestDocument,\n        variables,\n        requestHeaders,\n        signal: undefined,\n      } as unknown as RequestExtendedOptions<V>)\n}\n\nexport const parseRawRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RawRequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return (urlOrOptions as RawRequestExtendedOptions<V>).query\n    ? (urlOrOptions as RawRequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        query: query as string,\n        variables,\n        requestHeaders,\n        signal: undefined,\n      } as unknown as RawRequestExtendedOptions<V>)\n}\n", "import type { RequestDocument } from './types.js'\nimport type { DocumentNode, OperationDefinitionNode } from 'graphql'\nimport { parse, print } from 'graphql'\n\n/**\n * helpers\n */\n\nconst extractOperationName = (document: DocumentNode): string | undefined => {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === `OperationDefinition`\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0]?.name?.value\n  }\n\n  return operationName\n}\n\nexport const resolveRequestDocument = (\n  document: RequestDocument\n): { query: string; operationName?: string } => {\n  if (typeof document === `string`) {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n", "import type { RemoveIndex } from './helpers.js'\nimport type { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport type { fetch } from 'cross-fetch'\nimport type { GraphQLError } from 'graphql/error/GraphQLError.js'\nimport type { DocumentNode } from 'graphql/language/ast.js'\n\nexport type Fetch = typeof fetch\n\n/**\n * 'None' will throw whenever the response contains errors\n *\n * 'Ignore' will ignore incoming errors and resolve like no errors occurred\n *\n * 'All' will return both the errors and data\n */\nexport type ErrorPolicy = 'none' | 'ignore' | 'all'\n\nexport interface JsonSerializer {\n  stringify: (obj: any) => string\n  parse: (obj: string) => unknown\n}\n\nexport interface AdditionalRequestOptions {\n  jsonSerializer?: JsonSerializer\n  /**\n   * Decide how to handle GraphQLErrors in response\n   */\n  errorPolicy?: ErrorPolicy\n}\n\nexport interface FetchOptions extends RequestInit, AdditionalRequestOptions {}\n\nexport type { GraphQLError }\n\nexport type Variables = Record<string, unknown>\n\nexport type BatchVariables = (Record<string, unknown> | undefined)[]\n\nexport interface GraphQLResponse<T = unknown> {\n  data?: T\n  errors?: GraphQLError[]\n  extensions?: unknown\n  status: number\n  [key: string]: unknown\n}\n\nexport interface GraphQLRequestContext<V extends Variables = Variables> {\n  query: string | string[]\n  variables?: V\n}\n\nexport class ClientError extends Error {\n  response: GraphQLResponse\n  request: GraphQLRequestContext\n\n  constructor(response: GraphQLResponse, request: GraphQLRequestContext) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request,\n    })}`\n\n    super(message)\n\n    Object.setPrototypeOf(this, ClientError.prototype)\n\n    this.response = response\n    this.request = request\n\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === `function`) {\n      Error.captureStackTrace(this, ClientError)\n    }\n  }\n\n  private static extractMessage(response: GraphQLResponse): string {\n    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`\n  }\n}\n\nexport type MaybeLazy<T> = T | (() => T)\n\nexport type RequestDocument = string | DocumentNode\n\nexport interface GraphQLClientResponse<Data> {\n  status: number\n  headers: Headers\n  data: Data\n  extensions?: unknown\n  errors?: GraphQLError[]\n}\n\nexport type HTTPMethodInput = 'GET' | 'POST' | 'get' | 'post'\n\nexport interface RequestConfig extends Omit<RequestInit, 'headers' | 'method'>, AdditionalRequestOptions {\n  fetch?: Fetch\n  method?: HTTPMethodInput\n  headers?: MaybeLazy<GraphQLClientRequestHeaders>\n  requestMiddleware?: RequestMiddleware\n  responseMiddleware?: ResponseMiddleware\n  jsonSerializer?: JsonSerializer\n}\n\nexport type BatchRequestDocument<V extends Variables = Variables> = {\n  document: RequestDocument\n  variables?: V\n}\n\nexport type RawRequestOptions<V extends Variables = Variables> = {\n  query: string\n  requestHeaders?: GraphQLClientRequestHeaders\n  signal?: RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport type RequestOptions<V extends Variables = Variables, T = unknown> = {\n  document: RequestDocument | TypedDocumentNode<T, V>\n  requestHeaders?: GraphQLClientRequestHeaders\n  signal?: RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport interface BatchRequestsOptions<V extends Variables = Variables> {\n  documents: BatchRequestDocument<V>[]\n  requestHeaders?: GraphQLClientRequestHeaders\n  signal?: RequestInit['signal']\n}\n\nexport type RequestExtendedOptions<V extends Variables = Variables, T = unknown> = {\n  url: string\n} & RequestOptions<V, T>\n\nexport type RawRequestExtendedOptions<V extends Variables = Variables> = {\n  url: string\n} & RawRequestOptions<V>\n\nexport interface BatchRequestsExtendedOptions<V extends Variables = Variables>\n  extends BatchRequestsOptions<V> {\n  url: string\n}\n\nexport type ResponseMiddleware = (response: GraphQLClientResponse<unknown> | Error) => void\n\n// prettier-ignore\nexport type RequestMiddleware<V extends Variables = Variables> = (request: RequestExtendedInit<V>) => RequestExtendedInit | Promise<RequestExtendedInit>\n\ntype RequestExtendedInit<V extends Variables = Variables> = RequestInit & {\n  url: string\n  operationName?: string\n  variables?: V\n}\n\nexport type GraphQLClientRequestHeaders = Headers | string[][] | Record<string, string>\n\n// prettier-ignore\nexport type VariablesAndRequestHeadersArgs<V extends Variables> =\n  V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: GraphQLClientRequestHeaders]\n  : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: GraphQLClientRequestHeaders]\n    : [variables: V, requestHeaders?: GraphQLClientRequestHeaders]\n", "/* eslint-disable */\nimport { resolveRequestDocument } from './resolveRequestDocument.js'\nimport type { RequestDocument, Variables } from './types.js'\nimport { ClientError } from './types.js'\n// import type WebSocket from 'ws'\n\nconst CONNECTION_INIT = `connection_init`\nconst CONNECTION_ACK = `connection_ack`\nconst PING = `ping`\nconst PONG = `pong`\nconst SUBSCRIBE = `subscribe`\nconst NEXT = `next`\nconst ERROR = `error`\nconst COMPLETE = `complete`\n\ntype MessagePayload = { [key: string]: any }\n\ntype SubscribePayload<V extends Variables = Variables, E = any> = {\n  operationName?: string | null\n  query: string\n  variables?: V\n  extensions?: E\n}\n\nclass GraphQLWebSocketMessage<A = MessagePayload> {\n  private _type: string\n  private _id?: string\n  private _payload?: A\n\n  public get type(): string {\n    return this._type\n  }\n  public get id(): string | undefined {\n    return this._id\n  }\n  public get payload(): A | undefined {\n    return this._payload\n  }\n\n  constructor(type: string, payload?: A, id?: string) {\n    this._type = type\n    this._payload = payload\n    this._id = id\n  }\n\n  public get text(): string {\n    const result: any = { type: this.type }\n    if (this.id != null && this.id != undefined) result.id = this.id\n    if (this.payload != null && this.payload != undefined) result.payload = this.payload\n    return JSON.stringify(result)\n  }\n\n  static parse<A>(data: string, f: (payload: any) => A): GraphQLWebSocketMessage<A> {\n    const { type, payload, id }: { type: string; payload: any; id: string } = JSON.parse(data)\n    return new GraphQLWebSocketMessage(type, f(payload), id)\n  }\n}\n\nexport type SocketHandler = {\n  onInit?: <T>() => Promise<T>\n  onAcknowledged?: <A>(payload?: A) => Promise<void>\n  onPing?: <In, Out>(payload: In) => Promise<Out>\n  onPong?: <T>(payload: T) => any\n  onClose?: () => any\n}\n\nexport type UnsubscribeCallback = () => void\n\nexport interface GraphQLSubscriber<T, E = unknown> {\n  next?(data: T, extensions?: E): void\n  error?(errorValue: ClientError): void\n  complete?(): void\n}\n\ntype SubscriptionRecord = {\n  subscriber: GraphQLSubscriber<unknown, unknown>\n  query: string\n  variables?: Variables\n}\n\ntype SocketState = {\n  acknowledged: boolean\n  lastRequestId: number\n  subscriptions: { [key: string]: SubscriptionRecord }\n}\n\nexport class GraphQLWebSocketClient {\n  static PROTOCOL = `graphql-transport-ws`\n\n  private socket: WebSocket\n  private socketState: SocketState = { acknowledged: false, lastRequestId: 0, subscriptions: {} }\n\n  constructor(socket: WebSocket, { onInit, onAcknowledged, onPing, onPong }: SocketHandler) {\n    this.socket = socket\n\n    socket.addEventListener(`open`, async (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n      socket.send(ConnectionInit(onInit ? await onInit() : null).text)\n    })\n\n    socket.addEventListener(`close`, (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n    })\n\n    socket.addEventListener(`error`, (e) => {\n      console.error(e)\n    })\n\n    socket.addEventListener(`message`, (e) => {\n      try {\n        const message = parseMessage(e.data)\n        switch (message.type) {\n          case CONNECTION_ACK: {\n            if (this.socketState.acknowledged) {\n              console.warn(`Duplicate CONNECTION_ACK message ignored`)\n            } else {\n              this.socketState.acknowledged = true\n              if (onAcknowledged) onAcknowledged(message.payload)\n            }\n            return\n          }\n          case PING: {\n            if (onPing) onPing(message.payload).then((r) => socket.send(Pong(r).text))\n            else socket.send(Pong(null).text)\n            return\n          }\n          case PONG: {\n            if (onPong) onPong(message.payload)\n            return\n          }\n        }\n\n        if (!this.socketState.acknowledged) {\n          // Web-socket connection not acknowledged\n          return\n        }\n\n        if (message.id === undefined || message.id === null || !this.socketState.subscriptions[message.id]) {\n          // No subscription identifer or subscription indentifier is not found\n          return\n        }\n        const { query, variables, subscriber } = this.socketState.subscriptions[message.id]!\n\n        switch (message.type) {\n          case NEXT: {\n            if (!message.payload.errors && message.payload.data) {\n              subscriber.next && subscriber.next(message.payload.data)\n            }\n            if (message.payload.errors) {\n              subscriber.error &&\n                subscriber.error(new ClientError({ ...message.payload, status: 200 }, { query, variables }))\n            } else {\n            }\n            return\n          }\n\n          case ERROR: {\n            subscriber.error &&\n              subscriber.error(\n                new ClientError({ errors: message.payload, status: 200 }, { query, variables })\n              )\n            return\n          }\n\n          case COMPLETE: {\n            subscriber.complete && subscriber.complete()\n            delete this.socketState.subscriptions[message.id]\n            return\n          }\n        }\n      } catch (e) {\n        // Unexpected errors while handling graphql-ws message\n        console.error(e)\n        socket.close(1006)\n      }\n      socket.close(4400, `Unknown graphql-ws message.`)\n    })\n  }\n\n  private makeSubscribe<T, V extends Variables, E>(\n    query: string,\n    operationName: string | undefined,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const subscriptionId = (this.socketState.lastRequestId++).toString()\n    this.socketState.subscriptions[subscriptionId] = { query, variables, subscriber }\n    this.socket.send(Subscribe(subscriptionId, { query, operationName, variables }).text)\n    return () => {\n      this.socket.send(Complete(subscriptionId).text)\n      delete this.socketState.subscriptions[subscriptionId]\n    }\n  }\n\n  rawRequest<T = any, V extends Variables = Variables, E = any>(\n    query: string,\n    variables?: V\n  ): Promise<{ data: T; extensions?: E }> {\n    return new Promise<{ data: T; extensions?: E; headers?: Headers; status?: number }>((resolve, reject) => {\n      let result: { data: T; extensions?: E }\n      this.rawSubscribe(\n        query,\n        {\n          next: (data: T, extensions: E) => (result = { data, extensions }),\n          error: reject,\n          complete: () => resolve(result),\n        },\n        variables\n      )\n    })\n  }\n\n  request<T = any, V extends Variables = Variables>(document: RequestDocument, variables?: V): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      let result: T\n      this.subscribe(\n        document,\n        {\n          next: (data: T) => (result = data),\n          error: reject,\n          complete: () => resolve(result),\n        },\n        variables\n      )\n    })\n  }\n\n  subscribe<T = any, V extends Variables = Variables, E = any>(\n    document: RequestDocument,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const { query, operationName } = resolveRequestDocument(document)\n    return this.makeSubscribe(query, operationName, subscriber, variables)\n  }\n\n  rawSubscribe<T = any, V extends Variables = Variables, E = any>(\n    query: string,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    return this.makeSubscribe(query, undefined, subscriber, variables)\n  }\n\n  ping(payload: Variables) {\n    this.socket.send(Ping(payload).text)\n  }\n\n  close() {\n    this.socket.close(1000)\n  }\n}\n\n// Helper functions\n\nfunction parseMessage<A = any>(data: string, f: (payload: any) => A = (a) => a): GraphQLWebSocketMessage<A> {\n  const m = GraphQLWebSocketMessage.parse<A>(data, f)\n  return m\n}\n\nfunction ConnectionInit<A>(payload?: A) {\n  return new GraphQLWebSocketMessage(CONNECTION_INIT, payload)\n}\n\nfunction Ping(payload: any) {\n  return new GraphQLWebSocketMessage(PING, payload, undefined)\n}\nfunction Pong(payload: any) {\n  return new GraphQLWebSocketMessage(PONG, payload, undefined)\n}\n\nfunction Subscribe(id: string, payload: SubscribePayload) {\n  return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id)\n}\n\nfunction Complete(id: string) {\n  return new GraphQLWebSocketMessage(COMPLETE, undefined, id)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAMA,KAAC,SAASA,IAAE;AAAC,UAAG,OAAO,YAAU,YAAU,OAAO,WAAS,aAAY;AAAC,eAAO,UAAQA,GAAE;AAAA,MAAC,WAAS,OAAO,WAAS,cAAY,OAAO,KAAI;AAAC,eAAO,CAAC,GAAEA,EAAC;AAAA,MAAC,OAAK;AAAC,YAAI;AAAE,YAAG,OAAO,WAAS,aAAY;AAAC,cAAE;AAAA,QAAM,WAAS,OAAO,WAAS,aAAY;AAAC,cAAE;AAAA,QAAM,WAAS,OAAO,SAAO,aAAY;AAAC,cAAE;AAAA,QAAI,OAAK;AAAC,cAAE;AAAA,QAAI;AAAC,UAAE,cAAcA,GAAE;AAAA,MAAC;AAAA,IAAC,GAAG,WAAU;AAAC,UAAIC,SAAOC,SAAOC;AAAQ,aAAQ,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,iBAAS,EAAEC,IAAE,GAAE;AAAC,cAAG,CAAC,EAAEA,EAAC,GAAE;AAAC,gBAAG,CAAC,EAAEA,EAAC,GAAE;AAAC,kBAAI,IAAE,OAAO,aAAS,cAAY;AAAQ,kBAAG,CAAC,KAAG;AAAE,uBAAO,EAAEA,IAAE,IAAE;AAAE,kBAAG;AAAE,uBAAO,EAAEA,IAAE,IAAE;AAAE,kBAAIJ,KAAE,IAAI,MAAM,yBAAuBI,KAAE,GAAG;AAAE,oBAAOJ,GAAE,OAAK,oBAAoBA;AAAA,YAAE;AAAC,gBAAI,IAAE,EAAEI,EAAC,IAAE,EAAC,SAAQ,CAAC,EAAC;AAAE,cAAEA,EAAC,EAAE,CAAC,EAAE,KAAK,EAAE,SAAQ,SAASC,IAAE;AAAC,kBAAIC,KAAE,EAAEF,EAAC,EAAE,CAAC,EAAEC,EAAC;AAAE,qBAAO,EAAEC,KAAEA,KAAED,EAAC;AAAA,YAAC,GAAE,GAAE,EAAE,SAAQ,GAAE,GAAE,GAAE,CAAC;AAAA,UAAC;AAAC,iBAAO,EAAED,EAAC,EAAE;AAAA,QAAO;AAAC,YAAI,IAAE,OAAO,aAAS,cAAY;AAAQ,iBAAQ,IAAE,GAAE,IAAE,EAAE,QAAO;AAAI,YAAE,EAAE,CAAC,CAAC;AAAE,eAAO;AAAA,MAAC,EAAG,EAAC,GAAE,CAAC,SAAS,SAAQF,SAAOC,UAAQ;AACr1B,SAAC,SAAU,QAAO;AAClB;AACA,cAAI,WAAW,OAAO,oBAAoB,OAAO;AAEjD,cAAI;AAEJ;AACE,gBAAI,UAAU;AACZ,kBAAI,SAAS;AACb,kBAAI,WAAW,IAAI,SAAS,QAAQ;AACpC,kBAAI,UAAU,OAAO,SAAS,eAAe,EAAE;AAC/C,uBAAS,QAAQ,SAAS;AAAA,gBACxB,eAAe;AAAA,cACjB,CAAC;AACD,8BAAgB,WAAY;AAC1B,wBAAQ,OAAQ,SAAS,EAAE,SAAS;AAAA,cACtC;AAAA,YACF,WAAW,CAAC,OAAO,gBAAgB,OAAO,OAAO,mBAAmB,aAAa;AAC/E,kBAAI,UAAU,IAAI,OAAO,eAAe;AACxC,sBAAQ,MAAM,YAAY;AAC1B,8BAAgB,WAAY;AAC1B,wBAAQ,MAAM,YAAY,CAAC;AAAA,cAC7B;AAAA,YACF,WAAW,cAAc,UAAU,wBAAwB,OAAO,SAAS,cAAc,QAAQ,GAAG;AAClG,8BAAgB,WAAY;AAI1B,oBAAI,WAAW,OAAO,SAAS,cAAc,QAAQ;AACrD,yBAAS,qBAAqB,WAAY;AACxC,2BAAS;AAET,2BAAS,qBAAqB;AAC9B,2BAAS,WAAW,YAAY,QAAQ;AACxC,6BAAW;AAAA,gBACb;AACA,uBAAO,SAAS,gBAAgB,YAAY,QAAQ;AAAA,cACtD;AAAA,YACF,OAAO;AACL,8BAAgB,WAAY;AAC1B,2BAAW,UAAU,CAAC;AAAA,cACxB;AAAA,YACF;AAAA,UACF;AAEA,cAAI;AACJ,cAAI,QAAQ,CAAC;AAEb,mBAAS,WAAW;AAClB,uBAAW;AACX,gBAAI,GAAG;AACP,gBAAI,MAAM,MAAM;AAChB,mBAAO,KAAK;AACV,yBAAW;AACX,sBAAQ,CAAC;AACT,kBAAI;AACJ,qBAAO,EAAE,IAAI,KAAK;AAChB,yBAAS,CAAC,EAAE;AAAA,cACd;AACA,oBAAM,MAAM;AAAA,YACd;AACA,uBAAW;AAAA,UACb;AAEA,UAAAD,QAAO,UAAU;AACjB,mBAAS,UAAU,MAAM;AACvB,gBAAI,MAAM,KAAK,IAAI,MAAM,KAAK,CAAC,UAAU;AACvC,4BAAc;AAAA,YAChB;AAAA,UACF;AAAA,QAEA,GAAG,KAAK,MAAK,OAAO,WAAW,cAAc,SAAS,OAAO,SAAS,cAAc,OAAO,OAAO,WAAW,cAAc,SAAS,CAAC,CAAC;AAAA,MACtI,GAAE,CAAC,CAAC,GAAE,GAAE,CAAC,SAAS,SAAQA,SAAOC,UAAQ;AACzC;AACA,YAAI,YAAY,QAAQ,CAAC;AAGzB,iBAAS,WAAW;AAAA,QAAC;AAErB,YAAI,WAAW,CAAC;AAEhB,YAAI,WAAW,CAAC,UAAU;AAC1B,YAAI,YAAY,CAAC,WAAW;AAC5B,YAAI,UAAU,CAAC,SAAS;AAExB,QAAAD,QAAO,UAAUK;AAEjB,iBAASA,SAAQ,UAAU;AACzB,cAAI,OAAO,aAAa,YAAY;AAClC,kBAAM,IAAI,UAAU,6BAA6B;AAAA,UACnD;AACA,eAAK,QAAQ;AACb,eAAK,QAAQ,CAAC;AACd,eAAK,UAAU;AACf,cAAI,aAAa,UAAU;AACzB,kCAAsB,MAAM,QAAQ;AAAA,UACtC;AAAA,QACF;AAEA,QAAAA,SAAQ,UAAU,OAAO,IAAI,SAAU,YAAY;AACjD,iBAAO,KAAK,KAAK,MAAM,UAAU;AAAA,QACnC;AACA,QAAAA,SAAQ,UAAU,OAAO,SAAU,aAAa,YAAY;AAC1D,cAAI,OAAO,gBAAgB,cAAc,KAAK,UAAU,aACtD,OAAO,eAAe,cAAc,KAAK,UAAU,UAAU;AAC7D,mBAAO;AAAA,UACT;AACA,cAAI,UAAU,IAAI,KAAK,YAAY,QAAQ;AAC3C,cAAI,KAAK,UAAU,SAAS;AAC1B,gBAAI,WAAW,KAAK,UAAU,YAAY,cAAc;AACxD,mBAAO,SAAS,UAAU,KAAK,OAAO;AAAA,UACxC,OAAO;AACL,iBAAK,MAAM,KAAK,IAAI,UAAU,SAAS,aAAa,UAAU,CAAC;AAAA,UACjE;AAEA,iBAAO;AAAA,QACT;AACA,iBAAS,UAAU,SAAS,aAAa,YAAY;AACnD,eAAK,UAAU;AACf,cAAI,OAAO,gBAAgB,YAAY;AACrC,iBAAK,cAAc;AACnB,iBAAK,gBAAgB,KAAK;AAAA,UAC5B;AACA,cAAI,OAAO,eAAe,YAAY;AACpC,iBAAK,aAAa;AAClB,iBAAK,eAAe,KAAK;AAAA,UAC3B;AAAA,QACF;AACA,kBAAU,UAAU,gBAAgB,SAAU,OAAO;AACnD,mBAAS,QAAQ,KAAK,SAAS,KAAK;AAAA,QACtC;AACA,kBAAU,UAAU,qBAAqB,SAAU,OAAO;AACxD,iBAAO,KAAK,SAAS,KAAK,aAAa,KAAK;AAAA,QAC9C;AACA,kBAAU,UAAU,eAAe,SAAU,OAAO;AAClD,mBAAS,OAAO,KAAK,SAAS,KAAK;AAAA,QACrC;AACA,kBAAU,UAAU,oBAAoB,SAAU,OAAO;AACvD,iBAAO,KAAK,SAAS,KAAK,YAAY,KAAK;AAAA,QAC7C;AAEA,iBAAS,OAAO,SAAS,MAAM,OAAO;AACpC,oBAAU,WAAY;AACpB,gBAAI;AACJ,gBAAI;AACF,4BAAc,KAAK,KAAK;AAAA,YAC1B,SAAS,GAAG;AACV,qBAAO,SAAS,OAAO,SAAS,CAAC;AAAA,YACnC;AACA,gBAAI,gBAAgB,SAAS;AAC3B,uBAAS,OAAO,SAAS,IAAI,UAAU,oCAAoC,CAAC;AAAA,YAC9E,OAAO;AACL,uBAAS,QAAQ,SAAS,WAAW;AAAA,YACvC;AAAA,UACF,CAAC;AAAA,QACH;AAEA,iBAAS,UAAU,SAAUC,OAAM,OAAO;AACxC,cAAI,SAAS,SAAS,SAAS,KAAK;AACpC,cAAI,OAAO,WAAW,SAAS;AAC7B,mBAAO,SAAS,OAAOA,OAAM,OAAO,KAAK;AAAA,UAC3C;AACA,cAAI,WAAW,OAAO;AAEtB,cAAI,UAAU;AACZ,kCAAsBA,OAAM,QAAQ;AAAA,UACtC,OAAO;AACL,YAAAA,MAAK,QAAQ;AACb,YAAAA,MAAK,UAAU;AACf,gBAAI,IAAI;AACR,gBAAI,MAAMA,MAAK,MAAM;AACrB,mBAAO,EAAE,IAAI,KAAK;AAChB,cAAAA,MAAK,MAAM,CAAC,EAAE,cAAc,KAAK;AAAA,YACnC;AAAA,UACF;AACA,iBAAOA;AAAA,QACT;AACA,iBAAS,SAAS,SAAUA,OAAM,OAAO;AACvC,UAAAA,MAAK,QAAQ;AACb,UAAAA,MAAK,UAAU;AACf,cAAI,IAAI;AACR,cAAI,MAAMA,MAAK,MAAM;AACrB,iBAAO,EAAE,IAAI,KAAK;AAChB,YAAAA,MAAK,MAAM,CAAC,EAAE,aAAa,KAAK;AAAA,UAClC;AACA,iBAAOA;AAAA,QACT;AAEA,iBAAS,QAAQ,KAAK;AAEpB,cAAI,OAAO,OAAO,IAAI;AACtB,cAAI,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,eAAe,OAAO,SAAS,YAAY;AAC/F,mBAAO,SAAS,WAAW;AACzB,mBAAK,MAAM,KAAK,SAAS;AAAA,YAC3B;AAAA,UACF;AAAA,QACF;AAEA,iBAAS,sBAAsBA,OAAM,UAAU;AAE7C,cAAI,SAAS;AACb,mBAAS,QAAQ,OAAO;AACtB,gBAAI,QAAQ;AACV;AAAA,YACF;AACA,qBAAS;AACT,qBAAS,OAAOA,OAAM,KAAK;AAAA,UAC7B;AAEA,mBAAS,UAAU,OAAO;AACxB,gBAAI,QAAQ;AACV;AAAA,YACF;AACA,qBAAS;AACT,qBAAS,QAAQA,OAAM,KAAK;AAAA,UAC9B;AAEA,mBAAS,cAAc;AACrB,qBAAS,WAAW,OAAO;AAAA,UAC7B;AAEA,cAAI,SAAS,SAAS,WAAW;AACjC,cAAI,OAAO,WAAW,SAAS;AAC7B,oBAAQ,OAAO,KAAK;AAAA,UACtB;AAAA,QACF;AAEA,iBAAS,SAAS,MAAM,OAAO;AAC7B,cAAI,MAAM,CAAC;AACX,cAAI;AACF,gBAAI,QAAQ,KAAK,KAAK;AACtB,gBAAI,SAAS;AAAA,UACf,SAAS,GAAG;AACV,gBAAI,SAAS;AACb,gBAAI,QAAQ;AAAA,UACd;AACA,iBAAO;AAAA,QACT;AAEA,QAAAD,SAAQ,UAAU;AAClB,iBAAS,QAAQ,OAAO;AACtB,cAAI,iBAAiB,MAAM;AACzB,mBAAO;AAAA,UACT;AACA,iBAAO,SAAS,QAAQ,IAAI,KAAK,QAAQ,GAAG,KAAK;AAAA,QACnD;AAEA,QAAAA,SAAQ,SAAS;AACjB,iBAAS,OAAO,QAAQ;AACtB,cAAI,UAAU,IAAI,KAAK,QAAQ;AAC/B,iBAAO,SAAS,OAAO,SAAS,MAAM;AAAA,QACxC;AAEA,QAAAA,SAAQ,MAAM;AACd,iBAAS,IAAI,UAAU;AACrB,cAAIC,QAAO;AACX,cAAI,OAAO,UAAU,SAAS,KAAK,QAAQ,MAAM,kBAAkB;AACjE,mBAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC;AAAA,UACtD;AAEA,cAAI,MAAM,SAAS;AACnB,cAAI,SAAS;AACb,cAAI,CAAC,KAAK;AACR,mBAAO,KAAK,QAAQ,CAAC,CAAC;AAAA,UACxB;AAEA,cAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,cAAI,WAAW;AACf,cAAI,IAAI;AACR,cAAI,UAAU,IAAI,KAAK,QAAQ;AAE/B,iBAAO,EAAE,IAAI,KAAK;AAChB,wBAAY,SAAS,CAAC,GAAG,CAAC;AAAA,UAC5B;AACA,iBAAO;AACP,mBAAS,YAAY,OAAOC,IAAG;AAC7B,YAAAD,MAAK,QAAQ,KAAK,EAAE,KAAK,gBAAgB,SAAU,OAAO;AACxD,kBAAI,CAAC,QAAQ;AACX,yBAAS;AACT,yBAAS,OAAO,SAAS,KAAK;AAAA,cAChC;AAAA,YACF,CAAC;AACD,qBAAS,eAAe,UAAU;AAChC,qBAAOC,EAAC,IAAI;AACZ,kBAAI,EAAE,aAAa,OAAO,CAAC,QAAQ;AACjC,yBAAS;AACT,yBAAS,QAAQ,SAAS,MAAM;AAAA,cAClC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,QAAAF,SAAQ,OAAO;AACf,iBAAS,KAAK,UAAU;AACtB,cAAIC,QAAO;AACX,cAAI,OAAO,UAAU,SAAS,KAAK,QAAQ,MAAM,kBAAkB;AACjE,mBAAO,KAAK,OAAO,IAAI,UAAU,kBAAkB,CAAC;AAAA,UACtD;AAEA,cAAI,MAAM,SAAS;AACnB,cAAI,SAAS;AACb,cAAI,CAAC,KAAK;AACR,mBAAO,KAAK,QAAQ,CAAC,CAAC;AAAA,UACxB;AAEA,cAAI,IAAI;AACR,cAAI,UAAU,IAAI,KAAK,QAAQ;AAE/B,iBAAO,EAAE,IAAI,KAAK;AAChB,qBAAS,SAAS,CAAC,CAAC;AAAA,UACtB;AACA,iBAAO;AACP,mBAAS,SAAS,OAAO;AACvB,YAAAA,MAAK,QAAQ,KAAK,EAAE,KAAK,SAAU,UAAU;AAC3C,kBAAI,CAAC,QAAQ;AACX,yBAAS;AACT,yBAAS,QAAQ,SAAS,QAAQ;AAAA,cACpC;AAAA,YACF,GAAG,SAAU,OAAO;AAClB,kBAAI,CAAC,QAAQ;AACX,yBAAS;AACT,yBAAS,OAAO,SAAS,KAAK;AAAA,cAChC;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MAEA,GAAE,EAAC,KAAI,EAAC,CAAC,GAAE,GAAE,CAAC,SAAS,SAAQN,SAAOC,UAAQ;AAC9C,SAAC,SAAU,QAAO;AAClB;AACA,cAAI,OAAO,OAAO,YAAY,YAAY;AACxC,mBAAO,UAAU,QAAQ,CAAC;AAAA,UAC5B;AAAA,QAEA,GAAG,KAAK,MAAK,OAAO,WAAW,cAAc,SAAS,OAAO,SAAS,cAAc,OAAO,OAAO,WAAW,cAAc,SAAS,CAAC,CAAC;AAAA,MACtI,GAAE,EAAC,KAAI,EAAC,CAAC,GAAE,GAAE,CAAC,SAAS,SAAQD,SAAOC,UAAQ;AAC9C;AAEA,YAAI,UAAU,OAAO,WAAW,cAAc,OAAO,OAAO,aAAa,WAAW,SAAU,KAAK;AAAE,iBAAO,OAAO;AAAA,QAAK,IAAI,SAAU,KAAK;AAAE,iBAAO,OAAO,OAAO,WAAW,cAAc,IAAI,gBAAgB,UAAU,QAAQ,OAAO,YAAY,WAAW,OAAO;AAAA,QAAK;AAE3Q,iBAAS,gBAAgB,UAAU,aAAa;AAAE,cAAI,EAAE,oBAAoB,cAAc;AAAE,kBAAM,IAAI,UAAU,mCAAmC;AAAA,UAAG;AAAA,QAAE;AAExJ,iBAAS,SAAS;AAEd,cAAI;AACA,gBAAI,OAAO,cAAc,aAAa;AAClC,qBAAO;AAAA,YACX;AACA,gBAAI,OAAO,oBAAoB,aAAa;AACxC,qBAAO;AAAA,YACX;AACA,gBAAI,OAAO,iBAAiB,aAAa;AACrC,qBAAO;AAAA,YACX;AACA,gBAAI,OAAO,eAAe,aAAa;AACnC,qBAAO;AAAA,YACX;AACA,gBAAI,OAAO,gBAAgB,aAAa;AACpC,qBAAO;AAAA,YACX;AAAA,UACJ,SAAS,GAAG;AACR;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,MAAM,OAAO;AAEjB,iBAAS,mBAAmB;AACxB,cAAI;AAGA,gBAAI,CAAC,OAAO,CAAC,IAAI,MAAM;AACnB,qBAAO;AAAA,YACX;AAKA,gBAAI,WAAW,OAAO,iBAAiB,eAAe,4BAA4B,KAAK,UAAU,SAAS,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,KAAK,CAAC,aAAa,KAAK,UAAU,QAAQ;AAE3L,gBAAI,WAAW,OAAO,UAAU,cAAc,MAAM,SAAS,EAAE,QAAQ,cAAc,MAAM;AAQ3F,oBAAQ,CAAC,YAAY,aAAa,OAAO,cAAc;AAAA;AAAA;AAAA;AAAA,YAKvD,OAAO,gBAAgB;AAAA,UAC3B,SAAS,GAAG;AACR,mBAAO;AAAA,UACX;AAAA,QACJ;AAQA,iBAAS,WAAW,OAAO,YAAY;AAEnC,kBAAQ,SAAS,CAAC;AAClB,uBAAa,cAAc,CAAC;AAC5B,cAAI;AACA,mBAAO,IAAI,KAAK,OAAO,UAAU;AAAA,UACrC,SAAS,GAAG;AACR,gBAAI,EAAE,SAAS,aAAa;AACxB,oBAAM;AAAA,YACV;AACA,gBAAI,UAAU,OAAO,gBAAgB,cAAc,cAAc,OAAO,kBAAkB,cAAc,gBAAgB,OAAO,mBAAmB,cAAc,iBAAiB;AACjL,gBAAI,UAAU,IAAI,QAAQ;AAC1B,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,sBAAQ,OAAO,MAAM,CAAC,CAAC;AAAA,YAC3B;AACA,mBAAO,QAAQ,QAAQ,WAAW,IAAI;AAAA,UAC1C;AAAA,QACJ;AAIA,YAAI,OAAO,YAAY,aAAa;AAGhC,kBAAQ,CAAC;AAAA,QACb;AACA,YAAI,YAAY;AAEhB,iBAAS,gBAAgB,SAAS,UAAU;AACxC,cAAI,UAAU;AACV,oBAAQ,KAAK,SAAU,QAAQ;AAC3B,uBAAS,MAAM,MAAM;AAAA,YACzB,GAAG,SAAU,OAAO;AAChB,uBAAS,KAAK;AAAA,YAClB,CAAC;AAAA,UACL;AAAA,QACJ;AAEA,iBAAS,oBAAoB,SAAS,UAAU,eAAe;AAC3D,cAAI,OAAO,aAAa,YAAY;AAChC,oBAAQ,KAAK,QAAQ;AAAA,UACzB;AAEA,cAAI,OAAO,kBAAkB,YAAY;AACrC,oBAAQ,OAAO,EAAE,aAAa;AAAA,UAClC;AAAA,QACJ;AAEA,iBAAS,aAAaO,MAAK;AAEvB,cAAI,OAAOA,SAAQ,UAAU;AACzB,oBAAQ,KAAKA,OAAM,yCAAyC;AAC5D,YAAAA,OAAM,OAAOA,IAAG;AAAA,UACpB;AAEA,iBAAOA;AAAA,QACX;AAEA,iBAAS,cAAc;AACnB,cAAI,UAAU,UAAU,OAAO,UAAU,UAAU,SAAS,CAAC,MAAM,YAAY;AAC3E,mBAAO,UAAU,UAAU,SAAS,CAAC;AAAA,UACzC;AAAA,QACJ;AAKA,YAAI,4BAA4B;AAChC,YAAI,gBAAgB;AACpB,YAAI,aAAa,CAAC;AAClB,YAAI,WAAW,OAAO,UAAU;AAGhC,YAAI,YAAY;AAChB,YAAI,aAAa;AAOjB,iBAAS,wBAAwB,KAAK;AAClC,cAAIC,UAAS,IAAI;AACjB,cAAI,MAAM,IAAI,YAAYA,OAAM;AAChC,cAAI,MAAM,IAAI,WAAW,GAAG;AAC5B,mBAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC7B,gBAAI,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,UAC7B;AACA,iBAAO;AAAA,QACX;AAiBA,iBAAS,gCAAgCC,MAAK;AAC1C,iBAAO,IAAI,UAAU,SAAU,SAAS;AACpC,gBAAI,MAAMA,KAAI,YAAY,2BAA2B,UAAU;AAC/D,gBAAI,OAAO,WAAW,CAAC,EAAE,CAAC;AAC1B,gBAAI,YAAY,yBAAyB,EAAE,IAAI,MAAM,KAAK;AAE1D,gBAAI,UAAU,SAAU,GAAG;AAGvB,gBAAE,eAAe;AACjB,gBAAE,gBAAgB;AAClB,sBAAQ,KAAK;AAAA,YACjB;AAEA,gBAAI,aAAa,WAAY;AACzB,kBAAI,gBAAgB,UAAU,UAAU,MAAM,eAAe;AAC7D,kBAAI,cAAc,UAAU,UAAU,MAAM,QAAQ;AAGpD,sBAAQ,eAAe,CAAC,iBAAiB,SAAS,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE;AAAA,YACjF;AAAA,UACJ,CAAC,EAAE,OAAO,EAAE,WAAY;AACpB,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AAEA,iBAAS,kBAAkBA,MAAK;AAC5B,cAAI,OAAO,kBAAkB,WAAW;AACpC,mBAAO,UAAU,QAAQ,aAAa;AAAA,UAC1C;AACA,iBAAO,gCAAgCA,IAAG,EAAE,KAAK,SAAU,OAAO;AAC9D,4BAAgB;AAChB,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AAEA,iBAAS,gBAAgB,QAAQ;AAC7B,cAAI,YAAY,WAAW,OAAO,IAAI;AAGtC,cAAI,oBAAoB,CAAC;AAEzB,4BAAkB,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACjE,8BAAkB,UAAU;AAC5B,8BAAkB,SAAS;AAAA,UAC/B,CAAC;AAGD,oBAAU,mBAAmB,KAAK,iBAAiB;AAGnD,cAAI,CAAC,UAAU,SAAS;AACpB,sBAAU,UAAU,kBAAkB;AAAA,UAC1C,OAAO;AACH,sBAAU,UAAU,UAAU,QAAQ,KAAK,WAAY;AACnD,qBAAO,kBAAkB;AAAA,YAC7B,CAAC;AAAA,UACL;AAAA,QACJ;AAEA,iBAAS,kBAAkB,QAAQ;AAC/B,cAAI,YAAY,WAAW,OAAO,IAAI;AAGtC,cAAI,oBAAoB,UAAU,mBAAmB,IAAI;AAIzD,cAAI,mBAAmB;AACnB,8BAAkB,QAAQ;AAC1B,mBAAO,kBAAkB;AAAA,UAC7B;AAAA,QACJ;AAEA,iBAAS,iBAAiB,QAAQ,KAAK;AACnC,cAAI,YAAY,WAAW,OAAO,IAAI;AAGtC,cAAI,oBAAoB,UAAU,mBAAmB,IAAI;AAIzD,cAAI,mBAAmB;AACnB,8BAAkB,OAAO,GAAG;AAC5B,mBAAO,kBAAkB;AAAA,UAC7B;AAAA,QACJ;AAEA,iBAAS,eAAe,QAAQ,eAAe;AAC3C,iBAAO,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC5C,uBAAW,OAAO,IAAI,IAAI,WAAW,OAAO,IAAI,KAAK,gBAAgB;AAErE,gBAAI,OAAO,IAAI;AACX,kBAAI,eAAe;AACf,gCAAgB,MAAM;AACtB,uBAAO,GAAG,MAAM;AAAA,cACpB,OAAO;AACH,uBAAO,QAAQ,OAAO,EAAE;AAAA,cAC5B;AAAA,YACJ;AAEA,gBAAI,SAAS,CAAC,OAAO,IAAI;AAEzB,gBAAI,eAAe;AACf,qBAAO,KAAK,OAAO,OAAO;AAAA,YAC9B;AAEA,gBAAI,UAAU,IAAI,KAAK,MAAM,KAAK,MAAM;AAExC,gBAAI,eAAe;AACf,sBAAQ,kBAAkB,SAAU,GAAG;AACnC,oBAAI,KAAK,QAAQ;AACjB,oBAAI;AACA,qBAAG,kBAAkB,OAAO,SAAS;AACrC,sBAAI,EAAE,cAAc,GAAG;AAEnB,uBAAG,kBAAkB,yBAAyB;AAAA,kBAClD;AAAA,gBACJ,SAAS,IAAI;AACT,sBAAI,GAAG,SAAS,mBAAmB;AAC/B,4BAAQ,KAAK,mBAAmB,OAAO,OAAO,sCAA2C,EAAE,aAAa,iBAAiB,EAAE,aAAa,wBAAwB,OAAO,YAAY,mBAAmB;AAAA,kBAC1M,OAAO;AACH,0BAAM;AAAA,kBACV;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAEA,oBAAQ,UAAU,SAAU,GAAG;AAC3B,gBAAE,eAAe;AACjB,qBAAO,QAAQ,KAAK;AAAA,YACxB;AAEA,oBAAQ,YAAY,WAAY;AAC5B,kBAAI,KAAK,QAAQ;AACjB,iBAAG,kBAAkB,SAAU,GAAG;AAM9B,kBAAE,OAAO,MAAM;AAAA,cACnB;AACA,sBAAQ,EAAE;AACV,gCAAkB,MAAM;AAAA,YAC5B;AAAA,UACJ,CAAC;AAAA,QACL;AAEA,iBAAS,uBAAuB,QAAQ;AACpC,iBAAO,eAAe,QAAQ,KAAK;AAAA,QACvC;AAEA,iBAAS,uBAAuB,QAAQ;AACpC,iBAAO,eAAe,QAAQ,IAAI;AAAA,QACtC;AAEA,iBAAS,iBAAiB,QAAQ,gBAAgB;AAC9C,cAAI,CAAC,OAAO,IAAI;AACZ,mBAAO;AAAA,UACX;AAEA,cAAI,aAAa,CAAC,OAAO,GAAG,iBAAiB,SAAS,OAAO,SAAS;AACtE,cAAI,cAAc,OAAO,UAAU,OAAO,GAAG;AAC7C,cAAI,YAAY,OAAO,UAAU,OAAO,GAAG;AAE3C,cAAI,aAAa;AAGb,gBAAI,OAAO,YAAY,gBAAgB;AACnC,sBAAQ,KAAK,mBAAmB,OAAO,OAAO,wCAA6C,OAAO,GAAG,UAAU,iBAAiB,OAAO,UAAU,GAAG;AAAA,YACxJ;AAEA,mBAAO,UAAU,OAAO,GAAG;AAAA,UAC/B;AAEA,cAAI,aAAa,YAAY;AAIzB,gBAAI,YAAY;AACZ,kBAAI,aAAa,OAAO,GAAG,UAAU;AACrC,kBAAI,aAAa,OAAO,SAAS;AAC7B,uBAAO,UAAU;AAAA,cACrB;AAAA,YACJ;AAEA,mBAAO;AAAA,UACX;AAEA,iBAAO;AAAA,QACX;AAGA,iBAAS,YAAY,MAAM;AACvB,iBAAO,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC5C,gBAAI,SAAS,IAAI,WAAW;AAC5B,mBAAO,UAAU;AACjB,mBAAO,YAAY,SAAU,GAAG;AAC5B,kBAAI,SAAS,KAAK,EAAE,OAAO,UAAU,EAAE;AACvC,sBAAQ;AAAA,gBACJ,6BAA6B;AAAA,gBAC7B,MAAM;AAAA,gBACN,MAAM,KAAK;AAAA,cACf,CAAC;AAAA,YACL;AACA,mBAAO,mBAAmB,IAAI;AAAA,UAClC,CAAC;AAAA,QACL;AAGA,iBAAS,YAAY,aAAa;AAC9B,cAAI,YAAY,wBAAwB,KAAK,YAAY,IAAI,CAAC;AAC9D,iBAAO,WAAW,CAAC,SAAS,GAAG,EAAE,MAAM,YAAY,KAAK,CAAC;AAAA,QAC7D;AAGA,iBAAS,eAAe,OAAO;AAC3B,iBAAO,SAAS,MAAM;AAAA,QAC1B;AAMA,iBAAS,YAAY,UAAU;AAC3B,cAAIJ,QAAO;AAEX,cAAI,UAAUA,MAAK,WAAW,EAAE,KAAK,WAAY;AAC7C,gBAAI,YAAY,WAAWA,MAAK,QAAQ,IAAI;AAE5C,gBAAI,aAAa,UAAU,SAAS;AAChC,qBAAO,UAAU;AAAA,YACrB;AAAA,UACJ,CAAC;AAED,8BAAoB,SAAS,UAAU,QAAQ;AAC/C,iBAAO;AAAA,QACX;AAKA,iBAAS,cAAc,QAAQ;AAC3B,0BAAgB,MAAM;AAEtB,cAAI,YAAY,WAAW,OAAO,IAAI;AACtC,cAAI,UAAU,UAAU;AAExB,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,gBAAI,SAAS,QAAQ,CAAC;AACtB,gBAAI,OAAO,QAAQ,IAAI;AACnB,qBAAO,QAAQ,GAAG,MAAM;AACxB,qBAAO,QAAQ,KAAK;AAAA,YACxB;AAAA,UACJ;AACA,iBAAO,KAAK;AAEZ,iBAAO,uBAAuB,MAAM,EAAE,KAAK,SAAU,IAAI;AACrD,mBAAO,KAAK;AACZ,gBAAI,iBAAiB,MAAM,GAAG;AAE1B,qBAAO,uBAAuB,MAAM;AAAA,YACxC;AACA,mBAAO;AAAA,UACX,CAAC,EAAE,KAAK,SAAU,IAAI;AAGlB,mBAAO,KAAK,UAAU,KAAK;AAC3B,qBAASC,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACrC,sBAAQA,EAAC,EAAE,QAAQ,KAAK;AAAA,YAC5B;AAAA,UACJ,CAAC,EAAE,OAAO,EAAE,SAAU,KAAK;AACvB,6BAAiB,QAAQ,GAAG;AAC5B,kBAAM;AAAA,UACV,CAAC;AAAA,QACL;AAIA,iBAAS,kBAAkB,QAAQ,MAAM,UAAU,SAAS;AACxD,cAAI,YAAY,QAAW;AACvB,sBAAU;AAAA,UACd;AAEA,cAAI;AACA,gBAAI,KAAK,OAAO,GAAG,YAAY,OAAO,WAAW,IAAI;AACrD,qBAAS,MAAM,EAAE;AAAA,UACrB,SAAS,KAAK;AACV,gBAAI,UAAU,MAAM,CAAC,OAAO,MAAM,IAAI,SAAS,uBAAuB,IAAI,SAAS,kBAAkB;AACjG,qBAAO,UAAU,QAAQ,EAAE,KAAK,WAAY;AACxC,oBAAI,CAAC,OAAO,MAAM,IAAI,SAAS,mBAAmB,CAAC,OAAO,GAAG,iBAAiB,SAAS,OAAO,SAAS,KAAK,OAAO,WAAW,OAAO,GAAG,SAAS;AAE7I,sBAAI,OAAO,IAAI;AACX,2BAAO,UAAU,OAAO,GAAG,UAAU;AAAA,kBACzC;AAEA,yBAAO,uBAAuB,MAAM;AAAA,gBACxC;AAAA,cACJ,CAAC,EAAE,KAAK,WAAY;AAChB,uBAAO,cAAc,MAAM,EAAE,KAAK,WAAY;AAC1C,oCAAkB,QAAQ,MAAM,UAAU,UAAU,CAAC;AAAA,gBACzD,CAAC;AAAA,cACL,CAAC,EAAE,OAAO,EAAE,QAAQ;AAAA,YACxB;AAEA,qBAAS,GAAG;AAAA,UAChB;AAAA,QACJ;AAEA,iBAAS,kBAAkB;AACvB,iBAAO;AAAA;AAAA,YAEH,SAAS,CAAC;AAAA;AAAA,YAEV,IAAI;AAAA;AAAA,YAEJ,SAAS;AAAA;AAAA,YAET,oBAAoB,CAAC;AAAA,UACzB;AAAA,QACJ;AAIA,iBAAS,aAAa,SAAS;AAC3B,cAAID,QAAO;AACX,cAAI,SAAS;AAAA,YACT,IAAI;AAAA,UACR;AAEA,cAAI,SAAS;AACT,qBAAS,KAAK,SAAS;AACnB,qBAAO,CAAC,IAAI,QAAQ,CAAC;AAAA,YACzB;AAAA,UACJ;AAGA,cAAI,YAAY,WAAW,OAAO,IAAI;AAGtC,cAAI,CAAC,WAAW;AACZ,wBAAY,gBAAgB;AAE5B,uBAAW,OAAO,IAAI,IAAI;AAAA,UAC9B;AAGA,oBAAU,QAAQ,KAAKA,KAAI;AAG3B,cAAI,CAACA,MAAK,YAAY;AAClB,YAAAA,MAAK,aAAaA,MAAK;AACvB,YAAAA,MAAK,QAAQ;AAAA,UACjB;AAGA,cAAI,eAAe,CAAC;AAEpB,mBAAS,eAAe;AAGpB,mBAAO,UAAU,QAAQ;AAAA,UAC7B;AAEA,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,QAAQ,KAAK;AAC/C,gBAAI,SAAS,UAAU,QAAQ,CAAC;AAChC,gBAAI,WAAWA,OAAM;AAEjB,2BAAa,KAAK,OAAO,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC;AAAA,YAChE;AAAA,UACJ;AAGA,cAAI,UAAU,UAAU,QAAQ,MAAM,CAAC;AAIvC,iBAAO,UAAU,IAAI,YAAY,EAAE,KAAK,WAAY;AAChD,mBAAO,KAAK,UAAU;AAEtB,mBAAO,uBAAuB,MAAM;AAAA,UACxC,CAAC,EAAE,KAAK,SAAU,IAAI;AAClB,mBAAO,KAAK;AACZ,gBAAI,iBAAiB,QAAQA,MAAK,eAAe,OAAO,GAAG;AAEvD,qBAAO,uBAAuB,MAAM;AAAA,YACxC;AACA,mBAAO;AAAA,UACX,CAAC,EAAE,KAAK,SAAU,IAAI;AAClB,mBAAO,KAAK,UAAU,KAAK;AAC3B,YAAAA,MAAK,UAAU;AAEf,qBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,kBAAIK,UAAS,QAAQ,CAAC;AACtB,kBAAIA,YAAWL,OAAM;AAEjB,gBAAAK,QAAO,QAAQ,KAAK,OAAO;AAC3B,gBAAAA,QAAO,QAAQ,UAAU,OAAO;AAAA,cACpC;AAAA,YACJ;AAAA,UACJ,CAAC;AAAA,QACL;AAEA,iBAAS,QAAQH,MAAK,UAAU;AAC5B,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,WAAW,SAAU,KAAK,aAAa;AACnE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,MAAM,MAAM,IAAIE,IAAG;AAEvB,sBAAI,YAAY,WAAY;AACxB,wBAAI,QAAQ,IAAI;AAChB,wBAAI,UAAU,QAAW;AACrB,8BAAQ;AAAA,oBACZ;AACA,wBAAI,eAAe,KAAK,GAAG;AACvB,8BAAQ,YAAY,KAAK;AAAA,oBAC7B;AACA,4BAAQ,KAAK;AAAA,kBACjB;AAEA,sBAAI,UAAU,WAAY;AACtB,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAGA,iBAAS,QAAQ,UAAU,UAAU;AACjC,cAAIF,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,WAAW,SAAU,KAAK,aAAa;AACnE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,MAAM,MAAM,WAAW;AAC3B,sBAAI,kBAAkB;AAEtB,sBAAI,YAAY,WAAY;AACxB,wBAAI,SAAS,IAAI;AAEjB,wBAAI,QAAQ;AACR,0BAAI,QAAQ,OAAO;AACnB,0BAAI,eAAe,KAAK,GAAG;AACvB,gCAAQ,YAAY,KAAK;AAAA,sBAC7B;AACA,0BAAI,SAAS,SAAS,OAAO,OAAO,KAAK,iBAAiB;AAK1D,0BAAI,WAAW,QAAQ;AACnB,gCAAQ,MAAM;AAAA,sBAClB,OAAO;AACH,+BAAO,UAAU,EAAE;AAAA,sBACvB;AAAA,oBACJ,OAAO;AACH,8BAAQ;AAAA,oBACZ;AAAA,kBACJ;AAEA,sBAAI,UAAU,WAAY;AACtB,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AAEjC,iBAAO;AAAA,QACX;AAEA,iBAAS,QAAQE,MAAK,OAAO,UAAU;AACnC,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,gBAAI;AACJ,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,uBAASA,MAAK;AACd,kBAAI,SAAS,KAAK,KAAK,MAAM,iBAAiB;AAC1C,uBAAO,kBAAkB,OAAO,EAAE,EAAE,KAAK,SAAU,aAAa;AAC5D,sBAAI,aAAa;AACb,2BAAO;AAAA,kBACX;AACA,yBAAO,YAAY,KAAK;AAAA,gBAC5B,CAAC;AAAA,cACL;AACA,qBAAO;AAAA,YACX,CAAC,EAAE,KAAK,SAAUM,QAAO;AACrB,gCAAkBN,MAAK,SAAS,YAAY,SAAU,KAAK,aAAa;AACpE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAM1D,sBAAIM,WAAU,MAAM;AAChB,oBAAAA,SAAQ;AAAA,kBACZ;AAEA,sBAAI,MAAM,MAAM,IAAIA,QAAOJ,IAAG;AAE9B,8BAAY,aAAa,WAAY;AAOjC,wBAAII,WAAU,QAAW;AACrB,sBAAAA,SAAQ;AAAA,oBACZ;AAEA,4BAAQA,MAAK;AAAA,kBACjB;AACA,8BAAY,UAAU,YAAY,UAAU,WAAY;AACpD,wBAAIC,OAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,YAAY;AAClD,2BAAOA,IAAG;AAAA,kBACd;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,WAAWL,MAAK,UAAU;AAC/B,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,YAAY,SAAU,KAAK,aAAa;AACpE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAM1D,sBAAI,MAAM,MAAM,QAAQ,EAAEE,IAAG;AAC7B,8BAAY,aAAa,WAAY;AACjC,4BAAQ;AAAA,kBACZ;AAEA,8BAAY,UAAU,WAAY;AAC9B,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAIA,8BAAY,UAAU,WAAY;AAC9B,wBAAIK,OAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,YAAY;AAClD,2BAAOA,IAAG;AAAA,kBACd;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,MAAM,UAAU;AACrB,cAAIP,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,YAAY,SAAU,KAAK,aAAa;AACpE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,MAAM,MAAM,MAAM;AAEtB,8BAAY,aAAa,WAAY;AACjC,4BAAQ;AAAA,kBACZ;AAEA,8BAAY,UAAU,YAAY,UAAU,WAAY;AACpD,wBAAIO,OAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,YAAY;AAClD,2BAAOA,IAAG;AAAA,kBACd;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,OAAO,UAAU;AACtB,cAAIP,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,WAAW,SAAU,KAAK,aAAa;AACnE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,MAAM,MAAM,MAAM;AAEtB,sBAAI,YAAY,WAAY;AACxB,4BAAQ,IAAI,MAAM;AAAA,kBACtB;AAEA,sBAAI,UAAU,WAAY;AACtB,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,IAAI,GAAG,UAAU;AACtB,cAAIA,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,gBAAI,IAAI,GAAG;AACP,sBAAQ,IAAI;AAEZ;AAAA,YACJ;AAEA,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,WAAW,SAAU,KAAK,aAAa;AACnE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,WAAW;AACf,sBAAI,MAAM,MAAM,cAAc;AAE9B,sBAAI,YAAY,WAAY;AACxB,wBAAI,SAAS,IAAI;AACjB,wBAAI,CAAC,QAAQ;AAET,8BAAQ,IAAI;AAEZ;AAAA,oBACJ;AAEA,wBAAI,MAAM,GAAG;AAGT,8BAAQ,OAAO,GAAG;AAAA,oBACtB,OAAO;AACH,0BAAI,CAAC,UAAU;AAGX,mCAAW;AACX,+BAAO,QAAQ,CAAC;AAAA,sBACpB,OAAO;AAEH,gCAAQ,OAAO,GAAG;AAAA,sBACtB;AAAA,oBACJ;AAAA,kBACJ;AAEA,sBAAI,UAAU,WAAY;AACtB,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,KAAK,UAAU;AACpB,cAAIA,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,gCAAkBA,MAAK,SAAS,WAAW,SAAU,KAAK,aAAa;AACnE,oBAAI,KAAK;AACL,yBAAO,OAAO,GAAG;AAAA,gBACrB;AAEA,oBAAI;AACA,sBAAI,QAAQ,YAAY,YAAYA,MAAK,QAAQ,SAAS;AAC1D,sBAAI,MAAM,MAAM,cAAc;AAC9B,sBAAIQ,QAAO,CAAC;AAEZ,sBAAI,YAAY,WAAY;AACxB,wBAAI,SAAS,IAAI;AAEjB,wBAAI,CAAC,QAAQ;AACT,8BAAQA,KAAI;AACZ;AAAA,oBACJ;AAEA,oBAAAA,MAAK,KAAK,OAAO,GAAG;AACpB,2BAAO,UAAU,EAAE;AAAA,kBACvB;AAEA,sBAAI,UAAU,WAAY;AACtB,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAAA,gBACJ,SAAS,GAAG;AACR,yBAAO,CAAC;AAAA,gBACZ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,aAAa,SAAS,UAAU;AACrC,qBAAW,YAAY,MAAM,MAAM,SAAS;AAE5C,cAAI,gBAAgB,KAAK,OAAO;AAChC,oBAAU,OAAO,YAAY,cAAc,WAAW,CAAC;AACvD,cAAI,CAAC,QAAQ,MAAM;AACf,oBAAQ,OAAO,QAAQ,QAAQ,cAAc;AAC7C,oBAAQ,YAAY,QAAQ,aAAa,cAAc;AAAA,UAC3D;AAEA,cAAIR,QAAO;AACX,cAAI;AACJ,cAAI,CAAC,QAAQ,MAAM;AACf,sBAAU,UAAU,OAAO,mBAAmB;AAAA,UAClD,OAAO;AACH,gBAAI,cAAc,QAAQ,SAAS,cAAc,QAAQA,MAAK,QAAQ;AAEtE,gBAAI,YAAY,cAAc,UAAU,QAAQA,MAAK,QAAQ,EAAE,IAAI,uBAAuB,OAAO,EAAE,KAAK,SAAU,IAAI;AAClH,kBAAI,YAAY,WAAW,QAAQ,IAAI;AACvC,kBAAI,UAAU,UAAU;AACxB,wBAAU,KAAK;AACf,uBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,wBAAQ,CAAC,EAAE,QAAQ,KAAK;AAAA,cAC5B;AACA,qBAAO;AAAA,YACX,CAAC;AAED,gBAAI,CAAC,QAAQ,WAAW;AACpB,wBAAU,UAAU,KAAK,SAAU,IAAI;AACnC,gCAAgB,OAAO;AAEvB,oBAAI,YAAY,WAAW,QAAQ,IAAI;AACvC,oBAAI,UAAU,UAAU;AAExB,mBAAG,MAAM;AACT,yBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,sBAAI,SAAS,QAAQ,CAAC;AACtB,yBAAO,QAAQ,KAAK;AAAA,gBACxB;AAEA,oBAAI,gBAAgB,IAAI,UAAU,SAAU,SAAS,QAAQ;AACzD,sBAAI,MAAM,IAAI,eAAe,QAAQ,IAAI;AAEzC,sBAAI,UAAU,WAAY;AACtB,wBAAIS,MAAK,IAAI;AACb,wBAAIA,KAAI;AACJ,sBAAAA,IAAG,MAAM;AAAA,oBACb;AACA,2BAAO,IAAI,KAAK;AAAA,kBACpB;AAEA,sBAAI,YAAY,WAAY;AAGxB,4BAAQ,KAAK,wCAAwC,QAAQ,OAAO,yCAAyC;AAAA,kBACjH;AAEA,sBAAI,YAAY,WAAY;AACxB,wBAAIA,MAAK,IAAI;AACb,wBAAIA,KAAI;AACJ,sBAAAA,IAAG,MAAM;AAAA,oBACb;AACA,4BAAQA,GAAE;AAAA,kBACd;AAAA,gBACJ,CAAC;AAED,uBAAO,cAAc,KAAK,SAAUA,KAAI;AACpC,4BAAU,KAAKA;AACf,2BAASR,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACrC,wBAAI,UAAU,QAAQA,EAAC;AACvB,sCAAkB,QAAQ,OAAO;AAAA,kBACrC;AAAA,gBACJ,CAAC,EAAE,OAAO,EAAE,SAAU,KAAK;AACvB,mBAAC,iBAAiB,SAAS,GAAG,KAAK,UAAU,QAAQ,GAAG,OAAO,EAAE,WAAY;AAAA,kBAAC,CAAC;AAC/E,wBAAM;AAAA,gBACV,CAAC;AAAA,cACL,CAAC;AAAA,YACL,OAAO;AACH,wBAAU,UAAU,KAAK,SAAU,IAAI;AACnC,oBAAI,CAAC,GAAG,iBAAiB,SAAS,QAAQ,SAAS,GAAG;AAClD;AAAA,gBACJ;AAEA,oBAAI,aAAa,GAAG,UAAU;AAE9B,gCAAgB,OAAO;AAEvB,oBAAI,YAAY,WAAW,QAAQ,IAAI;AACvC,oBAAI,UAAU,UAAU;AAExB,mBAAG,MAAM;AACT,yBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,sBAAI,SAAS,QAAQ,CAAC;AACtB,yBAAO,QAAQ,KAAK;AACpB,yBAAO,QAAQ,UAAU;AAAA,gBAC7B;AAEA,oBAAI,oBAAoB,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC7D,sBAAI,MAAM,IAAI,KAAK,QAAQ,MAAM,UAAU;AAE3C,sBAAI,UAAU,SAAU,KAAK;AACzB,wBAAIQ,MAAK,IAAI;AACb,oBAAAA,IAAG,MAAM;AACT,2BAAO,GAAG;AAAA,kBACd;AAEA,sBAAI,kBAAkB,WAAY;AAC9B,wBAAIA,MAAK,IAAI;AACb,oBAAAA,IAAG,kBAAkB,QAAQ,SAAS;AAAA,kBAC1C;AAEA,sBAAI,YAAY,WAAY;AACxB,wBAAIA,MAAK,IAAI;AACb,oBAAAA,IAAG,MAAM;AACT,4BAAQA,GAAE;AAAA,kBACd;AAAA,gBACJ,CAAC;AAED,uBAAO,kBAAkB,KAAK,SAAUA,KAAI;AACxC,4BAAU,KAAKA;AACf,2BAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,wBAAI,WAAW,QAAQ,CAAC;AACxB,6BAAS,QAAQ,KAAKA;AACtB,sCAAkB,SAAS,OAAO;AAAA,kBACtC;AAAA,gBACJ,CAAC,EAAE,OAAO,EAAE,SAAU,KAAK;AACvB,mBAAC,iBAAiB,SAAS,GAAG,KAAK,UAAU,QAAQ,GAAG,OAAO,EAAE,WAAY;AAAA,kBAAC,CAAC;AAC/E,wBAAM;AAAA,gBACV,CAAC;AAAA,cACL,CAAC;AAAA,YACL;AAAA,UACJ;AAEA,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,YAAI,eAAe;AAAA,UACf,SAAS;AAAA,UACT;AAAA,UACA,UAAU,iBAAiB;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAEA,iBAAS,gBAAgB;AACrB,iBAAO,OAAO,iBAAiB;AAAA,QACnC;AAKA,YAAI,aAAa;AAEjB,YAAI,mBAAmB;AACvB,YAAI,yBAAyB;AAE7B,YAAI,oBAAoB;AACxB,YAAI,2BAA2B,kBAAkB;AAGjD,YAAI,mBAAmB;AACvB,YAAI,YAAY;AAChB,YAAI,iBAAiB;AACrB,YAAI,kBAAkB;AACtB,YAAI,yBAAyB;AAC7B,YAAI,kBAAkB;AACtB,YAAI,kBAAkB;AACtB,YAAI,mBAAmB;AACvB,YAAI,mBAAmB;AACvB,YAAI,oBAAoB;AACxB,YAAI,oBAAoB;AACxB,YAAI,gCAAgC,2BAA2B,iBAAiB;AAEhF,YAAI,aAAa,OAAO,UAAU;AAElC,iBAAS,eAAe,kBAAkB;AAEtC,cAAI,eAAe,iBAAiB,SAAS;AAC7C,cAAI,MAAM,iBAAiB;AAC3B,cAAI;AACJ,cAAI,IAAI;AACR,cAAI,UAAU,UAAU,UAAU;AAElC,cAAI,iBAAiB,iBAAiB,SAAS,CAAC,MAAM,KAAK;AACvD;AACA,gBAAI,iBAAiB,iBAAiB,SAAS,CAAC,MAAM,KAAK;AACvD;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,SAAS,IAAI,YAAY,YAAY;AACzC,cAAI,QAAQ,IAAI,WAAW,MAAM;AAEjC,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AACzB,uBAAW,WAAW,QAAQ,iBAAiB,CAAC,CAAC;AACjD,uBAAW,WAAW,QAAQ,iBAAiB,IAAI,CAAC,CAAC;AACrD,uBAAW,WAAW,QAAQ,iBAAiB,IAAI,CAAC,CAAC;AACrD,uBAAW,WAAW,QAAQ,iBAAiB,IAAI,CAAC,CAAC;AAGrD,kBAAM,GAAG,IAAI,YAAY,IAAI,YAAY;AACzC,kBAAM,GAAG,KAAK,WAAW,OAAO,IAAI,YAAY;AAChD,kBAAM,GAAG,KAAK,WAAW,MAAM,IAAI,WAAW;AAAA,UAClD;AACA,iBAAO;AAAA,QACX;AAIA,iBAAS,eAAe,QAAQ;AAE5B,cAAI,QAAQ,IAAI,WAAW,MAAM;AACjC,cAAI,eAAe;AACnB,cAAI;AAEJ,eAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AAElC,4BAAgB,WAAW,MAAM,CAAC,KAAK,CAAC;AACxC,4BAAgB,YAAY,MAAM,CAAC,IAAI,MAAM,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC;AAClE,4BAAgB,YAAY,MAAM,IAAI,CAAC,IAAI,OAAO,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC;AACvE,4BAAgB,WAAW,MAAM,IAAI,CAAC,IAAI,EAAE;AAAA,UAChD;AAEA,cAAI,MAAM,SAAS,MAAM,GAAG;AACxB,2BAAe,aAAa,UAAU,GAAG,aAAa,SAAS,CAAC,IAAI;AAAA,UACxE,WAAW,MAAM,SAAS,MAAM,GAAG;AAC/B,2BAAe,aAAa,UAAU,GAAG,aAAa,SAAS,CAAC,IAAI;AAAA,UACxE;AAEA,iBAAO;AAAA,QACX;AAKA,iBAAS,UAAU,OAAO,UAAU;AAChC,cAAI,YAAY;AAChB,cAAI,OAAO;AACP,wBAAY,WAAW,KAAK,KAAK;AAAA,UACrC;AAMA,cAAI,UAAU,cAAc,0BAA0B,MAAM,UAAU,WAAW,KAAK,MAAM,MAAM,MAAM,yBAAyB;AAG7H,gBAAI;AACJ,gBAAI,SAAS;AAEb,gBAAI,iBAAiB,aAAa;AAC9B,uBAAS;AACT,wBAAU;AAAA,YACd,OAAO;AACH,uBAAS,MAAM;AAEf,kBAAI,cAAc,sBAAsB;AACpC,0BAAU;AAAA,cACd,WAAW,cAAc,uBAAuB;AAC5C,0BAAU;AAAA,cACd,WAAW,cAAc,8BAA8B;AACnD,0BAAU;AAAA,cACd,WAAW,cAAc,uBAAuB;AAC5C,0BAAU;AAAA,cACd,WAAW,cAAc,wBAAwB;AAC7C,0BAAU;AAAA,cACd,WAAW,cAAc,uBAAuB;AAC5C,0BAAU;AAAA,cACd,WAAW,cAAc,wBAAwB;AAC7C,0BAAU;AAAA,cACd,WAAW,cAAc,yBAAyB;AAC9C,0BAAU;AAAA,cACd,WAAW,cAAc,yBAAyB;AAC9C,0BAAU;AAAA,cACd,OAAO;AACH,yBAAS,IAAI,MAAM,oCAAoC,CAAC;AAAA,cAC5D;AAAA,YACJ;AAEA,qBAAS,SAAS,eAAe,MAAM,CAAC;AAAA,UAC5C,WAAW,cAAc,iBAAiB;AAEtC,gBAAI,aAAa,IAAI,WAAW;AAEhC,uBAAW,SAAS,WAAY;AAE5B,kBAAI,MAAM,mBAAmB,MAAM,OAAO,MAAM,eAAe,KAAK,MAAM;AAE1E,uBAAS,oBAAoB,YAAY,GAAG;AAAA,YAChD;AAEA,uBAAW,kBAAkB,KAAK;AAAA,UACtC,OAAO;AACH,gBAAI;AACA,uBAAS,KAAK,UAAU,KAAK,CAAC;AAAA,YAClC,SAAS,GAAG;AACR,sBAAQ,MAAM,+CAA+C,KAAK;AAElE,uBAAS,MAAM,CAAC;AAAA,YACpB;AAAA,UACJ;AAAA,QACJ;AAUA,iBAAS,YAAY,OAAO;AAIxB,cAAI,MAAM,UAAU,GAAG,wBAAwB,MAAM,mBAAmB;AACpE,mBAAO,KAAK,MAAM,KAAK;AAAA,UAC3B;AAKA,cAAI,mBAAmB,MAAM,UAAU,6BAA6B;AACpE,cAAI,OAAO,MAAM,UAAU,0BAA0B,6BAA6B;AAElF,cAAI;AAGJ,cAAI,SAAS,aAAa,uBAAuB,KAAK,gBAAgB,GAAG;AACrE,gBAAI,UAAU,iBAAiB,MAAM,sBAAsB;AAC3D,uBAAW,QAAQ,CAAC;AACpB,+BAAmB,iBAAiB,UAAU,QAAQ,CAAC,EAAE,MAAM;AAAA,UACnE;AACA,cAAI,SAAS,eAAe,gBAAgB;AAI5C,kBAAQ,MAAM;AAAA,YACV,KAAK;AACD,qBAAO;AAAA,YACX,KAAK;AACD,qBAAO,WAAW,CAAC,MAAM,GAAG,EAAE,MAAM,SAAS,CAAC;AAAA,YAClD,KAAK;AACD,qBAAO,IAAI,UAAU,MAAM;AAAA,YAC/B,KAAK;AACD,qBAAO,IAAI,WAAW,MAAM;AAAA,YAChC,KAAK;AACD,qBAAO,IAAI,kBAAkB,MAAM;AAAA,YACvC,KAAK;AACD,qBAAO,IAAI,WAAW,MAAM;AAAA,YAChC,KAAK;AACD,qBAAO,IAAI,YAAY,MAAM;AAAA,YACjC,KAAK;AACD,qBAAO,IAAI,WAAW,MAAM;AAAA,YAChC,KAAK;AACD,qBAAO,IAAI,YAAY,MAAM;AAAA,YACjC,KAAK;AACD,qBAAO,IAAI,aAAa,MAAM;AAAA,YAClC,KAAK;AACD,qBAAO,IAAI,aAAa,MAAM;AAAA,YAClC;AACI,oBAAM,IAAI,MAAM,kBAAkB,IAAI;AAAA,UAC9C;AAAA,QACJ;AAEA,YAAI,wBAAwB;AAAA,UACxB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAYA,iBAAS,cAAc,GAAG,QAAQ,UAAU,eAAe;AACvD,YAAE,WAAW,gCAAgC,OAAO,YAAY,gDAAqD,CAAC,GAAG,UAAU,aAAa;AAAA,QACpJ;AAIA,iBAAS,eAAe,SAAS;AAC7B,cAAIT,QAAO;AACX,cAAI,SAAS;AAAA,YACT,IAAI;AAAA,UACR;AAEA,cAAI,SAAS;AACT,qBAAS,KAAK,SAAS;AACnB,qBAAO,CAAC,IAAI,OAAO,QAAQ,CAAC,MAAM,WAAW,QAAQ,CAAC,EAAE,SAAS,IAAI,QAAQ,CAAC;AAAA,YAClF;AAAA,UACJ;AAEA,cAAI,gBAAgB,IAAI,UAAU,SAAU,SAAS,QAAQ;AAGzD,gBAAI;AACA,qBAAO,KAAK,aAAa,OAAO,MAAM,OAAO,OAAO,OAAO,GAAG,OAAO,aAAa,OAAO,IAAI;AAAA,YACjG,SAAS,GAAG;AACR,qBAAO,OAAO,CAAC;AAAA,YACnB;AAGA,mBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,4BAAc,GAAG,QAAQ,WAAY;AACjC,gBAAAA,MAAK,UAAU;AACf,wBAAQ;AAAA,cACZ,GAAG,SAAUU,IAAG,OAAO;AACnB,uBAAO,KAAK;AAAA,cAChB,CAAC;AAAA,YACL,GAAG,MAAM;AAAA,UACb,CAAC;AAED,iBAAO,aAAa;AACpB,iBAAO;AAAA,QACX;AAEA,iBAAS,cAAc,GAAG,QAAQ,cAAc,MAAM,UAAU,eAAe;AAC3E,YAAE,WAAW,cAAc,MAAM,UAAU,SAAUA,IAAG,OAAO;AAC3D,gBAAI,MAAM,SAAS,MAAM,YAAY;AACjC,cAAAA,GAAE,WAAW,kEAAuE,CAAC,OAAO,SAAS,GAAG,SAAUA,IAAG,SAAS;AAC1H,oBAAI,CAAC,QAAQ,KAAK,QAAQ;AAGtB,gCAAcA,IAAG,QAAQ,WAAY;AACjC,oBAAAA,GAAE,WAAW,cAAc,MAAM,UAAU,aAAa;AAAA,kBAC5D,GAAG,aAAa;AAAA,gBACpB,OAAO;AACH,gCAAcA,IAAG,KAAK;AAAA,gBAC1B;AAAA,cACJ,GAAG,aAAa;AAAA,YACpB,OAAO;AACH,4BAAcA,IAAG,KAAK;AAAA,YAC1B;AAAA,UACJ,GAAG,aAAa;AAAA,QACpB;AAEA,iBAAS,UAAUR,MAAK,UAAU;AAC9B,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,mBAAmB,OAAO,YAAY,0BAA0B,CAACE,IAAG,GAAG,SAAUQ,IAAG,SAAS;AAClH,sBAAI,SAAS,QAAQ,KAAK,SAAS,QAAQ,KAAK,KAAK,CAAC,EAAE,QAAQ;AAIhE,sBAAI,QAAQ;AACR,6BAAS,OAAO,WAAW,YAAY,MAAM;AAAA,kBACjD;AAEA,0BAAQ,MAAM;AAAA,gBAClB,GAAG,SAAUA,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,UAAU,UAAU,UAAU;AACnC,cAAIV,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAElB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,mBAAmB,OAAO,WAAW,CAAC,GAAG,SAAUU,IAAG,SAAS;AACpF,sBAAI,OAAO,QAAQ;AACnB,sBAAIP,UAAS,KAAK;AAElB,2BAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC7B,wBAAI,OAAO,KAAK,KAAK,CAAC;AACtB,wBAAI,SAAS,KAAK;AAIlB,wBAAI,QAAQ;AACR,+BAAS,OAAO,WAAW,YAAY,MAAM;AAAA,oBACjD;AAEA,6BAAS,SAAS,QAAQ,KAAK,KAAK,IAAI,CAAC;AAIzC,wBAAI,WAAW,QAAQ;AACnB,8BAAQ,MAAM;AACd;AAAA,oBACJ;AAAA,kBACJ;AAEA,0BAAQ;AAAA,gBACZ,GAAG,SAAUO,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,SAASR,MAAK,OAAO,UAAU,aAAa;AACjD,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAI1B,kBAAI,UAAU,QAAW;AACrB,wBAAQ;AAAA,cACZ;AAGA,kBAAI,gBAAgB;AAEpB,kBAAI,SAASA,MAAK;AAClB,qBAAO,WAAW,UAAU,OAAO,SAAUM,QAAO,OAAO;AACvD,oBAAI,OAAO;AACP,yBAAO,KAAK;AAAA,gBAChB,OAAO;AACH,yBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,kCAAc,GAAG,QAAQ,4BAA4B,OAAO,YAAY,+BAAoC,CAACJ,MAAKI,MAAK,GAAG,WAAY;AAClI,8BAAQ,aAAa;AAAA,oBACzB,GAAG,SAAUI,IAAGC,QAAO;AACnB,6BAAOA,MAAK;AAAA,oBAChB,CAAC;AAAA,kBACL,GAAG,SAAU,UAAU;AAGnB,wBAAI,SAAS,SAAS,SAAS,WAAW;AAQtC,0BAAI,cAAc,GAAG;AACjB,gCAAQ,SAAS,MAAMX,OAAM,CAACE,MAAK,eAAe,UAAU,cAAc,CAAC,CAAC,CAAC;AAC7E;AAAA,sBACJ;AACA,6BAAO,QAAQ;AAAA,oBACnB;AAAA,kBACJ,CAAC;AAAA,gBACL;AAAA,cACJ,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,UAAUA,MAAK,OAAO,UAAU;AACrC,iBAAO,SAAS,MAAM,MAAM,CAACA,MAAK,OAAO,UAAU,CAAC,CAAC;AAAA,QACzD;AAEA,iBAAS,aAAaA,MAAK,UAAU;AACjC,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAF,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,iBAAiB,OAAO,YAAY,kBAAkB,CAACE,IAAG,GAAG,WAAY;AAC9F,0BAAQ;AAAA,gBACZ,GAAG,SAAUQ,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAIA,iBAAS,QAAQ,UAAU;AACvB,cAAIV,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,iBAAiB,OAAO,WAAW,CAAC,GAAG,WAAY;AACxE,0BAAQ;AAAA,gBACZ,GAAG,SAAUU,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAIA,iBAAS,SAAS,UAAU;AACxB,cAAIV,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAE/B,8BAAc,GAAG,QAAQ,iCAAiC,OAAO,WAAW,CAAC,GAAG,SAAUU,IAAG,SAAS;AAClG,sBAAI,SAAS,QAAQ,KAAK,KAAK,CAAC,EAAE;AAClC,0BAAQ,MAAM;AAAA,gBAClB,GAAG,SAAUA,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AASA,iBAAS,MAAM,GAAG,UAAU;AACxB,cAAIV,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,qBAAqB,OAAO,YAAY,yBAAyB,CAAC,IAAI,CAAC,GAAG,SAAUU,IAAG,SAAS;AACrH,sBAAI,SAAS,QAAQ,KAAK,SAAS,QAAQ,KAAK,KAAK,CAAC,EAAE,MAAM;AAC9D,0BAAQ,MAAM;AAAA,gBAClB,GAAG,SAAUA,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,OAAO,UAAU;AACtB,cAAIV,QAAO;AAEX,cAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,YAAAA,MAAK,MAAM,EAAE,KAAK,WAAY;AAC1B,kBAAI,SAASA,MAAK;AAClB,qBAAO,GAAG,YAAY,SAAU,GAAG;AAC/B,8BAAc,GAAG,QAAQ,qBAAqB,OAAO,WAAW,CAAC,GAAG,SAAUU,IAAG,SAAS;AACtF,sBAAIF,QAAO,CAAC;AAEZ,2BAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,QAAQ,KAAK;AAC1C,oBAAAA,MAAK,KAAK,QAAQ,KAAK,KAAK,CAAC,EAAE,GAAG;AAAA,kBACtC;AAEA,0BAAQA,KAAI;AAAA,gBAChB,GAAG,SAAUE,IAAG,OAAO;AACnB,yBAAO,KAAK;AAAA,gBAChB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,MAAM;AAAA,UACtB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAIA,iBAAS,iBAAiB,IAAI;AAC1B,iBAAO,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC5C,eAAG,YAAY,SAAU,GAAG;AACxB,gBAAE,WAAW,+FAAoG,CAAC,GAAG,SAAUA,IAAG,SAAS;AACvI,oBAAI,aAAa,CAAC;AAElB,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,QAAQ,KAAK;AAC1C,6BAAW,KAAK,QAAQ,KAAK,KAAK,CAAC,EAAE,IAAI;AAAA,gBAC7C;AAEA,wBAAQ;AAAA,kBACJ;AAAA,kBACA;AAAA,gBACJ,CAAC;AAAA,cACL,GAAG,SAAUA,IAAG,OAAO;AACnB,uBAAO,KAAK;AAAA,cAChB,CAAC;AAAA,YACL,GAAG,SAAU,UAAU;AACnB,qBAAO,QAAQ;AAAA,YACnB,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAEA,iBAAS,eAAe,SAAS,UAAU;AACvC,qBAAW,YAAY,MAAM,MAAM,SAAS;AAE5C,cAAI,gBAAgB,KAAK,OAAO;AAChC,oBAAU,OAAO,YAAY,cAAc,WAAW,CAAC;AACvD,cAAI,CAAC,QAAQ,MAAM;AACf,oBAAQ,OAAO,QAAQ,QAAQ,cAAc;AAC7C,oBAAQ,YAAY,QAAQ,aAAa,cAAc;AAAA,UAC3D;AAEA,cAAIV,QAAO;AACX,cAAI;AACJ,cAAI,CAAC,QAAQ,MAAM;AACf,sBAAU,UAAU,OAAO,mBAAmB;AAAA,UAClD,OAAO;AACH,sBAAU,IAAI,UAAU,SAAU,SAAS;AACvC,kBAAI;AACJ,kBAAI,QAAQ,SAAS,cAAc,MAAM;AAErC,qBAAKA,MAAK,QAAQ;AAAA,cACtB,OAAO;AACH,qBAAK,aAAa,QAAQ,MAAM,IAAI,IAAI,CAAC;AAAA,cAC7C;AAEA,kBAAI,CAAC,QAAQ,WAAW;AAEpB,wBAAQ,iBAAiB,EAAE,CAAC;AAAA,cAChC,OAAO;AACH,wBAAQ;AAAA,kBACJ;AAAA,kBACA,YAAY,CAAC,QAAQ,SAAS;AAAA,gBAClC,CAAC;AAAA,cACL;AAAA,YACJ,CAAC,EAAE,KAAK,SAAU,eAAe;AAC7B,qBAAO,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC5C,8BAAc,GAAG,YAAY,SAAU,GAAG;AACtC,2BAAS,UAAU,WAAW;AAC1B,2BAAO,IAAI,UAAU,SAAUY,UAASC,SAAQ;AAC5C,wBAAE,WAAW,0BAA0B,WAAW,CAAC,GAAG,WAAY;AAC9D,wBAAAD,SAAQ;AAAA,sBACZ,GAAG,SAAUF,IAAG,OAAO;AACnB,wBAAAG,QAAO,KAAK;AAAA,sBAChB,CAAC;AAAA,oBACL,CAAC;AAAA,kBACL;AAEA,sBAAI,aAAa,CAAC;AAClB,2BAAS,IAAI,GAAG,MAAM,cAAc,WAAW,QAAQ,IAAI,KAAK,KAAK;AACjE,+BAAW,KAAK,UAAU,cAAc,WAAW,CAAC,CAAC,CAAC;AAAA,kBAC1D;AAEA,4BAAU,IAAI,UAAU,EAAE,KAAK,WAAY;AACvC,4BAAQ;AAAA,kBACZ,CAAC,EAAE,OAAO,EAAE,SAAU,GAAG;AACrB,2BAAO,CAAC;AAAA,kBACZ,CAAC;AAAA,gBACL,GAAG,SAAU,UAAU;AACnB,yBAAO,QAAQ;AAAA,gBACnB,CAAC;AAAA,cACL,CAAC;AAAA,YACL,CAAC;AAAA,UACL;AAEA,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,YAAI,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT,cAAc;AAAA,UACd,UAAU,cAAc;AAAA,UACxB,SAAS;AAAA,UACT,SAAS;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,KAAK;AAAA,UACL,MAAM;AAAA,UACN,cAAc;AAAA,QAClB;AAEA,iBAAS,sBAAsB;AAC3B,cAAI;AACA,mBAAO,OAAO,iBAAiB,eAAe,aAAa;AAAA,YAE3D,CAAC,CAAC,aAAa;AAAA,UACnB,SAAS,GAAG;AACR,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,iBAAS,cAAc,SAAS,eAAe;AAC3C,cAAI,YAAY,QAAQ,OAAO;AAE/B,cAAI,QAAQ,cAAc,cAAc,WAAW;AAC/C,yBAAa,QAAQ,YAAY;AAAA,UACrC;AACA,iBAAO;AAAA,QACX;AAGA,iBAAS,4BAA4B;AACjC,cAAI,sBAAsB;AAE1B,cAAI;AACA,yBAAa,QAAQ,qBAAqB,IAAI;AAC9C,yBAAa,WAAW,mBAAmB;AAE3C,mBAAO;AAAA,UACX,SAAS,GAAG;AACR,mBAAO;AAAA,UACX;AAAA,QACJ;AAMA,iBAAS,wBAAwB;AAC7B,iBAAO,CAAC,0BAA0B,KAAK,aAAa,SAAS;AAAA,QACjE;AAGA,iBAAS,eAAe,SAAS;AAC7B,cAAIb,QAAO;AACX,cAAI,SAAS,CAAC;AACd,cAAI,SAAS;AACT,qBAAS,KAAK,SAAS;AACnB,qBAAO,CAAC,IAAI,QAAQ,CAAC;AAAA,YACzB;AAAA,UACJ;AAEA,iBAAO,YAAY,cAAc,SAASA,MAAK,cAAc;AAE7D,cAAI,CAAC,sBAAsB,GAAG;AAC1B,mBAAO,UAAU,OAAO;AAAA,UAC5B;AAEA,UAAAA,MAAK,UAAU;AACf,iBAAO,aAAa;AAEpB,iBAAO,UAAU,QAAQ;AAAA,QAC7B;AAIA,iBAAS,QAAQ,UAAU;AACvB,cAAIA,QAAO;AACX,cAAI,UAAUA,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,YAAYA,MAAK,QAAQ;AAE7B,qBAAS,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,KAAK;AAC/C,kBAAIE,OAAM,aAAa,IAAI,CAAC;AAE5B,kBAAIA,KAAI,QAAQ,SAAS,MAAM,GAAG;AAC9B,6BAAa,WAAWA,IAAG;AAAA,cAC/B;AAAA,YACJ;AAAA,UACJ,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAKA,iBAAS,UAAUA,MAAK,UAAU;AAC9B,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAUF,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,SAASA,MAAK;AAClB,gBAAI,SAAS,aAAa,QAAQ,OAAO,YAAYE,IAAG;AAMxD,gBAAI,QAAQ;AACR,uBAAS,OAAO,WAAW,YAAY,MAAM;AAAA,YACjD;AAEA,mBAAO;AAAA,UACX,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAGA,iBAAS,UAAU,UAAU,UAAU;AACnC,cAAIF,QAAO;AAEX,cAAI,UAAUA,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,SAASA,MAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,kBAAkB,UAAU;AAChC,gBAAIG,UAAS,aAAa;AAQ1B,gBAAI,kBAAkB;AAEtB,qBAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC7B,kBAAID,OAAM,aAAa,IAAI,CAAC;AAC5B,kBAAIA,KAAI,QAAQ,SAAS,MAAM,GAAG;AAC9B;AAAA,cACJ;AACA,kBAAI,QAAQ,aAAa,QAAQA,IAAG;AAMpC,kBAAI,OAAO;AACP,wBAAQ,OAAO,WAAW,YAAY,KAAK;AAAA,cAC/C;AAEA,sBAAQ,SAAS,OAAOA,KAAI,UAAU,eAAe,GAAG,iBAAiB;AAEzE,kBAAI,UAAU,QAAQ;AAClB,uBAAO;AAAA,cACX;AAAA,YACJ;AAAA,UACJ,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAGA,iBAAS,MAAM,GAAG,UAAU;AACxB,cAAIF,QAAO;AACX,cAAI,UAAUA,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,SAASA,MAAK;AAClB,gBAAI;AACJ,gBAAI;AACA,uBAAS,aAAa,IAAI,CAAC;AAAA,YAC/B,SAAS,OAAO;AACZ,uBAAS;AAAA,YACb;AAGA,gBAAI,QAAQ;AACR,uBAAS,OAAO,UAAU,OAAO,UAAU,MAAM;AAAA,YACrD;AAEA,mBAAO;AAAA,UACX,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,OAAO,UAAU;AACtB,cAAIA,QAAO;AACX,cAAI,UAAUA,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,SAASA,MAAK;AAClB,gBAAIG,UAAS,aAAa;AAC1B,gBAAIK,QAAO,CAAC;AAEZ,qBAAS,IAAI,GAAG,IAAIL,SAAQ,KAAK;AAC7B,kBAAI,UAAU,aAAa,IAAI,CAAC;AAChC,kBAAI,QAAQ,QAAQ,OAAO,SAAS,MAAM,GAAG;AACzC,gBAAAK,MAAK,KAAK,QAAQ,UAAU,OAAO,UAAU,MAAM,CAAC;AAAA,cACxD;AAAA,YACJ;AAEA,mBAAOA;AAAA,UACX,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAGA,iBAAS,SAAS,UAAU;AACxB,cAAIR,QAAO;AACX,cAAI,UAAUA,MAAK,KAAK,EAAE,KAAK,SAAUQ,OAAM;AAC3C,mBAAOA,MAAK;AAAA,UAChB,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAGA,iBAAS,aAAaN,MAAK,UAAU;AACjC,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAUF,MAAK,MAAM,EAAE,KAAK,WAAY;AACxC,gBAAI,SAASA,MAAK;AAClB,yBAAa,WAAW,OAAO,YAAYE,IAAG;AAAA,UAClD,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAMA,iBAAS,UAAUA,MAAK,OAAO,UAAU;AACrC,cAAIF,QAAO;AAEX,UAAAE,OAAM,aAAaA,IAAG;AAEtB,cAAI,UAAUF,MAAK,MAAM,EAAE,KAAK,WAAY;AAGxC,gBAAI,UAAU,QAAW;AACrB,sBAAQ;AAAA,YACZ;AAGA,gBAAI,gBAAgB;AAEpB,mBAAO,IAAI,UAAU,SAAU,SAAS,QAAQ;AAC5C,kBAAI,SAASA,MAAK;AAClB,qBAAO,WAAW,UAAU,OAAO,SAAUM,QAAO,OAAO;AACvD,oBAAI,OAAO;AACP,yBAAO,KAAK;AAAA,gBAChB,OAAO;AACH,sBAAI;AACA,iCAAa,QAAQ,OAAO,YAAYJ,MAAKI,MAAK;AAClD,4BAAQ,aAAa;AAAA,kBACzB,SAAS,GAAG;AAGR,wBAAI,EAAE,SAAS,wBAAwB,EAAE,SAAS,8BAA8B;AAC5E,6BAAO,CAAC;AAAA,oBACZ;AACA,2BAAO,CAAC;AAAA,kBACZ;AAAA,gBACJ;AAAA,cACJ,CAAC;AAAA,YACL,CAAC;AAAA,UACL,CAAC;AAED,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,iBAAS,eAAe,SAAS,UAAU;AACvC,qBAAW,YAAY,MAAM,MAAM,SAAS;AAE5C,oBAAU,OAAO,YAAY,cAAc,WAAW,CAAC;AACvD,cAAI,CAAC,QAAQ,MAAM;AACf,gBAAI,gBAAgB,KAAK,OAAO;AAChC,oBAAQ,OAAO,QAAQ,QAAQ,cAAc;AAC7C,oBAAQ,YAAY,QAAQ,aAAa,cAAc;AAAA,UAC3D;AAEA,cAAIN,QAAO;AACX,cAAI;AACJ,cAAI,CAAC,QAAQ,MAAM;AACf,sBAAU,UAAU,OAAO,mBAAmB;AAAA,UAClD,OAAO;AACH,sBAAU,IAAI,UAAU,SAAU,SAAS;AACvC,kBAAI,CAAC,QAAQ,WAAW;AACpB,wBAAQ,QAAQ,OAAO,GAAG;AAAA,cAC9B,OAAO;AACH,wBAAQ,cAAc,SAASA,MAAK,cAAc,CAAC;AAAA,cACvD;AAAA,YACJ,CAAC,EAAE,KAAK,SAAU,WAAW;AACzB,uBAAS,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,KAAK;AAC/C,oBAAIE,OAAM,aAAa,IAAI,CAAC;AAE5B,oBAAIA,KAAI,QAAQ,SAAS,MAAM,GAAG;AAC9B,+BAAa,WAAWA,IAAG;AAAA,gBAC/B;AAAA,cACJ;AAAA,YACJ,CAAC;AAAA,UACL;AAEA,0BAAgB,SAAS,QAAQ;AACjC,iBAAO;AAAA,QACX;AAEA,YAAI,sBAAsB;AAAA,UACtB,SAAS;AAAA,UACT,cAAc;AAAA,UACd,UAAU,oBAAoB;AAAA,UAC9B,SAAS;AAAA,UACT,SAAS;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,KAAK;AAAA,UACL,MAAM;AAAA,UACN,cAAc;AAAA,QAClB;AAEA,YAAI,YAAY,SAASY,WAAU,GAAG,GAAG;AACrC,iBAAO,MAAM,KAAK,OAAO,MAAM,YAAY,OAAO,MAAM,YAAY,MAAM,CAAC,KAAK,MAAM,CAAC;AAAA,QAC3F;AAEA,YAAI,WAAW,SAASC,UAAS,OAAO,eAAe;AACnD,cAAI,MAAM,MAAM;AAChB,cAAI,IAAI;AACR,iBAAO,IAAI,KAAK;AACZ,gBAAI,UAAU,MAAM,CAAC,GAAG,aAAa,GAAG;AACpC,qBAAO;AAAA,YACX;AACA;AAAA,UACJ;AAEA,iBAAO;AAAA,QACX;AAEA,YAAI,UAAU,MAAM,WAAW,SAAU,KAAK;AAC1C,iBAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAAA,QACnD;AAIA,YAAI,iBAAiB,CAAC;AAEtB,YAAI,gBAAgB,CAAC;AAErB,YAAI,iBAAiB;AAAA,UACjB,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,cAAc;AAAA,QAClB;AAEA,YAAI,qBAAqB,CAAC,eAAe,UAAU,SAAS,eAAe,OAAO,SAAS,eAAe,aAAa,OAAO;AAE9H,YAAI,wBAAwB,CAAC,cAAc;AAE3C,YAAI,iBAAiB,CAAC,SAAS,WAAW,WAAW,OAAO,QAAQ,UAAU,cAAc,SAAS,EAAE,OAAO,qBAAqB;AAEnI,YAAI,gBAAgB;AAAA,UAChB,aAAa;AAAA,UACb,QAAQ,mBAAmB,MAAM;AAAA,UACjC,MAAM;AAAA;AAAA;AAAA,UAGN,MAAM;AAAA,UACN,WAAW;AAAA,UACX,SAAS;AAAA,QACb;AAEA,iBAAS,cAAc,qBAAqB,eAAe;AACvD,8BAAoB,aAAa,IAAI,WAAY;AAC7C,gBAAI,QAAQ;AACZ,mBAAO,oBAAoB,MAAM,EAAE,KAAK,WAAY;AAChD,qBAAO,oBAAoB,aAAa,EAAE,MAAM,qBAAqB,KAAK;AAAA,YAC9E,CAAC;AAAA,UACL;AAAA,QACJ;AAEA,iBAAS,SAAS;AACd,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,gBAAI,MAAM,UAAU,CAAC;AAErB,gBAAI,KAAK;AACL,uBAAS,QAAQ,KAAK;AAClB,oBAAI,IAAI,eAAe,IAAI,GAAG;AAC1B,sBAAI,QAAQ,IAAI,IAAI,CAAC,GAAG;AACpB,8BAAU,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,MAAM;AAAA,kBACzC,OAAO;AACH,8BAAU,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI;AAAA,kBACjC;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAEA,iBAAO,UAAU,CAAC;AAAA,QACtB;AAEA,YAAI,cAAc,WAAY;AAC1B,mBAASC,aAAY,SAAS;AAC1B,4BAAgB,MAAMA,YAAW;AAEjC,qBAAS,iBAAiB,gBAAgB;AACtC,kBAAI,eAAe,eAAe,aAAa,GAAG;AAC9C,oBAAI,SAAS,eAAe,aAAa;AACzC,oBAAI,aAAa,OAAO;AACxB,qBAAK,aAAa,IAAI;AAEtB,oBAAI,CAAC,eAAe,UAAU,GAAG;AAI7B,uBAAK,aAAa,MAAM;AAAA,gBAC5B;AAAA,cACJ;AAAA,YACJ;AAEA,iBAAK,iBAAiB,OAAO,CAAC,GAAG,aAAa;AAC9C,iBAAK,UAAU,OAAO,CAAC,GAAG,KAAK,gBAAgB,OAAO;AACtD,iBAAK,aAAa;AAClB,iBAAK,cAAc;AACnB,iBAAK,SAAS;AACd,iBAAK,UAAU;AAEf,iBAAK,6BAA6B;AAClC,iBAAK,UAAU,KAAK,QAAQ,MAAM,EAAE,OAAO,EAAE,WAAY;AAAA,YAAC,CAAC;AAAA,UAC/D;AAQA,UAAAA,aAAY,UAAU,SAAS,SAAS,OAAO,SAAS;AAIpD,iBAAK,OAAO,YAAY,cAAc,cAAc,QAAQ,OAAO,OAAO,UAAU;AAGhF,kBAAI,KAAK,QAAQ;AACb,uBAAO,IAAI,MAAM,sDAA2D;AAAA,cAChF;AAEA,uBAAS,KAAK,SAAS;AACnB,oBAAI,MAAM,aAAa;AACnB,0BAAQ,CAAC,IAAI,QAAQ,CAAC,EAAE,QAAQ,OAAO,GAAG;AAAA,gBAC9C;AAEA,oBAAI,MAAM,aAAa,OAAO,QAAQ,CAAC,MAAM,UAAU;AACnD,yBAAO,IAAI,MAAM,oCAAoC;AAAA,gBACzD;AAEA,qBAAK,QAAQ,CAAC,IAAI,QAAQ,CAAC;AAAA,cAC/B;AAIA,kBAAI,YAAY,WAAW,QAAQ,QAAQ;AACvC,uBAAO,KAAK,UAAU,KAAK,QAAQ,MAAM;AAAA,cAC7C;AAEA,qBAAO;AAAA,YACX,WAAW,OAAO,YAAY,UAAU;AACpC,qBAAO,KAAK,QAAQ,OAAO;AAAA,YAC/B,OAAO;AACH,qBAAO,KAAK;AAAA,YAChB;AAAA,UACJ;AAMA,UAAAA,aAAY,UAAU,eAAe,SAAS,aAAa,cAAc,UAAU,eAAe;AAC9F,gBAAI,UAAU,IAAI,UAAU,SAAU,SAAS,QAAQ;AACnD,kBAAI;AACA,oBAAI,aAAa,aAAa;AAC9B,oBAAI,kBAAkB,IAAI,MAAM,sFAA2F;AAI3H,oBAAI,CAAC,aAAa,SAAS;AACvB,yBAAO,eAAe;AACtB;AAAA,gBACJ;AAEA,oBAAI,gBAAgB,eAAe,OAAO,cAAc;AACxD,yBAAS,IAAI,GAAG,MAAM,cAAc,QAAQ,IAAI,KAAK,KAAK;AACtD,sBAAI,mBAAmB,cAAc,CAAC;AAItC,sBAAI,aAAa,CAAC,SAAS,uBAAuB,gBAAgB;AAClE,uBAAK,cAAc,aAAa,gBAAgB,MAAM,OAAO,aAAa,gBAAgB,MAAM,YAAY;AACxG,2BAAO,eAAe;AACtB;AAAA,kBACJ;AAAA,gBACJ;AAEA,oBAAI,0BAA0B,SAASC,2BAA0B;AAC7D,sBAAI,8BAA8B,SAASC,6BAA4B,YAAY;AAC/E,2BAAO,WAAY;AACf,0BAAI,QAAQ,IAAI,MAAM,YAAY,aAAa,2CAA2C;AAC1F,0BAAIC,WAAU,UAAU,OAAO,KAAK;AACpC,sCAAgBA,UAAS,UAAU,UAAU,SAAS,CAAC,CAAC;AACxD,6BAAOA;AAAA,oBACX;AAAA,kBACJ;AAEA,2BAAS,KAAK,GAAG,OAAO,sBAAsB,QAAQ,KAAK,MAAM,MAAM;AACnE,wBAAI,uBAAuB,sBAAsB,EAAE;AACnD,wBAAI,CAAC,aAAa,oBAAoB,GAAG;AACrC,mCAAa,oBAAoB,IAAI,4BAA4B,oBAAoB;AAAA,oBACzF;AAAA,kBACJ;AAAA,gBACJ;AAEA,wCAAwB;AAExB,oBAAI,mBAAmB,SAASC,kBAAiB,SAAS;AACtD,sBAAI,eAAe,UAAU,GAAG;AAC5B,4BAAQ,KAAK,oCAAoC,UAAU;AAAA,kBAC/D;AACA,iCAAe,UAAU,IAAI;AAC7B,gCAAc,UAAU,IAAI;AAI5B,0BAAQ;AAAA,gBACZ;AAEA,oBAAI,cAAc,cAAc;AAC5B,sBAAI,aAAa,YAAY,OAAO,aAAa,aAAa,YAAY;AACtE,iCAAa,SAAS,EAAE,KAAK,kBAAkB,MAAM;AAAA,kBACzD,OAAO;AACH,qCAAiB,CAAC,CAAC,aAAa,QAAQ;AAAA,kBAC5C;AAAA,gBACJ,OAAO;AACH,mCAAiB,IAAI;AAAA,gBACzB;AAAA,cACJ,SAAS,GAAG;AACR,uBAAO,CAAC;AAAA,cACZ;AAAA,YACJ,CAAC;AAED,gCAAoB,SAAS,UAAU,aAAa;AACpD,mBAAO;AAAA,UACX;AAEA,UAAAJ,aAAY,UAAU,SAAS,SAAS,SAAS;AAC7C,mBAAO,KAAK,WAAW;AAAA,UAC3B;AAEA,UAAAA,aAAY,UAAU,YAAY,SAAS,UAAU,YAAY,UAAU,eAAe;AACtF,gBAAI,mBAAmB,eAAe,UAAU,IAAI,UAAU,QAAQ,eAAe,UAAU,CAAC,IAAI,UAAU,OAAO,IAAI,MAAM,mBAAmB,CAAC;AAEnJ,gCAAoB,kBAAkB,UAAU,aAAa;AAC7D,mBAAO;AAAA,UACX;AAEA,UAAAA,aAAY,UAAU,gBAAgB,SAAS,cAAc,UAAU;AACnE,gBAAI,oBAAoB,UAAU,QAAQ,qBAAqB;AAC/D,gCAAoB,mBAAmB,QAAQ;AAC/C,mBAAO;AAAA,UACX;AAEA,UAAAA,aAAY,UAAU,QAAQ,SAAS,MAAM,UAAU;AACnD,gBAAIhB,QAAO;AAEX,gBAAI,UAAUA,MAAK,WAAW,KAAK,WAAY;AAC3C,kBAAIA,MAAK,WAAW,MAAM;AACtB,gBAAAA,MAAK,SAASA,MAAK,YAAY;AAAA,cACnC;AAEA,qBAAOA,MAAK;AAAA,YAChB,CAAC;AAED,gCAAoB,SAAS,UAAU,QAAQ;AAC/C,mBAAO;AAAA,UACX;AAEA,UAAAgB,aAAY,UAAU,YAAY,SAAS,UAAU,SAAS,UAAU,eAAe;AACnF,gBAAIhB,QAAO;AAEX,gBAAI,CAAC,QAAQ,OAAO,GAAG;AACnB,wBAAU,CAAC,OAAO;AAAA,YACtB;AAEA,gBAAI,mBAAmB,KAAK,qBAAqB,OAAO;AAExD,qBAAS,oBAAoB;AACzB,cAAAA,MAAK,QAAQ,SAASA,MAAK,OAAO;AAAA,YACtC;AAEA,qBAAS,qBAAqB,QAAQ;AAClC,cAAAA,MAAK,QAAQ,MAAM;AACnB,gCAAkB;AAElB,cAAAA,MAAK,SAASA,MAAK,aAAaA,MAAK,OAAO;AAC5C,qBAAOA,MAAK;AAAA,YAChB;AAEA,qBAAS,WAAWqB,mBAAkB;AAClC,qBAAO,WAAY;AACf,oBAAI,qBAAqB;AAEzB,yBAAS,oBAAoB;AACzB,yBAAO,qBAAqBA,kBAAiB,QAAQ;AACjD,wBAAI,aAAaA,kBAAiB,kBAAkB;AACpD;AAEA,oBAAArB,MAAK,UAAU;AACf,oBAAAA,MAAK,SAAS;AAEd,2BAAOA,MAAK,UAAU,UAAU,EAAE,KAAK,oBAAoB,EAAE,OAAO,EAAE,iBAAiB;AAAA,kBAC3F;AAEA,oCAAkB;AAClB,sBAAI,QAAQ,IAAI,MAAM,oCAAoC;AAC1D,kBAAAA,MAAK,aAAa,UAAU,OAAO,KAAK;AACxC,yBAAOA,MAAK;AAAA,gBAChB;AAEA,uBAAO,kBAAkB;AAAA,cAC7B;AAAA,YACJ;AAKA,gBAAI,mBAAmB,KAAK,eAAe,OAAO,KAAK,WAAW,OAAO,EAAE,WAAY;AACnF,qBAAO,UAAU,QAAQ;AAAA,YAC7B,CAAC,IAAI,UAAU,QAAQ;AAEvB,iBAAK,aAAa,iBAAiB,KAAK,WAAY;AAChD,kBAAI,aAAa,iBAAiB,CAAC;AACnC,cAAAA,MAAK,UAAU;AACf,cAAAA,MAAK,SAAS;AAEd,qBAAOA,MAAK,UAAU,UAAU,EAAE,KAAK,SAAU,QAAQ;AACrD,gBAAAA,MAAK,UAAU,OAAO;AACtB,kCAAkB;AAClB,gBAAAA,MAAK,6BAA6B;AAClC,gBAAAA,MAAK,cAAc,WAAW,gBAAgB;AAAA,cAClD,CAAC;AAAA,YACL,CAAC,EAAE,OAAO,EAAE,WAAY;AACpB,gCAAkB;AAClB,kBAAI,QAAQ,IAAI,MAAM,oCAAoC;AAC1D,cAAAA,MAAK,aAAa,UAAU,OAAO,KAAK;AACxC,qBAAOA,MAAK;AAAA,YAChB,CAAC;AAED,gCAAoB,KAAK,YAAY,UAAU,aAAa;AAC5D,mBAAO,KAAK;AAAA,UAChB;AAEA,UAAAgB,aAAY,UAAU,WAAW,SAAS,SAAS,YAAY;AAC3D,mBAAO,CAAC,CAAC,cAAc,UAAU;AAAA,UACrC;AAEA,UAAAA,aAAY,UAAU,UAAU,SAAS,QAAQ,6BAA6B;AAC1E,mBAAO,MAAM,2BAA2B;AAAA,UAC5C;AAEA,UAAAA,aAAY,UAAU,uBAAuB,SAAS,qBAAqB,SAAS;AAChF,gBAAI,mBAAmB,CAAC;AACxB,qBAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAChD,kBAAI,aAAa,QAAQ,CAAC;AAC1B,kBAAI,KAAK,SAAS,UAAU,GAAG;AAC3B,iCAAiB,KAAK,UAAU;AAAA,cACpC;AAAA,YACJ;AACA,mBAAO;AAAA,UACX;AAEA,UAAAA,aAAY,UAAU,+BAA+B,SAAS,+BAA+B;AAKzF,qBAAS,IAAI,GAAG,MAAM,eAAe,QAAQ,IAAI,KAAK,KAAK;AACvD,4BAAc,MAAM,eAAe,CAAC,CAAC;AAAA,YACzC;AAAA,UACJ;AAEA,UAAAA,aAAY,UAAU,iBAAiB,SAAS,eAAe,SAAS;AACpE,mBAAO,IAAIA,aAAY,OAAO;AAAA,UAClC;AAEA,iBAAOA;AAAA,QACX,EAAE;AAMF,YAAI,iBAAiB,IAAI,YAAY;AAErC,QAAAtB,QAAO,UAAU;AAAA,MAEjB,GAAE,EAAC,KAAI,EAAC,CAAC,EAAC,GAAE,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAAA,IACrB,CAAC;AAAA;AAAA;;;AC/vFD;AAukCA,yBAAwB;;;ACvkCxB;;;ACAA;;;ACAA;;;ACAA;AAGA,IAAI;AACJ,IAAI,QAAQ,IAAI,WAAW,EAAE;AACd,SAAR,MAAuB;AAE5B,MAAI,CAAC,iBAAiB;AAGpB,sBAAkB,OAAO,WAAW,eAAe,OAAO,mBAAmB,OAAO,gBAAgB,KAAK,MAAM,KAAK,OAAO,aAAa,eAAe,OAAO,SAAS,oBAAoB,cAAc,SAAS,gBAAgB,KAAK,QAAQ;AAE/O,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,0GAA0G;AAAA,IAC5H;AAAA,EACF;AAEA,SAAO,gBAAgB,KAAK;AAC9B;;;AClBA;;;ACAA;;;ACAA;AAAA,IAAO,gBAAQ;;;ADEf,SAAS,SAAS,MAAM;AACtB,SAAO,OAAO,SAAS,YAAY,cAAM,KAAK,IAAI;AACpD;AAEA,IAAO,mBAAQ;;;ADAf,IAAI,YAAY,CAAC;AAEjB,KAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAU,MAAM,IAAI,KAAO,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC;AACnD;AAFS;AAIT,SAAS,UAAU,KAAK;AACtB,MAAI,SAAS,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAGjF,MAAI,QAAQ,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,GAAG,YAAY;AAMrgB,MAAI,CAAC,iBAAS,IAAI,GAAG;AACnB,UAAM,UAAU,6BAA6B;AAAA,EAC/C;AAEA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AG7Bf;;;ACAA;;;ACAA;AAEA,SAAS4B,OAAM,MAAM;AACnB,MAAI,CAAC,iBAAS,IAAI,GAAG;AACnB,UAAM,UAAU,cAAc;AAAA,EAChC;AAEA,MAAI;AACJ,MAAI,MAAM,IAAI,WAAW,EAAE;AAE3B,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO;AAClD,MAAI,CAAC,IAAI,MAAM,KAAK;AACpB,MAAI,CAAC,IAAI,MAAM,IAAI;AACnB,MAAI,CAAC,IAAI,IAAI;AAEb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,OAAO;AACnD,MAAI,CAAC,IAAI,IAAI;AAEb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,MAAI,CAAC,IAAI,IAAI;AAEb,MAAI,CAAC,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;AACpD,MAAI,CAAC,IAAI,IAAI;AAGb,MAAI,EAAE,KAAK,IAAI,SAAS,KAAK,MAAM,IAAI,EAAE,GAAG,EAAE,KAAK,gBAAgB;AACnE,MAAI,EAAE,IAAI,IAAI,aAAc;AAC5B,MAAI,EAAE,IAAI,MAAM,KAAK;AACrB,MAAI,EAAE,IAAI,MAAM,KAAK;AACrB,MAAI,EAAE,IAAI,MAAM,IAAI;AACpB,MAAI,EAAE,IAAI,IAAI;AACd,SAAO;AACT;AAEA,IAAO,gBAAQA;;;AD/Bf,SAAS,cAAc,KAAK;AAC1B,QAAM,SAAS,mBAAmB,GAAG,CAAC;AAEtC,MAAI,QAAQ,CAAC;AAEb,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,UAAM,KAAK,IAAI,WAAW,CAAC,CAAC;AAAA,EAC9B;AAEA,SAAO;AACT;AAEO,IAAI,MAAM;AACV,IAAI,MAAM;AACF,SAAR,YAAkB,MAAMC,UAAS,UAAU;AAChD,WAAS,aAAa,OAAO,WAAW,KAAK,QAAQ;AACnD,QAAI,OAAO,UAAU,UAAU;AAC7B,cAAQ,cAAc,KAAK;AAAA,IAC7B;AAEA,QAAI,OAAO,cAAc,UAAU;AACjC,kBAAY,cAAM,SAAS;AAAA,IAC7B;AAEA,QAAI,UAAU,WAAW,IAAI;AAC3B,YAAM,UAAU,kEAAkE;AAAA,IACpF;AAKA,QAAI,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM;AAC5C,UAAM,IAAI,SAAS;AACnB,UAAM,IAAI,OAAO,UAAU,MAAM;AACjC,YAAQ,SAAS,KAAK;AACtB,UAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAOA;AAC7B,UAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAO;AAE7B,QAAI,KAAK;AACP,eAAS,UAAU;AAEnB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,YAAI,SAAS,CAAC,IAAI,MAAM,CAAC;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,kBAAU,KAAK;AAAA,EACxB;AAGA,MAAI;AACF,iBAAa,OAAO;AAAA,EACtB,SAAS,KAAK;AAAA,EAAC;AAGf,eAAa,MAAM;AACnB,eAAa,MAAM;AACnB,SAAO;AACT;;;AE/DA;AAoBA,SAAS,IAAI,OAAO;AAClB,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,MAAM,SAAS,mBAAmB,KAAK,CAAC;AAE5C,YAAQ,IAAI,WAAW,IAAI,MAAM;AAEjC,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,YAAM,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,IAC7B;AAAA,EACF;AAEA,SAAO,qBAAqB,WAAW,aAAa,KAAK,GAAG,MAAM,SAAS,CAAC,CAAC;AAC/E;AAMA,SAAS,qBAAqB,OAAO;AACnC,MAAI,SAAS,CAAC;AACd,MAAI,WAAW,MAAM,SAAS;AAC9B,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AACpC,QAAI,IAAI,MAAM,KAAK,CAAC,MAAM,IAAI,KAAK;AACnC,QAAI,MAAM,SAAS,OAAO,OAAO,MAAM,IAAI,EAAI,IAAI,OAAO,OAAO,IAAI,EAAI,GAAG,EAAE;AAC9E,WAAO,KAAK,GAAG;AAAA,EACjB;AAEA,SAAO;AACT;AAMA,SAAS,gBAAgB,cAAc;AACrC,UAAQ,eAAe,OAAO,KAAK,KAAK,KAAK;AAC/C;AAMA,SAAS,WAAW,GAAG,KAAK;AAE1B,IAAE,OAAO,CAAC,KAAK,OAAQ,MAAM;AAC7B,IAAE,gBAAgB,GAAG,IAAI,CAAC,IAAI;AAC9B,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,IAAI;AAER,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,IAAI;AACrC,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,MAAM;AAC3C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,QAAQ;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,WAAW;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,UAAU;AAC1C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,QAAQ;AAC5C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,UAAU;AACzC,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,UAAU;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,QAAQ;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS;AAC9C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,UAAU;AAC/C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,WAAW;AAChD,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS;AAC7C,QAAI,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,UAAU;AAC9C,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AACnB,QAAI,QAAQ,GAAG,IAAI;AAAA,EACrB;AAEA,SAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACpB;AAOA,SAAS,aAAa,OAAO;AAC3B,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO,CAAC;AAAA,EACV;AAEA,MAAI,UAAU,MAAM,SAAS;AAC7B,MAAI,SAAS,IAAI,YAAY,gBAAgB,OAAO,CAAC;AAErD,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK,GAAG;AACnC,WAAO,KAAK,CAAC,MAAM,MAAM,IAAI,CAAC,IAAI,QAAS,IAAI;AAAA,EACjD;AAEA,SAAO;AACT;AAOA,SAAS,QAAQ,GAAG,GAAG;AACrB,MAAI,OAAO,IAAI,UAAW,IAAI;AAC9B,MAAI,OAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAC1C,SAAO,OAAO,KAAK,MAAM;AAC3B;AAMA,SAAS,cAAc,KAAK,KAAK;AAC/B,SAAO,OAAO,MAAM,QAAQ,KAAK;AACnC;AAMA,SAAS,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAChC,SAAO,QAAQ,cAAc,QAAQ,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3E;AAEA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7C;AAEA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7C;AAEA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxC;AAEA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClC,SAAO,OAAO,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AAC3C;AAEA,IAAO,cAAQ;;;AHpNf,IAAI,KAAK,YAAI,MAAM,IAAM,WAAG;;;AIF5B;AAGA,SAAS,GAAG,SAAS,KAAK,QAAQ;AAChC,YAAU,WAAW,CAAC;AACtB,MAAI,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK;AAElD,OAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAC3B,OAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAE3B,MAAI,KAAK;AACP,aAAS,UAAU;AAEnB,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,UAAI,SAAS,CAAC,IAAI,KAAK,CAAC;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,kBAAU,IAAI;AACvB;AAEA,IAAO,aAAQ;;;ACvBf;;;ACAA;AAEA,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG;AACrB,UAAQ,GAAG;AAAA,IACT,KAAK;AACH,aAAO,IAAI,IAAI,CAAC,IAAI;AAAA,IAEtB,KAAK;AACH,aAAO,IAAI,IAAI;AAAA,IAEjB,KAAK;AACH,aAAO,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA,IAE7B,KAAK;AACH,aAAO,IAAI,IAAI;AAAA,EACnB;AACF;AAEA,SAAS,KAAK,GAAG,GAAG;AAClB,SAAO,KAAK,IAAI,MAAM,KAAK;AAC7B;AAEA,SAAS,KAAK,OAAO;AACnB,MAAI,IAAI,CAAC,YAAY,YAAY,YAAY,UAAU;AACvD,MAAI,IAAI,CAAC,YAAY,YAAY,YAAY,WAAY,UAAU;AAEnE,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,MAAM,SAAS,mBAAmB,KAAK,CAAC;AAE5C,YAAQ,CAAC;AAET,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,YAAM,KAAK,IAAI,WAAW,CAAC,CAAC;AAAA,IAC9B;AAAA,EACF,WAAW,CAAC,MAAM,QAAQ,KAAK,GAAG;AAEhC,YAAQ,MAAM,UAAU,MAAM,KAAK,KAAK;AAAA,EAC1C;AAEA,QAAM,KAAK,GAAI;AACf,MAAI,IAAI,MAAM,SAAS,IAAI;AAC3B,MAAI,IAAI,KAAK,KAAK,IAAI,EAAE;AACxB,MAAI,IAAI,IAAI,MAAM,CAAC;AAEnB,WAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC7B,QAAI,MAAM,IAAI,YAAY,EAAE;AAE5B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,UAAI,CAAC,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC;AAAA,IACxI;AAEA,MAAE,EAAE,IAAI;AAAA,EACV;AAEA,IAAE,IAAI,CAAC,EAAE,EAAE,KAAK,MAAM,SAAS,KAAK,IAAI,KAAK,IAAI,GAAG,EAAE;AACtD,IAAE,IAAI,CAAC,EAAE,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;AACtC,IAAE,IAAI,CAAC,EAAE,EAAE,KAAK,MAAM,SAAS,KAAK,IAAI;AAExC,WAAS,MAAM,GAAG,MAAM,GAAG,EAAE,KAAK;AAChC,QAAI,IAAI,IAAI,YAAY,EAAE;AAE1B,aAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,QAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IACjB;AAEA,aAAS,KAAK,IAAI,KAAK,IAAI,EAAE,IAAI;AAC/B,QAAE,EAAE,IAAI,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AAAA,IACjE;AAEA,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AACX,QAAI,IAAI,EAAE,CAAC;AAEX,aAAS,MAAM,GAAG,MAAM,IAAI,EAAE,KAAK;AACjC,UAAI,IAAI,KAAK,MAAM,MAAM,EAAE;AAC3B,UAAI,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,MAAM;AAC3D,UAAI;AACJ,UAAI;AACJ,UAAI,KAAK,GAAG,EAAE,MAAM;AACpB,UAAI;AACJ,UAAI;AAAA,IACN;AAEA,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AACpB,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM;AAAA,EACtB;AAEA,SAAO,CAAC,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,KAAK,KAAM,EAAE,CAAC,KAAK,IAAI,KAAM,EAAE,CAAC,IAAI,GAAI;AACjW;AAEA,IAAO,eAAQ;;;AD7Ff,IAAI,KAAK,YAAI,MAAM,IAAM,YAAI;;;AEF7B;;;ACAA;;;AfAA,IAAI,YAAY,OAAO;AACvB,IAAI,sBAAsB,OAAO;AACjC,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,kBAAkB,CAAC,KAAK,KAAK,UAAU,OAAO,MAAM,UAAU,KAAK,KAAK,EAAE,YAAY,MAAM,cAAc,MAAM,UAAU,MAAM,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI;AAC1J,IAAI,iBAAiB,CAAC,GAAG,MAAM;AAC7B,WAAS,QAAQ,MAAM,IAAI,CAAC;AAC1B,QAAI,aAAa,KAAK,GAAG,IAAI;AAC3B,sBAAgB,GAAG,MAAM,EAAE,IAAI,CAAC;AACpC,MAAI;AACF,aAAS,QAAQ,oBAAoB,CAAC,GAAG;AACvC,UAAI,aAAa,KAAK,GAAG,IAAI;AAC3B,wBAAgB,GAAG,MAAM,EAAE,IAAI,CAAC;AAAA,IACpC;AACF,SAAO;AACT;AAMA,IAAI,UAAU;AAGd,IAAI,WAAW,WAAW;AACxB,aAAW,OAAO,UAAU,SAAS,UAAU,GAAG;AAChD,aAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACnD,UAAI,UAAU,CAAC;AACf,eAAS,KAAK;AACZ,YAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC;AAC3C,YAAE,CAAC,IAAI,EAAE,CAAC;AAAA,IAChB;AACA,WAAO;AAAA,EACT;AACA,SAAO,SAAS,MAAM,MAAM,SAAS;AACvC;AAIA,IAAI,WAA2B,oBAAI,IAAI;AACvC,IAAI,oBAAoC,oBAAI,IAAI;AAChD,IAAI,wBAAwB;AAC5B,IAAI,gCAAgC;AACpC,SAAS,UAAU,QAAQ;AACzB,SAAO,OAAO,QAAQ,WAAW,GAAG,EAAE,KAAK;AAC7C;AACA,SAAS,gBAAgB,KAAK;AAC5B,SAAO,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,OAAO,IAAI,GAAG,CAAC;AAChE;AACA,SAAS,iBAAiB,KAAK;AAC7B,MAAI,WAA2B,oBAAI,IAAI;AACvC,MAAI,cAAc,CAAC;AACnB,MAAI,YAAY,QAAQ,SAAS,oBAAoB;AACnD,QAAI,mBAAmB,SAAS,sBAAsB;AACpD,UAAI,eAAe,mBAAmB,KAAK;AAC3C,UAAI,YAAY,gBAAgB,mBAAmB,GAAG;AACtD,UAAI,eAAe,kBAAkB,IAAI,YAAY;AACrD,UAAI,gBAAgB,CAAC,aAAa,IAAI,SAAS,GAAG;AAChD,YAAI,uBAAuB;AACzB,kBAAQ,KAAK,iCAAiC,eAAe,+LAA+L;AAAA,QAC9P;AAAA,MACF,WAAW,CAAC,cAAc;AACxB,0BAAkB,IAAI,cAAc,eAA+B,oBAAI,IAAI,CAAC;AAAA,MAC9E;AACA,mBAAa,IAAI,SAAS;AAC1B,UAAI,CAAC,SAAS,IAAI,SAAS,GAAG;AAC5B,iBAAS,IAAI,SAAS;AACtB,oBAAY,KAAK,kBAAkB;AAAA,MACrC;AAAA,IACF,OAAO;AACL,kBAAY,KAAK,kBAAkB;AAAA,IACrC;AAAA,EACF,CAAC;AACD,SAAO,SAAS,SAAS,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY,CAAC;AACpD;AACA,SAAS,SAAS,KAAK;AACrB,MAAI,UAAU,IAAI,IAAI,IAAI,WAAW;AACrC,UAAQ,QAAQ,SAAS,MAAM;AAC7B,QAAI,KAAK;AACP,aAAO,KAAK;AACd,WAAO,KAAK,IAAI,EAAE,QAAQ,SAAS,KAAK;AACtC,UAAI,QAAQ,KAAK,GAAG;AACpB,UAAI,SAAS,OAAO,UAAU,UAAU;AACtC,gBAAQ,IAAI,KAAK;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACD,MAAI,MAAM,IAAI;AACd,MAAI,KAAK;AACP,WAAO,IAAI;AACX,WAAO,IAAI;AAAA,EACb;AACA,SAAO;AACT;AACA,SAAS,cAAc,QAAQ;AAC7B,MAAI,WAAW,UAAU,MAAM;AAC/B,MAAI,CAAC,SAAS,IAAI,QAAQ,GAAG;AAC3B,QAAI,SAAS,MAAM,QAAQ;AAAA,MACzB;AAAA,MACA,8BAA8B;AAAA,IAChC,CAAC;AACD,QAAI,CAAC,UAAU,OAAO,SAAS,YAAY;AACzC,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,aAAS,IAAI,UAAU,SAAS,iBAAiB,MAAM,CAAC,CAAC;AAAA,EAC3D;AACA,SAAO,SAAS,IAAI,QAAQ;AAC9B;AACA,SAAS,IAAI,UAAU;AACrB,MAAI,OAAO,CAAC;AACZ,WAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,SAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,EAC7B;AACA,MAAI,OAAO,aAAa,UAAU;AAChC,eAAW,CAAC,QAAQ;AAAA,EACtB;AACA,MAAI,SAAS,SAAS,CAAC;AACvB,OAAK,QAAQ,SAAS,KAAK,GAAG;AAC5B,QAAI,OAAO,IAAI,SAAS,YAAY;AAClC,gBAAU,IAAI,IAAI,OAAO;AAAA,IAC3B,OAAO;AACL,gBAAU;AAAA,IACZ;AACA,cAAU,SAAS,IAAI,CAAC;AAAA,EAC1B,CAAC;AACD,SAAO,cAAc,MAAM;AAC7B;AACA,SAAS,cAAc;AACrB,WAAS,MAAM;AACf,oBAAkB,MAAM;AAC1B;AACA,SAAS,0BAA0B;AACjC,0BAAwB;AAC1B;AACA,SAAS,sCAAsC;AAC7C,kCAAgC;AAClC;AACA,SAAS,uCAAuC;AAC9C,kCAAgC;AAClC;AACA,IAAI,SAAS;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAAA,CACC,SAAS,OAAO;AACf,QAAM,MAAM,OAAO,KAAK,MAAM,cAAc,OAAO,aAAa,MAAM,0BAA0B,OAAO,yBAAyB,MAAM,sCAAsC,OAAO,qCAAqC,MAAM,uCAAuC,OAAO;AAC9Q,GAAG,QAAQ,MAAM,CAAC,EAAE;AACpB,IAAI,SAAS,IAAI;AACjB,IAAI,cAAc;AAGlB,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW1B,yBAAyB;AAC/B,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ/B,yBAAyB;AAC/B,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQrC,IAAI,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQnC,IAAI,oCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASxC,IAAI,mCAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAavC,IAAI,mCAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAavC,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoB/B,8BAA8B;AAAA,EAClC,4BAA4B;AAAA,EAC5B,iCAAiC;AAAA,EACjC,gCAAgC;AAAA,EAChC,gCAAgC;AAClC,IAAI,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBzB,yBAAyB;AAAA,EAC7B,8BAA8B;AAAA,EAC9B,8BAA8B;AAChC,IAAI,qCAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMzC,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrC,IAAI,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB7B,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAY/B,sBAAsB;AAC5B,IAAI,oDAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmGxlD,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAMlC,IAAI,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOtC,IAAI,qCAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAsBnC,yBAAyB;AAAA,EAC7B,8BAA8B;AAChC,IAAI,2CAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAM/C,IAAI,gCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAU9B,kCAAkC;AAAA,EACtC,wCAAwC;AAC1C,IAAI,mCAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvC,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASxB,gCAAgC;AACtC,IAAI,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQnC,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM/B,8BAA8B;AACpC,IAAI,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAStC,IAAI,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU/B,IAAI,qCAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQnC,uBAAuB;AAC7B,IAAI,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAStB,kCAAkC;AACxC,IAAI,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQpB,wBAAwB;AAC9B,IAAI,gCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM9B,wBAAwB;AAC9B,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM5B,gCAAgC;AACtC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B,8BAA8B;AACpC,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB,4BAA4B;AAClC,IAAI,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQrB,yBAAyB;AAC/B,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B,8BAA8B;AACpC,IAAI,oCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBxC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ1B,8BAA8B;AACpC,IAAI,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM7B,iCAAiC;AACvC,IAAI,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMzB,6BAA6B;AACnC,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ5B,gCAAgC;AACtC,IAAI,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B,IAAI,gCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlC,IAAI,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAStB,uBAAuB;AAC7B,IAAI,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMzB,gCAAgC;AACtC,IAAI,8CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlD,IAAI,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASnC,IAAI,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM7B,gCAAgC;AACtC,IAAI,sCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpC,8BAA8B;AACpC,IAAI,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQhC,8BAA8B;AACpC,IAAI,6CAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ3C,8BAA8B;AACpC,IAAI,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAK1B,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ1B,8BAA8B;AACpC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ1B,8BAA8B;AACpC,IAAI,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASjC,IAAI,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiClB,wBAAwB;AAAA,EAC5B,8BAA8B;AAAA,EAC9B,kCAAkC;AAAA,EAClC,yBAAyB;AAAA,EACzB,8BAA8B;AAAA,EAC9B,8BAA8B;AAAA,EAC9B,4BAA4B;AAAA,EAC5B,iCAAiC;AAAA,EACjC,gCAAgC;AAAA,EAChC,yBAAyB;AAC3B,IAAI,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMzB,+BAA+B;AACrC,IAAI,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMlB,wBAAwB;AAC9B,IAAI,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtC,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM5B,kCAAkC;AACxC,IAAI,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAehC,8BAA8B;AAAA,EAClC,8BAA8B;AAChC,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B,gCAAgC;AACtC,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB,8BAA8B;AACpC,IAAI,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnB,yBAAyB;AAC/B,IAAI,uCAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAerC,iDAAiD;AAAA,EACrD,2BAA2B;AAC7B,IAAI,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW/B,2CAA2C;AAAA,EAC/C,2BAA2B;AAC7B,IAAI,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMtB,4BAA4B;AAClC,IAAI,8BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW5B,2BAA2B;AAAA,EAC/B,yBAAyB;AAC3B,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB,8BAA8B;AACpC,IAAI,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnB,yBAAyB;AAC/B,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB,8BAA8B;AACpC,IAAI,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM3B,iCAAiC;AACvC,IAAI,mCAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBjC,2BAA2B;AAAA,EAC/B,wCAAwC;AAAA,EACxC,6BAA6B;AAC/B,IAAI,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWtB,2BAA2B;AAAA,EAC/B,6BAA6B;AAC/B,IAAI,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQlB,4BAA4B;AAClC,IAAI,4CAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhD,IAAI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,IAAI,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B,gCAAgC;AACtC,IAAI,iBAAiB,CAAC,QAAQ,gBAAgB,mBAAmB,OAAO;AACxE,SAAS,OAAO,QAAQ,cAAc,gBAAgB;AACpD,SAAO;AAAA,IACL,uBAAuB,WAAW,gBAAgB;AAChD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,gCAAgC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,0BAA0B,UAAU;AAAA,IAC1N;AAAA,IACA,wBAAwB,WAAW,gBAAgB;AACjD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,iCAAiC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,2BAA2B,UAAU;AAAA,IAC5N;AAAA,IACA,iBAAiB,WAAW,gBAAgB;AAC1C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,0BAA0B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,oBAAoB,UAAU;AAAA,IAC9M;AAAA,IACA,2BAA2B,WAAW,gBAAgB;AACpD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,oCAAoC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,8BAA8B,UAAU;AAAA,IAClO;AAAA,IACA,cAAc,WAAW,gBAAgB;AACvC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,uBAAuB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,iBAAiB,UAAU;AAAA,IACxM;AAAA,IACA,YAAY,WAAW,gBAAgB;AACrC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,qBAAqB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,eAAe,UAAU;AAAA,IACpM;AAAA,IACA,sBAAsB,WAAW,gBAAgB;AAC/C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,+BAA+B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,yBAAyB,UAAU;AAAA,IACxN;AAAA,IACA,oBAAoB,WAAW,gBAAgB;AAC7C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6BAA6B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uBAAuB,UAAU;AAAA,IACpN;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,UAAU;AAAA,IAC5M;AAAA,IACA,aAAa,WAAW,gBAAgB;AACtC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,sBAAsB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,gBAAgB,UAAU;AAAA,IACtM;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,0BAA0B,WAAW,gBAAgB;AACnD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,mCAAmC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,6BAA6B,UAAU;AAAA,IAChO;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,qBAAqB,WAAW,gBAAgB;AAC9C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,8BAA8B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,wBAAwB,UAAU;AAAA,IACtN;AAAA,IACA,iBAAiB,WAAW,gBAAgB;AAC1C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,0BAA0B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,oBAAoB,UAAU;AAAA,IAC9M;AAAA,IACA,oBAAoB,WAAW,gBAAgB;AAC7C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6BAA6B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uBAAuB,UAAU;AAAA,IACpN;AAAA,IACA,YAAY,WAAW,gBAAgB;AACrC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,qBAAqB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,eAAe,UAAU;AAAA,IACpM;AAAA,IACA,sBAAsB,WAAW,gBAAgB;AAC/C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,+BAA+B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,yBAAyB,UAAU;AAAA,IACxN;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,UAAU;AAAA,IAC5M;AAAA,IACA,oBAAoB,WAAW,gBAAgB;AAC7C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6BAA6B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uBAAuB,UAAU;AAAA,IACpN;AAAA,IACA,cAAc,WAAW,gBAAgB;AACvC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,uBAAuB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,iBAAiB,UAAU;AAAA,IACxM;AAAA,IACA,iBAAiB,WAAW,gBAAgB;AAC1C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,0BAA0B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,oBAAoB,UAAU;AAAA,IAC9M;AAAA,IACA,oCAAoC,WAAW,gBAAgB;AAC7D,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6CAA6C,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uCAAuC,UAAU;AAAA,IACpP;AAAA,IACA,qBAAqB,WAAW,gBAAgB;AAC9C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,8BAA8B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,wBAAwB,UAAU;AAAA,IACtN;AAAA,IACA,qBAAqB,WAAW,gBAAgB;AAC9C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,8BAA8B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,wBAAwB,UAAU;AAAA,IACtN;AAAA,IACA,4BAA4B,WAAW,gBAAgB;AACrD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,qCAAqC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,+BAA+B,UAAU;AAAA,IACpO;AAAA,IACA,wBAAwB,WAAW,gBAAgB;AACjD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,iCAAiC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,2BAA2B,UAAU;AAAA,IAC5N;AAAA,IACA,mCAAmC,WAAW,gBAAgB;AAC5D,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,4CAA4C,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,sCAAsC,UAAU;AAAA,IAClP;AAAA,IACA,YAAY,WAAW,gBAAgB;AACrC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,qBAAqB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,eAAe,UAAU;AAAA,IACpM;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,UAAU;AAAA,IAChN;AAAA,IACA,mBAAmB,WAAW,gBAAgB;AAC5C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,4BAA4B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,sBAAsB,UAAU;AAAA,IAClN;AAAA,IACA,UAAU,WAAW,gBAAgB;AACnC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,mBAAmB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,aAAa,OAAO;AAAA,IAC7L;AAAA,IACA,iBAAiB,WAAW,gBAAgB;AAC1C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,0BAA0B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,oBAAoB,OAAO;AAAA,IAC3M;AAAA,IACA,UAAU,WAAW,gBAAgB;AACnC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,mBAAmB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,aAAa,OAAO;AAAA,IAC7L;AAAA,IACA,wBAAwB,WAAW,gBAAgB;AACjD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,iCAAiC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,2BAA2B,OAAO;AAAA,IACzN;AAAA,IACA,oBAAoB,WAAW,gBAAgB;AAC7C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6BAA6B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uBAAuB,OAAO;AAAA,IACjN;AAAA,IACA,wBAAwB,WAAW,gBAAgB;AACjD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,iCAAiC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,2BAA2B,OAAO;AAAA,IACzN;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,OAAO;AAAA,IAC7M;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,OAAO;AAAA,IACzM;AAAA,IACA,WAAW,WAAW,gBAAgB;AACpC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,oBAAoB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,cAAc,OAAO;AAAA,IAC/L;AAAA,IACA,6BAA6B,WAAW,gBAAgB;AACtD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,sCAAsC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,gCAAgC,OAAO;AAAA,IACnO;AAAA,IACA,uBAAuB,WAAW,gBAAgB;AAChD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,gCAAgC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,0BAA0B,OAAO;AAAA,IACvN;AAAA,IACA,cAAc,WAAW,gBAAgB;AACvC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,uBAAuB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,iBAAiB,OAAO;AAAA,IACrM;AAAA,IACA,oBAAoB,WAAW,gBAAgB;AAC7C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,6BAA6B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,uBAAuB,OAAO;AAAA,IACjN;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,OAAO;AAAA,IACzM;AAAA,IACA,WAAW,WAAW,gBAAgB;AACpC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,oBAAoB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,cAAc,OAAO;AAAA,IAC/L;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,OAAO;AAAA,IACzM;AAAA,IACA,mBAAmB,WAAW,gBAAgB;AAC5C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,4BAA4B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,sBAAsB,OAAO;AAAA,IAC/M;AAAA,IACA,yBAAyB,WAAW,gBAAgB;AAClD,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,kCAAkC,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,4BAA4B,OAAO;AAAA,IAC3N;AAAA,IACA,cAAc,WAAW,gBAAgB;AACvC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,uBAAuB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,iBAAiB,OAAO;AAAA,IACrM;AAAA,IACA,UAAU,WAAW,gBAAgB;AACnC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,mBAAmB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,aAAa,OAAO;AAAA,IAC7L;AAAA,IACA,kCAAkC,WAAW,gBAAgB;AAC3D,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2CAA2C,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qCAAqC,OAAO;AAAA,IAC7O;AAAA,IACA,gBAAgB,WAAW,gBAAgB;AACzC,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,yBAAyB,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,mBAAmB,OAAO;AAAA,IACzM;AAAA,IACA,kBAAkB,WAAW,gBAAgB;AAC3C,aAAO,YAAY,CAAC,0BAA0B,OAAO,QAAQ,2BAA2B,WAAW,eAAe,eAAe,CAAC,GAAG,cAAc,GAAG,qBAAqB,CAAC,GAAG,qBAAqB,OAAO;AAAA,IAC7M;AAAA,EACF;AACF;AAGA,IAAI,gBAAgB,MAAM;AAAA,EACxB,YAAY,eAAe;AACzB,SAAK,eAAe,OAAO,aAAa;AAAA,EAC1C;AAAA,EACA,OAAO,KAAK;AACV,SAAK,OAAO;AAAA,EACd;AAAA,EACA,MAAM,SAAS;AACb,SAAK,OAAO;AAAA,EACd;AAAA,EACA,MAAM,uBAAuB,WAAW;AACtC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,uBAAuB,WAAW,OAAO;AAAA,EACpE;AAAA,EACA,MAAM,wBAAwB,WAAW;AACvC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,wBAAwB,WAAW,OAAO;AAAA,EACrE;AAAA,EACA,MAAM,iBAAiB,WAAW;AAChC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,iBAAiB,WAAW,OAAO;AAAA,EAC9D;AAAA,EACA,MAAM,2BAA2B,WAAW;AAC1C,QAAI,IAAI;AACR,UAAM,UAAU,KAAK,gBAAgB;AACrC,UAAM,SAAS,MAAM,KAAK,aAAa;AAAA,MACrC;AAAA,MACA;AAAA,IACF;AACA,UAAM,SAAS,MAAM,KAAK,OAAO,+BAA+B,OAAO,SAAS,GAAG,kBAAkB,OAAO,SAAS,GAAG;AACxH,QAAI,UAAU,QAAQ;AACpB,WAAK,OAAO;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,cAAc,WAAW;AAC7B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,MAAM,KAAK,aAAa,cAAc,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,YAAY,WAAW;AAC3B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,YAAY,WAAW,OAAO;AAAA,EACzD;AAAA,EACA,MAAM,sBAAsB,WAAW;AACrC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,sBAAsB,WAAW,OAAO;AAAA,EACnE;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,oBAAoB,WAAW;AACnC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,oBAAoB,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,aAAa,WAAW;AAC5B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,aAAa,WAAW,OAAO;AAAA,EAC1D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,0BAA0B,WAAW;AACzC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,0BAA0B,WAAW,OAAO;AAAA,EACvE;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,iBAAiB,WAAW;AAChC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,iBAAiB,WAAW,OAAO;AAAA,EAC9D;AAAA,EACA,MAAM,oBAAoB,WAAW;AACnC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,oBAAoB,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,qBAAqB,WAAW;AACpC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,qBAAqB,WAAW,OAAO;AAAA,EAClE;AAAA,EACA,MAAM,YAAY,WAAW;AAC3B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,YAAY,WAAW,OAAO;AAAA,EACzD;AAAA,EACA,MAAM,sBAAsB,WAAW;AACrC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,sBAAsB,WAAW,OAAO;AAAA,EACnE;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,oBAAoB,WAAW;AACnC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,oBAAoB,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,UAAU,WAAW;AACzB,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,UAAU,WAAW,OAAO;AAAA,EACvD;AAAA,EACA,MAAM,iBAAiB,WAAW;AAChC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,iBAAiB,WAAW,OAAO;AAAA,EAC9D;AAAA,EACA,MAAM,UAAU,WAAW;AACzB,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,UAAU,WAAW,OAAO;AAAA,EACvD;AAAA,EACA,MAAM,wBAAwB,WAAW;AACvC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,wBAAwB,WAAW,OAAO;AAAA,EACrE;AAAA,EACA,MAAM,oBAAoB,WAAW;AACnC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,oBAAoB,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,wBAAwB,WAAW;AACvC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,wBAAwB,WAAW,OAAO;AAAA,EACrE;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,WAAW,WAAW;AAC1B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,WAAW,WAAW,OAAO;AAAA,EACxD;AAAA,EACA,MAAM,6BAA6B,WAAW;AAC5C,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,6BAA6B,WAAW,OAAO;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA,EAIA,MAAM,uBAAuB,WAAW;AACtC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,uBAAuB,WAAW,OAAO;AAAA,EACpE;AAAA,EACA,MAAM,cAAc,WAAW;AAC7B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,cAAc,WAAW,OAAO;AAAA,EAC3D;AAAA,EACA,MAAM,oBAAoB,WAAW;AACnC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,oBAAoB,WAAW,OAAO;AAAA,EACjE;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,WAAW,WAAW;AAC1B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,WAAW,WAAW,OAAO;AAAA,EACxD;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,mBAAmB,WAAW;AAClC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,mBAAmB,WAAW,OAAO;AAAA,EAChE;AAAA,EACA,MAAM,0BAA0B,WAAW;AACzC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,yBAAyB,WAAW,OAAO;AAAA,EACtE;AAAA,EACA,MAAM,cAAc,WAAW;AAC7B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,cAAc,WAAW,OAAO;AAAA,EAC3D;AAAA,EACA,MAAM,UAAU,WAAW;AACzB,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,UAAU,WAAW,OAAO;AAAA,EACvD;AAAA,EACA,MAAM,kCAAkC,WAAW;AACjD,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,gBAAgB,WAAW;AAC/B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,gBAAgB,WAAW,OAAO;AAAA,EAC7D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,cAAc,WAAW;AAC7B,QAAI,IAAI;AACR,UAAM,UAAU,KAAK,gBAAgB;AACrC,UAAM,SAAS,MAAM,KAAK,aAAa,cAAc,WAAW,OAAO;AACvE,UAAM,SAAS,MAAM,KAAK,OAAO,kBAAkB,OAAO,SAAS,GAAG,kBAAkB,OAAO,SAAS,GAAG;AAC3G,QAAI,UAAU,QAAQ;AACpB,WAAK,OAAO;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,iBAAiB,WAAW;AAChC,QAAI;AACJ,UAAM,UAAU,KAAK,gBAAgB;AACrC,UAAM,SAAS,MAAM,KAAK,aAAa,iBAAiB,WAAW,OAAO;AAC1E,UAAM,SAAS,KAAK,OAAO,qBAAqB,OAAO,SAAS,GAAG;AACnE,QAAI,UAAU,QAAQ;AACpB,WAAK,OAAO;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,oCAAoC,WAAW;AACnD,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,mBAAmB,WAAW;AAClC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,mBAAmB,WAAW,OAAO;AAAA,EAChE;AAAA,EACA,MAAM,qBAAqB,WAAW;AACpC,QAAI;AACJ,UAAM,UAAU,KAAK,gBAAgB;AACrC,UAAM,SAAS,MAAM,KAAK,aAAa;AAAA,MACrC;AAAA,MACA;AAAA,IACF;AACA,UAAM,SAAS,KAAK,OAAO,yBAAyB,OAAO,SAAS,GAAG;AACvE,QAAI,UAAU,QAAQ;AACpB,WAAK,OAAO;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,4BAA4B,WAAW;AAC3C,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,4BAA4B,WAAW,OAAO;AAAA,EACzE;AAAA,EACA,MAAM,yBAAyB,WAAW;AACxC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,wBAAwB,WAAW,OAAO;AAAA,EACrE;AAAA,EACA,MAAM,mCAAmC,WAAW;AAClD,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa;AAAA,MACvB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,YAAY,WAAW;AAC3B,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,YAAY,WAAW,OAAO;AAAA,EACzD;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,MAAM,kBAAkB,WAAW;AACjC,UAAM,UAAU,KAAK,gBAAgB;AACrC,WAAO,KAAK,aAAa,kBAAkB,WAAW,OAAO;AAAA,EAC/D;AAAA,EACA,kBAAkB;AAChB,UAAM,YAAY,WAAK;AACvB,UAAM,UAAU;AAAA,MACd,gBAAgB;AAAA,MAChB,2BAA2B;AAAA,IAC7B;AACA,QAAI,KAAK,SAAS,QAAQ;AACxB,cAAQ,eAAe,IAAI,UAAU,KAAK,IAAI;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;;;AgBxlDA;;;ACEA;AAAO,IAAM,wBAAwC;;;ACErD;AAAO,IAAM,YAAY,CAAmB,QAAyB,IAAI,YAAW;AAK7E,IAAM,+BAA+B,CAAC,YAAwD;AACnG,QAAM,IAA4B,CAAA;AAClC,UAAQ,QAAQ,CAAC,GAAG,MAAK;AACvB,MAAE,CAAC,IAAI;EACT,CAAC;AACD,SAAO;AACT;;;ACFA;AAAO,IAAM,mBAAmB,CAC9B,mBACA,WACA,mBACqB;AACrB,SAAQ,kBAAwC,WAC3C,oBACA;IACC,UAAU;IACV;IACA;IACA,QAAQ;;AAEhB;AAEO,IAAM,sBAAsB,CACjC,gBACA,WACA,mBACwB;AACxB,SAAQ,eAAwC,QAC3C,iBACA;IACC,OAAO;IACP;IACA;IACA,QAAQ;;AAEhB;AAEO,IAAM,wBAAwB,CACnC,oBACA,mBAC2B;AAC3B,SAAQ,mBAA+C,YAClD,qBACD;IACE,WAAW;IACX;IACA,QAAQ;;AAEhB;;;ACpDA;AAMA,IAAM,uBAAuB,CAAC,aAA8C;AAN5E;AAOE,MAAI,gBAAgB;AAEpB,QAAM,uBAAuB,SAAS,YAAY,OAChD,CAAC,eAAe,WAAW,SAAS,qBAAqB;AAG3D,MAAI,qBAAqB,WAAW,GAAG;AACrC,qBAAgB,gCAAqB,CAAC,MAAtB,mBAAyB,SAAzB,mBAA+B;;AAGjD,SAAO;AACT;AAEO,IAAM,yBAAyB,CACpC,aAC6C;AAC7C,MAAI,OAAO,aAAa,UAAU;AAChC,QAAIC,iBAAgB;AAEpB,QAAI;AACF,YAAM,iBAAiB,MAAM,QAAQ;AACrC,MAAAA,iBAAgB,qBAAqB,cAAc;aAC5C,KAAK;;AAId,WAAO,EAAE,OAAO,UAAU,eAAAA,eAAa;;AAGzC,QAAM,gBAAgB,qBAAqB,QAAQ;AAEnD,SAAO,EAAE,OAAO,MAAM,QAAQ,GAAG,cAAa;AAChD;;;ACUA;AAAM,IAAO,cAAP,MAAO,qBAAoB,MAAK;EAIpC,YAAY,UAA2B,SAA8B;AACnE,UAAM,UAAU,GAAG,aAAY,eAAe,QAAQ,CAAC,KAAK,KAAK,UAAU;MACzE;MACA;KACD,CAAC;AAEF,UAAM,OAAO;AAEb,WAAO,eAAe,MAAM,aAAY,SAAS;AAEjD,SAAK,WAAW;AAChB,SAAK,UAAU;AAGf,QAAI,OAAO,MAAM,sBAAsB,YAAY;AACjD,YAAM,kBAAkB,MAAM,YAAW;;EAE7C;EAEQ,OAAO,eAAe,UAAyB;AAvBzD;AAwBI,aAAO,oBAAS,WAAT,mBAAkB,OAAlB,mBAAsB,YAAW,wBAAwB,SAAS,MAAM;EACjF;;;;ALzCF,iBAAwC;;;AMnCxC;AAMA,IAAM,kBAAkB;AACxB,IAAM,iBAAiB;AACvB,IAAM,OAAO;AACb,IAAM,OAAO;AACb,IAAM,YAAY;AAClB,IAAM,OAAO;AACb,IAAM,QAAQ;AACd,IAAM,WAAW;AAWjB,IAAM,0BAAN,MAAM,yBAAuB;EAK3B,IAAW,OAAI;AACb,WAAO,KAAK;EACd;EACA,IAAW,KAAE;AACX,WAAO,KAAK;EACd;EACA,IAAW,UAAO;AAChB,WAAO,KAAK;EACd;EAEA,YAAY,MAAc,SAAa,IAAW;AAChD,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,MAAM;EACb;EAEA,IAAW,OAAI;AACb,UAAM,SAAc,EAAE,MAAM,KAAK,KAAI;AACrC,QAAI,KAAK,MAAM,QAAQ,KAAK,MAAM;AAAW,aAAO,KAAK,KAAK;AAC9D,QAAI,KAAK,WAAW,QAAQ,KAAK,WAAW;AAAW,aAAO,UAAU,KAAK;AAC7E,WAAO,KAAK,UAAU,MAAM;EAC9B;EAEA,OAAO,MAAS,MAAcC,IAAsB;AAClD,UAAM,EAAE,MAAM,SAAS,GAAE,IAAiD,KAAK,MAAM,IAAI;AACzF,WAAO,IAAI,yBAAwB,MAAMA,GAAE,OAAO,GAAG,EAAE;EACzD;;AA+BF,IAAa,yBAAb,MAAmC;EAMjC,YAAY,QAAmB,EAAE,QAAQ,gBAAgB,QAAQ,OAAM,GAAiB;AAFhF,SAAA,cAA2B,EAAE,cAAc,OAAO,eAAe,GAAG,eAAe,CAAA,EAAE;AAG3F,SAAK,SAAS;AAEd,WAAO,iBAAiB,QAAQ,OAAO,MAAK;AAC1C,WAAK,YAAY,eAAe;AAChC,WAAK,YAAY,gBAAgB,CAAA;AACjC,aAAO,KAAK,eAAe,SAAS,MAAM,OAAM,IAAK,IAAI,EAAE,IAAI;IACjE,CAAC;AAED,WAAO,iBAAiB,SAAS,CAAC,MAAK;AACrC,WAAK,YAAY,eAAe;AAChC,WAAK,YAAY,gBAAgB,CAAA;IACnC,CAAC;AAED,WAAO,iBAAiB,SAAS,CAAC,MAAK;AACrC,cAAQ,MAAM,CAAC;IACjB,CAAC;AAED,WAAO,iBAAiB,WAAW,CAAC,MAAK;AACvC,UAAI;AACF,cAAM,UAAU,aAAa,EAAE,IAAI;AACnC,gBAAQ,QAAQ,MAAM;UACpB,KAAK,gBAAgB;AACnB,gBAAI,KAAK,YAAY,cAAc;AACjC,sBAAQ,KAAK,0CAA0C;mBAClD;AACL,mBAAK,YAAY,eAAe;AAChC,kBAAI;AAAgB,+BAAe,QAAQ,OAAO;;AAEpD;;UAEF,KAAK,MAAM;AACT,gBAAI;AAAQ,qBAAO,QAAQ,OAAO,EAAE,KAAK,CAAC,MAAM,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC;;AACpE,qBAAO,KAAK,KAAK,IAAI,EAAE,IAAI;AAChC;;UAEF,KAAK,MAAM;AACT,gBAAI;AAAQ,qBAAO,QAAQ,OAAO;AAClC;;;AAIJ,YAAI,CAAC,KAAK,YAAY,cAAc;AAElC;;AAGF,YAAI,QAAQ,OAAO,UAAa,QAAQ,OAAO,QAAQ,CAAC,KAAK,YAAY,cAAc,QAAQ,EAAE,GAAG;AAElG;;AAEF,cAAM,EAAE,OAAO,WAAW,WAAU,IAAK,KAAK,YAAY,cAAc,QAAQ,EAAE;AAElF,gBAAQ,QAAQ,MAAM;UACpB,KAAK,MAAM;AACT,gBAAI,CAAC,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,MAAM;AACnD,yBAAW,QAAQ,WAAW,KAAK,QAAQ,QAAQ,IAAI;;AAEzD,gBAAI,QAAQ,QAAQ,QAAQ;AAC1B,yBAAW,SACT,WAAW,MAAM,IAAI,YAAY,EAAE,GAAG,QAAQ,SAAS,QAAQ,IAAG,GAAI,EAAE,OAAO,UAAS,CAAE,CAAC;mBACxF;;AAEP;;UAGF,KAAK,OAAO;AACV,uBAAW,SACT,WAAW,MACT,IAAI,YAAY,EAAE,QAAQ,QAAQ,SAAS,QAAQ,IAAG,GAAI,EAAE,OAAO,UAAS,CAAE,CAAC;AAEnF;;UAGF,KAAK,UAAU;AACb,uBAAW,YAAY,WAAW,SAAQ;AAC1C,mBAAO,KAAK,YAAY,cAAc,QAAQ,EAAE;AAChD;;;eAGGC,IAAG;AAEV,gBAAQ,MAAMA,EAAC;AACf,eAAO,MAAM,IAAI;;AAEnB,aAAO,MAAM,MAAM,6BAA6B;IAClD,CAAC;EACH;EAEQ,cACN,OACA,eACA,YACA,WAAa;AAEb,UAAM,kBAAkB,KAAK,YAAY,iBAAiB,SAAQ;AAClE,SAAK,YAAY,cAAc,cAAc,IAAI,EAAE,OAAO,WAAW,WAAU;AAC/E,SAAK,OAAO,KAAK,UAAU,gBAAgB,EAAE,OAAO,eAAe,UAAS,CAAE,EAAE,IAAI;AACpF,WAAO,MAAK;AACV,WAAK,OAAO,KAAK,SAAS,cAAc,EAAE,IAAI;AAC9C,aAAO,KAAK,YAAY,cAAc,cAAc;IACtD;EACF;EAEA,WACE,OACA,WAAa;AAEb,WAAO,IAAI,QAAyE,CAAC,SAAS,WAAU;AACtG,UAAI;AACJ,WAAK,aACH,OACA;QACE,MAAM,CAAC,MAAS,eAAmB,SAAS,EAAE,MAAM,WAAU;QAC9D,OAAO;QACP,UAAU,MAAM,QAAQ,MAAM;SAEhC,SAAS;IAEb,CAAC;EACH;EAEA,QAAkD,UAA2B,WAAa;AACxF,WAAO,IAAI,QAAW,CAAC,SAAS,WAAU;AACxC,UAAI;AACJ,WAAK,UACH,UACA;QACE,MAAM,CAAC,SAAa,SAAS;QAC7B,OAAO;QACP,UAAU,MAAM,QAAQ,MAAM;SAEhC,SAAS;IAEb,CAAC;EACH;EAEA,UACE,UACA,YACA,WAAa;AAEb,UAAM,EAAE,OAAO,cAAa,IAAK,uBAAuB,QAAQ;AAChE,WAAO,KAAK,cAAc,OAAO,eAAe,YAAY,SAAS;EACvE;EAEA,aACE,OACA,YACA,WAAa;AAEb,WAAO,KAAK,cAAc,OAAO,QAAW,YAAY,SAAS;EACnE;EAEA,KAAK,SAAkB;AACrB,SAAK,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;EACrC;EAEA,QAAK;AACH,SAAK,OAAO,MAAM,GAAI;EACxB;;AArKO,uBAAA,WAAW;AA0KpB,SAAS,aAAsB,MAAcC,KAAyB,CAAC,MAAM,GAAC;AAC5E,QAAM,IAAI,wBAAwB,MAAS,MAAMA,EAAC;AAClD,SAAO;AACT;AAEA,SAAS,eAAkB,SAAW;AACpC,SAAO,IAAI,wBAAwB,iBAAiB,OAAO;AAC7D;AAEA,SAAS,KAAK,SAAY;AACxB,SAAO,IAAI,wBAAwB,MAAM,SAAS,MAAS;AAC7D;AACA,SAAS,KAAK,SAAY;AACxB,SAAO,IAAI,wBAAwB,MAAM,SAAS,MAAS;AAC7D;AAEA,SAAS,UAAU,IAAY,SAAyB;AACtD,SAAO,IAAI,wBAAwB,WAAW,SAAS,EAAE;AAC3D;AAEA,SAAS,SAAS,IAAU;AAC1B,SAAO,IAAI,wBAAwB,UAAU,QAAW,EAAE;AAC5D;;;AN/OA,IAAM,iBAAiB,CAAC,YAAiE;AACvF,MAAI,WAAmC,CAAA;AACvC,MAAI,SAAS;AACX,QACG,OAAO,YAAY,eAAe,mBAAmB,WACrD,cAAyB,sBAAW,mBAA8B,oBACnE;AACA,iBAAW,6BAA6B,OAAO;eACtC,MAAM,QAAQ,OAAO,GAAG;AACjC,cAAQ,QAAQ,CAAC,CAAC,MAAM,KAAK,MAAK;AAChC,YAAI,QAAQ,UAAU,QAAW;AAC/B,mBAAS,IAAI,IAAI;;MAErB,CAAC;WACI;AACL,iBAAW;;;AAIf,SAAO;AACT;AAKA,IAAM,aAAa,CAAC,QAAwB,IAAI,QAAQ,uBAAuB,GAAG,EAAE,KAAI;AAqBxF,IAAM,qBAAqB,CAAsB,WAA+C;AAC9F,MAAI,CAAC,MAAM,QAAQ,OAAO,KAAK,GAAG;AAChC,UAAMC,WAAU;AAChB,UAAM,SAAmB,CAAC,SAAS,mBAAmB,WAAWA,SAAQ,KAAK,CAAC,CAAC,EAAE;AAElF,QAAI,OAAO,WAAW;AACpB,aAAO,KAAK,aAAa,mBAAmBA,SAAQ,eAAe,UAAUA,SAAQ,SAAS,CAAC,CAAC,EAAE;;AAGpG,QAAIA,SAAQ,eAAe;AACzB,aAAO,KAAK,iBAAiB,mBAAmBA,SAAQ,aAAa,CAAC,EAAE;;AAG1E,WAAO,OAAO,KAAK,GAAG;;AAGxB,MAAI,OAAO,OAAO,cAAc,eAAe,CAAC,MAAM,QAAQ,OAAO,SAAS,GAAG;AAC/E,UAAM,IAAI,MAAM,8DAA8D;;AAIhF,QAAM,UAAU;AAChB,QAAM,UAAU,OAAO,MAAM,OAC3B,CAAC,KAAK,cAAc,UAAS;AAC3B,QAAI,KAAK;MACP,OAAO,WAAW,YAAY;MAC9B,WAAW,QAAQ,YAAY,QAAQ,eAAe,UAAU,QAAQ,UAAU,KAAK,CAAC,IAAI;KAC7F;AACD,WAAO;EACT,GACA,CAAA,CAAE;AAGJ,SAAO,SAAS,mBAAmB,QAAQ,eAAe,UAAU,OAAO,CAAC,CAAC;AAC/E;AAeA,IAAM,0BACJ,CAAC,WACD,OAA4B,WAAgC;AAC1D,QAAM,EAAE,KAAK,OAAO,WAAW,eAAe,OAAAC,QAAO,cAAc,WAAU,IAAK;AAElF,QAAM,UAAU,EAAE,GAAG,OAAO,QAAO;AACnC,MAAI,cAAc;AAClB,MAAI,OAAO;AAEX,MAAI,WAAW,QAAQ;AACrB,WAAO,kBAAkB,OAAO,WAAW,eAAe,aAAa,cAAc;AACrF,QAAI,OAAO,SAAS,UAAU;AAE5B,cAAQ,cAAc,IAAI;;SAEvB;AAEL,kBAAc,mBAAsB;MAClC;MACA;MACA;MACA,gBAAgB,aAAa,kBAAkB;KAChD;;AAGH,QAAM,OAAoB;IACxB;IACA;IACA;IACA,GAAG;;AAGL,MAAI,cAAc;AAClB,MAAI,eAAe;AACnB,MAAI,YAAY;AACd,UAAM,SAAS,MAAM,QAAQ,QAAQ,WAAW,EAAE,GAAG,MAAM,KAAK,eAAe,UAAS,CAAE,CAAC;AAC3F,UAAM,EAAE,KAAK,QAAQ,GAAG,QAAO,IAAK;AACpC,kBAAc;AACd,mBAAe;;AAEjB,MAAI,aAAa;AACf,kBAAc,GAAG,WAAW,IAAI,WAAW;;AAE7C,SAAO,MAAMA,OAAM,aAAa,YAAY;AAC9C;AAKF,IAAM,gBAAN,MAAmB;EACjB,YAAoB,KAA6B,gBAA+B,CAAA,GAAE;AAA9D,SAAA,MAAA;AAA6B,SAAA,gBAAA;AAKjD,SAAA,aAA+B,UAC1B,SACkC;AACrC,YAAM,CAAC,gBAAgB,WAAW,cAAc,IAAI;AACpD,YAAM,oBAAoB,oBAAuB,gBAAgB,WAAW,cAAc;AAE1F,YAAM,EACJ,SACA,OAAAA,SAAQ,WAAAC,SACR,SAAS,QACT,mBACA,oBACA,GAAG,aAAY,IACb,KAAK;AACT,YAAM,EAAE,KAAAC,KAAG,IAAK;AAChB,UAAI,kBAAkB,WAAW,QAAW;AAC1C,qBAAa,SAAS,kBAAkB;;AAG1C,YAAM,EAAE,cAAa,IAAK,uBAAuB,kBAAkB,KAAK;AAExE,aAAO,YAAkB;QACvB,KAAAA;QACA,OAAO,kBAAkB;QACzB,WAAW,kBAAkB;QAC7B,SAAS;UACP,GAAG,eAAe,eAAe,OAAO,CAAC;UACzC,GAAG,eAAe,kBAAkB,cAAc;;QAEpD;QACA,OAAAF;QACA;QACA;QACA,YAAY;OACb,EACE,KAAK,CAAC,aAAY;AACjB,YAAI,oBAAoB;AACtB,6BAAmB,QAAQ;;AAE7B,eAAO;MACT,CAAC,EACA,MAAM,CAAC,UAAS;AACf,YAAI,oBAAoB;AACtB,6BAAmB,KAAK;;AAE1B,cAAM;MACR,CAAC;IACL;EApDqF;EA8DrF,MAAM,QACJ,sBACG,4BAA6D;AAEhE,UAAM,CAAC,WAAW,cAAc,IAAI;AACpC,UAAM,iBAAiB,iBAAiB,mBAAmB,WAAW,cAAc;AAEpF,UAAM,EACJ,SACA,OAAAA,SAAQ,WAAAC,SACR,SAAS,QACT,mBACA,oBACA,GAAG,aAAY,IACb,KAAK;AACT,UAAM,EAAE,IAAG,IAAK;AAChB,QAAI,eAAe,WAAW,QAAW;AACvC,mBAAa,SAAS,eAAe;;AAGvC,UAAM,EAAE,OAAO,cAAa,IAAK,uBAAuB,eAAe,QAAQ;AAE/E,WAAO,YAAe;MACpB;MACA;MACA,WAAW,eAAe;MAC1B,SAAS;QACP,GAAG,eAAe,eAAe,OAAO,CAAC;QACzC,GAAG,eAAe,eAAe,cAAc;;MAEjD;MACA,OAAAD;MACA;MACA;MACA,YAAY;KACb,EACE,KAAK,CAAC,aAAY;AACjB,UAAI,oBAAoB;AACtB,2BAAmB,QAAQ;;AAE7B,aAAO,SAAS;IAClB,CAAC,EACA,MAAM,CAAC,UAAS;AACf,UAAI,oBAAoB;AACtB,2BAAmB,KAAK;;AAE1B,YAAM;IACR,CAAC;EACL;;EAUA,cAAsE,oBAAyE,gBAA4C;AACzL,UAAM,sBAAsB,sBAAyB,oBAAoB,cAAc;AACvF,UAAM,EAAE,SAAS,GAAG,aAAY,IAAK,KAAK;AAE1C,QAAI,oBAAoB,WAAW,QAAW;AAC5C,mBAAa,SAAS,oBAAoB;;AAG5C,UAAM,UAAU,oBAAoB,UAAU,IAC5C,CAAC,EAAE,SAAQ,MAAO,uBAAuB,QAAQ,EAAE,KAAK;AAE1D,UAAM,YAAY,oBAAoB,UAAU,IAAI,CAAC,EAAE,WAAAG,WAAS,MAAOA,UAAS;AAEhF,WAAO,YAAe;MACpB,KAAK,KAAK;MACV,OAAO;;MAEP;MACA,SAAS;QACP,GAAG,eAAe,eAAe,OAAO,CAAC;QACzC,GAAG,eAAe,oBAAoB,cAAc;;MAEtD,eAAe;MACf,OAAO,KAAK,cAAc,SAAS,WAAAF;MACnC,QAAQ,KAAK,cAAc,UAAU;MACrC;MACA,YAAY,KAAK,cAAc;KAChC,EACE,KAAK,CAAC,aAAY;AACjB,UAAI,KAAK,cAAc,oBAAoB;AACzC,aAAK,cAAc,mBAAmB,QAAQ;;AAEhD,aAAO,SAAS;IAClB,CAAC,EACA,MAAM,CAAC,UAAS;AACf,UAAI,KAAK,cAAc,oBAAoB;AACzC,aAAK,cAAc,mBAAmB,KAAK;;AAE7C,YAAM;IACR,CAAC;EACL;EAEA,WAAW,SAAoC;AAC7C,SAAK,cAAc,UAAU;AAC7B,WAAO;EACT;;;;EAKA,UAAU,KAAa,OAAa;AAClC,UAAM,EAAE,QAAO,IAAK,KAAK;AAEzB,QAAI,SAAS;AAGX,cAAQ,GAAG,IAAI;WACV;AACL,WAAK,cAAc,UAAU,EAAE,CAAC,GAAG,GAAG,MAAK;;AAG7C,WAAO;EACT;;;;EAKA,YAAY,OAAa;AACvB,SAAK,MAAM;AACX,WAAO;EACT;;AAGF,IAAM,cAAc,OAAqD,WAUjC;AACtC,QAAM,EAAE,OAAO,WAAW,aAAY,IAAK;AAC3C,QAAM,UAAU,wBAAwB,UAAU,OAAO,UAAU,MAAM,CAAC;AAC1E,QAAM,kBAAkB,MAAM,QAAQ,OAAO,KAAK;AAClD,QAAM,WAAW,MAAM,QAAQ,MAAM;AACrC,QAAM,SAAS,MAAM,UAAU,UAAU,aAAa,kBAAkB,qBAAqB;AAE7F,QAAM,2BAA2B,MAAM,QAAQ,MAAM,IACjD,CAAC,OAAO,KAAK,CAAC,EAAE,KAAI,MAAO,CAAC,IAAI,IAChC,QAAQ,OAAO,IAAI;AAEvB,QAAM,gCACJ,MAAM,QAAQ,MAAM,KACpB,CAAC,OAAO,UACP,MAAM,QAAQ,OAAO,MAAM,KAAK,CAAC,OAAO,OAAO,UAChD,aAAa,gBAAgB,SAC7B,aAAa,gBAAgB;AAE/B,MAAI,SAAS,MAAM,iCAAiC,0BAA0B;AAE5E,UAAM,EAAE,QAAQ,GAAG,GAAG,KAAI,IAAK,MAAM,QAAQ,MAAM,IAAI,SAAS;AAChE,UAAM,OAAO,aAAa,gBAAgB,WAAW,OAAO;AAC5D,UAAM,eAAe,kBAAkB,EAAE,KAAI,IAAK;AAGlD,WAAO;MACL,GAAG;MACH,SAAS,SAAS;MAClB,QAAQ,SAAS;;SAEd;AACL,UAAM,cACJ,OAAO,WAAW,WACd;MACE,OAAO;QAET;AACN,UAAM,IAAI;;MAER,EAAE,GAAG,aAAa,QAAQ,SAAS,QAAQ,SAAS,SAAS,QAAO;MACpE,EAAE,OAAO,UAAS;IAAE;;AAG1B;AA6JA,IAAM,oBAAoB,CACxB,OACA,WACA,eACA,mBACU;AACV,QAAM,kBAAkB,kBAAkB;AAC1C,MAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,WAAO,gBAAgB,UAAU,EAAE,OAAO,WAAW,cAAa,CAAE;;AAGtE,MAAI,OAAO,cAAc,eAAe,CAAC,MAAM,QAAQ,SAAS,GAAG;AACjE,UAAM,IAAI,MAAM,qEAAqE;;AAIvF,QAAM,UAAU,MAAM,OACpB,CAAC,KAAK,cAAc,UAAS;AAC3B,QAAI,KAAK,EAAE,OAAO,cAAc,WAAW,YAAY,UAAU,KAAK,IAAI,OAAS,CAAE;AACrF,WAAO;EACT,GACA,CAAA,CAAE;AAGJ,SAAO,gBAAgB,UAAU,OAAO;AAC1C;AAEA,IAAM,YAAY,OAChB,UACA,mBAME;AACF,MAAI;AAEJ,WAAS,QAAQ,QAAQ,CAAC,OAAO,QAAO;AACtC,QAAI,IAAI,YAAW,MAAO,gBAAgB;AACxC,oBAAc;;EAElB,CAAC;AAED,MACE,gBACC,YAAY,YAAW,EAAG,WAAW,kBAAkB,KACtD,YAAY,YAAW,EAAG,WAAW,0BAA0B,KAC/D,YAAY,YAAW,EAAG,WAAW,mCAAmC,IAC1E;AACA,WAAO,eAAe,MAAM,MAAM,SAAS,KAAI,CAAE;SAC5C;AACL,WAAO,SAAS,KAAI;;AAExB;AAEA,IAAM,iBAAiB,CAAI,UAAuB;AAChD,SAAO,OAAO,UAAU,aAAc,MAAiB,IAAK;AAC9D;;;AjBtoBA,IAAIG,aAAY,OAAO;AACvB,IAAI,aAAa,OAAO;AACxB,IAAI,oBAAoB,OAAO;AAC/B,IAAIC,uBAAsB,OAAO;AACjC,IAAIC,gBAAe,OAAO,UAAU;AACpC,IAAIC,gBAAe,OAAO,UAAU;AACpC,IAAIC,mBAAkB,CAAC,KAAK,KAAK,UAAU,OAAO,MAAMJ,WAAU,KAAK,KAAK,EAAE,YAAY,MAAM,cAAc,MAAM,UAAU,MAAM,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI;AAC1J,IAAIK,kBAAiB,CAAC,GAAG,MAAM;AAC7B,WAAS,QAAQ,MAAM,IAAI,CAAC;AAC1B,QAAIH,cAAa,KAAK,GAAG,IAAI;AAC3B,MAAAE,iBAAgB,GAAG,MAAM,EAAE,IAAI,CAAC;AACpC,MAAIH;AACF,aAAS,QAAQA,qBAAoB,CAAC,GAAG;AACvC,UAAIE,cAAa,KAAK,GAAG,IAAI;AAC3B,QAAAC,iBAAgB,GAAG,MAAM,EAAE,IAAI,CAAC;AAAA,IACpC;AACF,SAAO;AACT;AACA,IAAI,gBAAgB,CAAC,GAAG,MAAM,WAAW,GAAG,kBAAkB,CAAC,CAAC;AAGhE,IAAI,uCAAuC,CAAC,WAAW;AACrD,SAAO,oBAAoB;AAC7B;AACA,IAAI,yBAAyB,CAAC,SAAS;AACrC,SAAO;AAAA,IACL,UAAU,KAAK;AAAA,IACf,KAAK,KAAK;AAAA,IACV,kBAAkB,KAAK;AAAA,IACvB,iBAAiB,KAAK,QAAQ;AAAA,IAC9B,eAAe,KAAK;AAAA,EACtB;AACF;AACA,IAAI,mCAAmC,CAAC,SAAS;AAC/C,SAAO;AAAA,IACL,UAAU,KAAK;AAAA,IACf,KAAK,KAAK;AAAA,IACV,kBAAkB,KAAK;AAAA,IACvB,mBAAmB,KAAK,QAAQ;AAAA,IAChC,gBAAgB,KAAK,QAAQ;AAAA,IAC7B,eAAe,KAAK;AAAA,EACtB;AACF;AACA,IAAI,sBAAsB,CAAC,WAAW;AACpC,SAAO,aAAa,OAAO;AAC7B;AACA,IAAI,oBAAoB,CAAC,WAAW;AAClC,SAAO,oBAAoB,MAAM,IAAI,iCAAiC,MAAM,IAAI,uBAAuB,MAAM;AAC/G;AACA,IAAI,SAAS,CAAC,QAAQ;AACpB,UAAQ,KAAK;AAAA,IACX,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,EACX;AACF;AAGA,IAAI,iBAAiB,CAAC,SAAS;AAC7B,SAAO,SAAS,UAAU,SAAS;AACrC;AAGA,IAAI,oBAAoB,CAAC,kBAAkB;AACzC,MAAI,kBAAkB,MAAM;AAC1B,WAAO;AAAA,EACT;AACA,SAAO,KAAK,UAAU,aAAa;AACrC;AAGA,IAAI,cAAc,CAAC,KAAK,UAAU;AAChC,QAAM,QAAQ,IAAI,IAAI,GAAG;AACzB,SAAO,MAAM,WAAW,MAAM,QAAQ,MAAM,MAAM,CAAC,OAAO,OAAO,UAAU,MAAM,IAAI,GAAG,EAAE,CAAC;AAC7F;AAGA,IAAI,oBAAoB,CAAC,cAAc;AACrC,SAAO,CAAC,MAAM,YAAY,WAAW;AACnC,QAAI,WAAW,SAAS,SAAS;AAC/B,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,UAAI,WAAW,QAAQ,MAAM;AAC3B,cAAM,IAAI,MAAM,8BAA8B,IAAI,UAAU;AAAA,MAC9D;AACA,YAAM,eAAe,OAAO,WAAW,GAAG;AAC1C,UAAI,UAAU,YAAY,GAAG;AAC3B,eAAO;AAAA,MACT,OAAO;AACL,cAAM,IAAI,MAAM,8BAA8B,IAAI,KAAK,YAAY,EAAE;AAAA,MACvE;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAI,mBAAmB;AAAA,EACrB,CAAC,SAAS;AACR,WAAO,OAAO,SAAS;AAAA,EACzB;AACF;AACA,IAAI,mBAAmB;AAAA,EACrB,CAAC,SAAS;AACR,WAAO,OAAO,SAAS,YAAY,CAAC,OAAO,MAAM,IAAI;AAAA,EACvD;AACF;AACA,IAAI,wBAAwB;AAAA,EAC1B,CAAC,SAAS;AACR,WAAO,MAAM,QAAQ,IAAI,KAAK,KAAK,MAAM,CAAC,YAAY,OAAO,YAAY,QAAQ;AAAA,EACnF;AACF;AACA,IAAI,4BAA4B;AAAA,EAC9B,CAAC,SAAS;AACR,WAAO,MAAM,QAAQ,IAAI,KAAK,KAAK;AAAA,MACjC,CAAC,YAAY,OAAO,YAAY,YAAY,OAAO,QAAQ,SAAS,YAAY,OAAO,QAAQ,UAAU,YAAY,CAAC,OAAO,MAAM,QAAQ,KAAK;AAAA,IAClJ;AAAA,EACF;AACF;AAGA,IAAI,yBAAyB,OAAO,SAAS,YAAY,YAAY;AACnE,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,QAAM,SAAS,WAAW,OAAO,SAAS,QAAQ;AAAA,IAChD,CAAC,OAAO,OAAO,UAAU,GAAG,SAAS;AAAA,EACvC;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,uCAAuC;AAAA,EACzD;AACA,SAAO;AACT;AACA,IAAI,qBAAqB,OAAO,SAAS,WAAW,WAAW;AAC7D,QAAM,UAAU;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,QAAM,cAAc;AAAA,IAClB,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,QAAM,WAAW,WAAW,OAAO,SAAS,QAAQ;AAAA,IAClD,CAAC,OAAO,OAAO,UAAU,GAAG,SAAS,mBAAmB,GAAG,sBAAsB,WAAW,GAAG,sBAAsB;AAAA,EACvH;AACA,MAAI,aAAa,QAAQ;AACvB,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM,QAAQ,aAAa;AAAA,IAChD,MAAM;AAAA,IACN,mBAAmB;AAAA,IACnB,mBAAmB;AAAA,EACrB,CAAC;AACD,QAAM,SAAS,eAAe;AAC9B,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,SAAO;AACT;AACA,IAAI,wBAAwB,OAAO,SAAS,WAAW,WAAW;AAChE,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,QAAM,UAAU;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,QAAM,WAAW,QAAQ;AAAA,IACvB,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,eAAe,GAAG,sBAAsB;AAAA,EACtF;AACA,MAAI,aAAa,QAAQ;AACvB,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM,QAAQ,aAAa;AAAA,IAChD,MAAM;AAAA,IACN,mBAAmB;AAAA,EACrB,CAAC;AACD,QAAM,SAAS,eAAe;AAC9B,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,SAAO;AACT;AACA,IAAI,0BAA0B,OAAO,SAAS,YAAY,YAAY;AACpE,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,QAAM,SAAS,WAAW,OAAO,SAAS,QAAQ,KAAK,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,aAAa;AAChH,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,sDAAsD;AAAA,EACxE;AACA,SAAO;AACT;AACA,IAAI,2BAA2B,OAAO,SAAS,WAAW,YAAY;AACpE,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,QAAM,UAAU,CAAC;AACjB,QAAM,kBAAkB,IAAI,IAAI,UAAU,QAAQ;AAClD,UAAQ,QAAQ,CAAC,aAAa;AAC5B,SAAK,YAAY,OAAO,SAAS,SAAS,UAAU,sBAAsB;AACxE,sBAAgB,OAAO,SAAS,iBAAiB;AACjD,cAAQ,KAAK,QAAQ;AAAA,IACvB;AAAA,EACF,CAAC;AACD,MAAI,gBAAgB,OAAO,GAAG;AAC5B,QAAI,sBAAsB,QAAQ,QAAQ;AAC1C,oBAAgB,QAAQ,CAAC,YAAY;AACnC,4BAAsB,oBAAoB,KAAK,YAAY;AACzD,cAAM,SAAS,MAAM,QAAQ,aAAa;AAAA,UACxC,MAAM;AAAA,UACN,mBAAmB;AAAA,QACrB,CAAC;AACD,cAAM,SAAS,OAAO;AACtB,YAAI,WAAW,QAAQ;AACrB,kBAAQ,KAAK,MAAM;AAAA,QACrB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,UAAM;AAAA,EACR;AACA,SAAO;AACT;AACA,IAAI,6BAA6B,OAAO,SAAS,YAAY,YAAY;AACvE,QAAM,wBAAwB,MAAM,QAAQ,oBAAoB,CAAC,CAAC;AAClE,QAAM,mBAAmB,sBAAsB;AAC/C,MAAI,CAAC,kBAAkB;AACrB,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACrD;AACA,QAAM,yBAAyB,iBAAiB,IAAI,CAAC,OAAO;AAC1D,QAAI;AACJ,UAAM,cAAc,CAAC,WAAW;AAC9B,cAAQ,QAAQ;AAAA,QACd,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT;AACE,gBAAM,IAAI,MAAM,wBAAwB;AAAA,MAC5C;AAAA,IACF,GAAG,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAC5C,UAAM,iBAAiB,KAAK,MAAM,OAAO,SAAS,GAAG,YAAY,OAAO,KAAK;AAC7E,WAAO;AAAA,MACL,MAAM,GAAG,UAAU,IAAI,aAAa;AAAA,MACpC,mBAAmB;AAAA,MACnB,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACD,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,QAAM,WAAW,uBAAuB,IAAI,OAAO,0BAA0B;AAC3E,UAAM,QAAQ,QAAQ;AAAA,MACpB,CAAC,YAAY,UAAU,OAAO,SAAS,OAAO,UAAU,sBAAsB;AAAA,IAChF;AACA,QAAI,OAAO;AACT,aAAO;AAAA,IACT;AACA,UAAM,EAAE,cAAc,UAAU,IAAI,MAAM,QAAQ;AAAA,MAChD;AAAA,IACF;AACA,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,oBAAoB,sBAAsB,IAAI,SAAS;AAAA,IACzE;AACA,WAAO;AAAA,EACT,CAAC;AACD,QAAM,iBAAiB,MAAM,QAAQ,IAAI,QAAQ;AACjD,SAAO;AACT;AACA,IAAI,yBAAyB,CAAC,YAAY,sBAAsB;AAC9D,UAAQ,YAAY;AAAA,IAClB,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,mBAAmB,iBAAiB;AAAA,IAC7C;AACE,aAAO;AAAA,EACX;AACF;AACA,IAAI,qBAAqB,CAAC,UAAU;AAClC,MAAI,SAAS;AACb,MAAI,UAAU,IAAI;AAChB,aAAS,MAAM,YAAY;AAC3B,QAAI,CAAC,OAAO,WAAW,IAAI,GAAG;AAC5B,eAAS,OAAO;AAAA,IAClB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAI,sBAAsB,OAAO,SAAS,WAAW,WAAW;AAC9D,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,QAAM,UAAU;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,QAAM,gBAAgB,uBAAuB,UAAU,YAAY,OAAO;AAC1E,QAAM,WAAW,QAAQ;AAAA,IACvB,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,UAAU,cAAc,GAAG,sBAAsB;AAAA,EAC/F;AACA,MAAI,aAAa,QAAQ;AACvB,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM,QAAQ,aAAa;AAAA,IAChD,MAAM,UAAU;AAAA,IAChB,mBAAmB;AAAA,EACrB,CAAC;AACD,QAAM,SAAS,eAAe;AAC9B,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,SAAO;AACT;AACA,IAAI,oBAAoB,OAAO,SAAS,WAAW,WAAW;AAC5D,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,QAAM,aAAa;AAAA,IACjB,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,QAAM,mBAAmB,WAAW,IAAI,CAAC,WAAW;AAAA,IAClD,MAAM;AAAA,IACN,mBAAmB;AAAA,IACnB,MAAM;AAAA,EACR,EAAE;AACF,QAAM,WAAW,iBAAiB,IAAI,OAAO,WAAW;AACtD,UAAM,QAAQ,QAAQ;AAAA,MACpB,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,UAAU,GAAG,SAAS,OAAO;AAAA,IAC3E;AACA,QAAI,OAAO;AACT,aAAO;AAAA,IACT;AACA,UAAM,EAAE,cAAc,UAAU,IAAI,MAAM,QAAQ,aAAa,MAAM;AACrE,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,WAAO;AAAA,EACT,CAAC;AACD,QAAM,iBAAiB,MAAM,QAAQ,IAAI,QAAQ;AACjD,SAAO;AACT;AACA,IAAI,2BAA2B,OAAO,SAAS,YAAY,YAAY;AACrE,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,QAAM,SAAS,WAAW,OAAO,SAAS,QAAQ,KAAK,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,aAAa;AAChH,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,sDAAsD;AAAA,EACxE;AACA,SAAO;AACT;AACA,IAAI,yCAAyC,OAAO,SAAS,WAAW,YAAY;AAClF,QAAM,eAAe,MAAM,QAAQ,WAAW,CAAC,CAAC;AAChD,QAAM,UAAU,aAAa;AAC7B,QAAM,SAAS,WAAW,OAAO,SAAS,QAAQ,KAAK,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU,aAAa;AAChH,MAAI,QAAQ;AACV,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM,QAAQ,aAAa;AAAA,IAChD,MAAM,UAAU;AAAA,IAChB,mBAAmB;AAAA,EACrB,CAAC;AACD,QAAM,YAAY,eAAe;AACjC,MAAI,cAAc,QAAQ;AACxB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,SAAO;AACT;AACA,IAAI,gBAAgB,OAAO,SAAS,WAAW,WAAW;AACxD,UAAQ,UAAU,MAAM;AAAA,IACtB,KAAK,cAAc;AACjB,YAAM,SAAS,MAAM,uBAAuB,SAAS,WAAW,MAAM;AACtE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,aAAa;AAChB,YAAM,SAAS,MAAM,sBAAsB,SAAS,WAAW,MAAM;AACrE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,SAAS,MAAM,wBAAwB,SAAS,WAAW,MAAM;AACvE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,UAAU,MAAM;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA,IACA,KAAK,iBAAiB;AACpB,YAAM,UAAU,MAAM;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA,IACA,KAAK,UAAU;AACb,YAAM,SAAS,MAAM,oBAAoB,SAAS,WAAW,MAAM;AACnE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,QAAQ;AACX,YAAM,UAAU,MAAM,kBAAkB,SAAS,WAAW,MAAM;AAClE,aAAO;AAAA,IACT;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,SAAS,MAAM,yBAAyB,SAAS,WAAW,MAAM;AACxE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK;AAAA,IACL,KAAK,UAAU;AACb,YAAM,SAAS,MAAM,mBAAmB,SAAS,WAAW,MAAM;AAClE,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,6BAA6B;AAChC,YAAM,SAAS,MAAM;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,aAAO,CAAC,MAAM;AAAA,IAChB;AAAA,IACA,KAAK,SAAS;AACZ,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAAA,EACF;AACF;AACA,IAAI,oBAAoB,OAAO,SAAS,MAAM,cAAc;AAC1D,MAAI,IAAI;AACR,QAAM,oBAAoB,MAAM,QAAQ,gBAAgB,CAAC,CAAC;AAC1D,QAAM,YAAY,KAAK,kBAAkB,gBAAgB,OAAO,SAAS,GAAG;AAAA,IAC1E,CAAC,OAAO,OAAO,UAAU,GAAG,SAAS;AAAA,EACvC;AACA,MAAI,aAAa,QAAQ;AACvB,UAAM,iBAAiB,MAAM,QAAQ,kBAAkB;AAAA,MACrD;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,eAAe,eAAe;AACpC,QAAI,iBAAiB,QAAQ;AAC3B,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AACA,MAAI,YAAY,YAAY,KAAK,SAAS,YAAY,OAAO,KAAK,CAAC,CAAC,GAAG;AACrE,WAAO;AAAA,EACT;AACA,QAAM,iBAAiB,MAAM,QAAQ,kBAAkB;AAAA,IACrD,IAAI,SAAS;AAAA,IACb;AAAA,IACA;AAAA,EACF,CAAC;AACD,QAAM,eAAe,eAAe;AACpC,MAAI,iBAAiB,QAAQ;AAC3B,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACjD;AACA,SAAO;AACT;AACA,IAAI,sBAAsB,CAAC,QAAQ,WAAW,WAAW;AACvD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,QAAM,OAAO,iBAAiB,UAAU,MAAM,UAAU,cAAc,MAAM;AAC5E,QAAM,gBAAgB;AAAA,IACpB,mBAAmB;AAAA,EACrB;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AACA,IAAI,qBAAqB,CAAC,QAAQ,YAAY,YAAY;AACxD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe,CAAC;AAAA,EAClB;AACF;AACA,IAAI,6BAA6B,CAAC,WAAW;AAC3C,MAAI,OAAO,OAAO,cAAc,YAAY,OAAO,OAAO,UAAU,YAAY,OAAO,OAAO,SAAS,UAAU;AAC/G,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,IAAI,uBAAuB,CAAC,QAAQ,WAAW,WAAW;AACxD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,wDAAwD;AAAA,EAC1E;AACA,QAAM,eAAe;AAAA,IACnB,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,MAAI,aAAa,WAAW;AAC1B,UAAM,IAAI,MAAM,wBAAwB;AAC1C,QAAM,cAAc,2BAA2B,MAAM,IAAI,OAAO,OAAO,aAAa,CAAC;AACrF,QAAM,QAAQ,2BAA2B,MAAM,IAAI,OAAO,MAAM,QAAQ,CAAC,IAAI;AAC7E,SAAO;AAAA,IACL;AAAA,IACA,eAAe;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,QACN,KAAK;AAAA,UACH;AAAA,YACE,KAAK;AAAA,YACL,IAAI,OAAO,cAAc,UAAU,OAAO;AAAA,YAC1C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAI,uBAAuB,CAAC,SAAS,YAAY,YAAY;AAC3D,QAAM,SAAS,QAAQ,QAAQ,CAAC,OAAO;AACrC,QAAI;AACJ,YAAQ,KAAK,GAAG,sBAAsB,OAAO,KAAK,CAAC;AAAA,EACrD,CAAC,EAAE,KAAK,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB,0BAA0B;AACpF,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe,CAAC;AAAA,EAClB;AACF;AACA,IAAI,+BAA+B,CAAC,QAAQ,YAAY,YAAY;AAClE,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe,CAAC;AAAA,EAClB;AACF;AACA,IAAI,wBAAwB,CAAC,QAAQ,WAAW,WAAW;AACzD,MAAI,IAAI;AACR,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA,MAAI,gBAAgB,CAAC;AACrB,MAAI,UAAU,mBAAmB,YAAY,UAAU,mBAAmB,mBAAmB;AAC3F,QAAI,UAAU,mBAAmB,QAAQ;AACvC,sBAAgB;AAAA,QACd,gBAAgB,UAAU;AAAA,MAC5B;AAAA,IACF;AAAA,EACF,WAAW,UAAU,mBAAmB,gBAAgB;AACtD,UAAM,iBAAiB,GAAG,UAAU,IAAI;AACxC,QAAI,CAAC,OAAO,cAAc,GAAG;AAC3B,aAAO,GAAG,UAAU,IAAI,eAAe,IAAI,UAAU,YAAY,CAAC,EAAE;AAAA,IACtE;AACA,UAAM,cAAc;AAAA,MAClB;AAAA,MACA,EAAE,MAAM,OAAO,KAAK,eAAe;AAAA,MACnC;AAAA,IACF;AACA,UAAM,wBAAwB,GAAG,UAAU,IAAI;AAC/C,QAAI,CAAC,OAAO,qBAAqB,GAAG;AAClC,aAAO,qBAAqB,IAAI,UAAU,YAAY,CAAC,EAAE,SAAS,UAAU,UAAU;AAAA,IACxF;AACA,UAAM,sBAAsB,KAAK;AAAA,MAC/B;AAAA,MACA,EAAE,MAAM,OAAO,KAAK,sBAAsB;AAAA,MAC1C;AAAA,IACF,MAAM,OAAO,KAAK,UAAU,YAAY,CAAC,EAAE;AAC3C,QAAI,CAAC,eAAe,CAAC,oBAAoB;AACvC,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAChE;AACA,oBAAgB;AAAA,MACd,gBAAgB,UAAU;AAAA,MAC1B,WAAW,UAAU,eAAe,eAAe,cAAc,MAAM;AAAA,MACvE,oBAAoB,uBAAuB,UAAU,UAAU;AAAA,IACjE;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AACA,IAAI,yBAAyB,CAAC,WAAW,WAAW;AAClD,MAAI,IAAI;AACR,UAAQ,UAAU,gBAAgB;AAAA,IAChC,KAAK;AACH,aAAO,UAAU;AAAA,IACnB,KAAK,gBAAgB;AACnB,YAAM,iBAAiB,GAAG,UAAU,IAAI;AACxC,YAAM,eAAe,KAAK;AAAA,QACxB;AAAA,QACA,EAAE,MAAM,OAAO,KAAK,eAAe;AAAA,QACnC;AAAA,MACF,MAAM,OAAO,KAAK,UAAU,YAAY,CAAC,EAAE;AAC3C,YAAM,wBAAwB,GAAG,UAAU,IAAI;AAC/C,YAAM,sBAAsB,KAAK;AAAA,QAC/B;AAAA,QACA,EAAE,MAAM,OAAO,KAAK,sBAAsB;AAAA,QAC1C;AAAA,MACF,MAAM,OAAO,KAAK,UAAU,YAAY,CAAC,EAAE;AAC3C,UAAI,CAAC,eAAe,CAAC,oBAAoB;AACvC,cAAM,IAAI,MAAM,8CAA8C;AAAA,MAChE;AACA,aAAO;AAAA,QACL,gBAAgB,UAAU;AAAA,QAC1B,WAAW,UAAU,eAAe,eAAe,cAAc,MAAM;AAAA,QACvE,oBAAoB,uBAAuB,UAAU,UAAU;AAAA,MACjE;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAI,kBAAkB,CAAC,QAAQ,WAAW,WAAW;AACnD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB,UAAU;AAAA,EAC9D;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe,uBAAuB,WAAW,MAAM;AAAA,EACzD;AACF;AACA,IAAI,gBAAgB,CAAC,QAAQ,YAAY,YAAY;AACnD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,iCAAiC;AAAA,EACnD;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe,CAAC;AAAA,EAClB;AACF;AACA,IAAI,qCAAqC,CAAC,QAAQ,WAAW,YAAY;AACvE,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,sDAAsD;AAAA,EACxE;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe;AAAA,MACb,gBAAgB,UAAU;AAAA,IAC5B;AAAA,EACF;AACF;AACA,IAAI,yBAAyB,CAAC,WAAW;AACvC,MAAI,WAAW,QAAQ;AACrB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,IAAI,uBAAuB,CAAC,QAAQ,WAAW,WAAW;AACxD,MAAI;AACJ,QAAM,UAAU,KAAK,OAAO,sBAAsB,OAAO,SAAS,GAAG;AAAA,IACnE,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,gBAAgB;AAAA,EACpD;AACA,MAAI,WAAW,QAAQ;AACrB,UAAM,IAAI,MAAM,wCAAwC;AAAA,EAC1D;AACA,QAAM,cAAc;AAAA,IAClB,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,EACF;AACA,MAAI,YAAY,YAAY,CAAC,EAAE;AAC/B,MAAI,qBAAqB,YAAY,CAAC,EAAE;AACxC,QAAM,oCAAoC,CAAC,YAAY;AACrD,QAAI,sBAAsB,WAAW,wBAAwB,SAAS;AACpE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACA,MAAI,uBAAuB,MAAM,GAAG;AAClC,gBAAY,YAAY,OAAO,KAAK,EAAE;AACtC,yBAAqB,YAAY,OAAO,KAAK,EAAE;AAAA,EACjD,WAAW,kCAAkC,MAAM,GAAG;AACpD,gBAAY,OAAO;AACnB,yBAAqB,OAAO;AAAA,EAC9B;AACA,SAAO;AAAA,IACL;AAAA,IACA,eAAe;AAAA,MACb,gBAAgB,UAAU;AAAA,MAC1B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAI,yBAAyB,OAAO,SAAS,WAAW,WAAW;AACjE,QAAM,UAAU,MAAM,cAAc,SAAS,WAAW,MAAM;AAC9D,QAAM,cAAc,MAAM;AAAA,IACxB;AAAA,IACA,UAAU;AAAA,IACV,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE;AAAA,EAC3B;AACA,UAAQ,UAAU,MAAM;AAAA,IACtB,KAAK,cAAc;AACjB,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,aAAa;AAChB,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,eAAe;AAClB,UAAI,CAAC,2BAA2B,MAAM,GAAG;AACvC,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAC9C;AACA,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,UAAU;AACb,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,QAAQ;AACX,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,SAAS;AACZ,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAAA,IACA,KAAK,iBAAiB;AACpB,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK;AAAA,IACL,KAAK,UAAU;AACb,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK,6BAA6B;AAChC,YAAM,EAAE,QAAQ,cAAc,IAAI;AAAA,QAChC,QAAQ,CAAC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAI,eAAe,CAAC,QAAQE,QAAO,UAAU,mBAAmB;AAC9D,SAAO,OAAO,SAAS,UAAU;AAC/B,QAAI,UAAU,QAAQ;AACpB,aAAO;AAAA,IACT;AACA,UAAM,WAAW,MAAMA,OAAM,OAAO;AACpC,UAAM,mBAAmB,mBAAmB,SAAS,eAAe,KAAK,IAAI;AAC7E,UAAM,QAAQ,YAAY,OAAO,SAAS,SAAS,KAAK,CAAC,OAAO,SAAS,EAAE,MAAM,gBAAgB;AACjG,QAAI,UAAU,QAAQ;AACpB,aAAO,MAAM;AAAA,IACf;AACA,UAAM,UAAU,MAAM,OAAO,SAAS,gBAAgB;AACtD,WAAO,QAAQ;AAAA,EACjB;AACF;AACA,IAAI,cAAc;AAAA,EAChB,OAAO,SAAS,UAAU;AACxB,UAAM,WAAW,MAAM,QAAQ,kBAAkB;AAAA,MAC/C,MAAM,MAAM,YAAY;AAAA,MACxB,OAAO,MAAM,YAAY;AAAA,IAC3B,CAAC;AACD,UAAM,SAAS,SAAS;AACxB,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY;AACjB,UAAM,QAAQ,MAAM,QAAQ,gBAAgB,CAAC,CAAC;AAC9C,WAAO,MAAM;AAAA,EACf;AAAA,EACA,CAAC,QAAQ;AACP,QAAI;AACJ,YAAQ,KAAK,OAAO,OAAO,SAAS,IAAI,iBAAiB,OAAO,SAAS,GAAG,YAAY;AAAA,EAC1F;AAAA,EACA,CAAC,UAAU,MAAM,YAAY;AAC/B;AACA,IAAI,YAAY;AAAA,EACd,OAAO,SAAS,UAAU;AACxB,UAAM,WAAW,MAAM,QAAQ,gBAAgB;AAAA,MAC7C,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,UAAM,SAAS,SAAS;AACxB,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY;AACjB,UAAM,QAAQ,MAAM,QAAQ,cAAc,CAAC,CAAC;AAC5C,WAAO,MAAM;AAAA,EACf;AAAA,EACA,CAAC,QAAQ,OAAO,OAAO,SAAS,IAAI;AACtC;AACA,IAAI,iBAAiB;AAAA,EACnB,OAAO,SAAS,UAAU;AACxB,UAAM,WAAW,MAAM,QAAQ,qBAAqB;AAAA,MAClD,MAAM,MAAM,YAAY;AAAA,MACxB,OAAO,MAAM,YAAY;AAAA,IAC3B,CAAC;AACD,UAAM,SAAS,SAAS;AACxB,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY;AACjB,UAAM,QAAQ,MAAM,QAAQ,mBAAmB,CAAC,CAAC;AACjD,WAAO,MAAM;AAAA,EACf;AAAA,EACA,CAAC,QAAQ;AACP,QAAI;AACJ,YAAQ,KAAK,OAAO,OAAO,SAAS,IAAI,eAAe,OAAO,SAAS,GAAG,YAAY;AAAA,EACxF;AAAA,EACA,CAAC,UAAU,MAAM,YAAY;AAC/B;AACA,IAAI,gBAAgB;AAAA,EAClB,OAAO,SAAS,UAAU;AACxB,UAAM,WAAW,MAAM,QAAQ,oBAAoB;AAAA,MACjD,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,UAAM,SAAS,SAAS;AACxB,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY;AACjB,UAAM,QAAQ,MAAM,QAAQ,kBAAkB,CAAC,CAAC;AAChD,WAAO,MAAM;AAAA,EACf;AAAA,EACA,CAAC,QAAQ,OAAO,OAAO,SAAS,IAAI;AAAA,EACpC,MAAM;AACR;AACA,IAAI,gBAAgB,OAAO,SAAS,WAAW;AAC7C,MAAI,WAAW,QAAQ;AACrB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,MAAM,QAAQ,kBAAkB,CAAC,CAAC;AAChD,QAAM,WAAW,MAAM;AACvB,QAAM,QAAQ,YAAY,OAAO,SAAS,SAAS;AAAA,IACjD,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,IAAI,YAAY,OAAO,OAAO,IAAI,YAAY,MAAM,MAAM,OAAO,SAAS,GAAG,YAAY,OAAO;AAAA,EACpI;AACA,MAAI,UAAU,QAAQ;AACpB,WAAO,MAAM;AAAA,EACf;AACA,QAAM,WAAW,MAAM,QAAQ,oBAAoB,cAAcD,gBAAe,CAAC,GAAG,MAAM,GAAG;AAAA,IAC3F,MAAM,OAAO,IAAI,YAAY;AAAA,IAC7B,KAAK,OAAO,IAAI,YAAY;AAAA,EAC9B,CAAC,CAAC;AACF,QAAM,UAAU,SAAS;AACzB,MAAI,YAAY,QAAQ;AACtB,UAAM,IAAI,MAAM,iCAAiC;AAAA,EACnD;AACA,SAAO,QAAQ;AACjB;AAGA,IAAI,eAAe,CAAC,QAAQ;AAC1B,UAAQ,KAAK;AAAA,IACX,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,EACX;AACF;AACA,IAAI,8BAA8B,CAAC,WAAW;AAC5C,MAAI,YAAY,GAAG,aAAa,OAAO,GAAG,CAAC,IAAI,OAAO,QAAQ,IAAI,OAAO,gBAAgB;AACzF,MAAI,qCAAqC,MAAM,GAAG;AAChD,iBAAa,IAAI,OAAO,cAAc,IAAI,OAAO,iBAAiB;AAAA,EACpE,OAAO;AACL,iBAAa,IAAI,OAAO,eAAe;AAAA,EACzC;AACA,QAAM,iBAAiB,CAAC;AACxB,QAAM,gBAAgB;AAAA,IACpB,KAAK,CAAC,QAAQ;AACZ,YAAM,SAAS,GAAG,SAAS,IAAI,GAAG;AAClC,UAAI,SAAS;AACb,UAAI,UAAU,gBAAgB;AAC5B,cAAM,OAAO,eAAe,MAAM;AAClC,iBAAS,KAAK,MAAM,IAAI;AAAA,MAC1B;AACA,aAAO,QAAQ,QAAQ,MAAM;AAAA,IAC/B;AAAA,IACA,KAAK,CAAC,KAAK,aAAa;AACtB,YAAM,SAAS,GAAG,SAAS,IAAI,GAAG;AAClC,UAAI,aAAa,MAAM;AACrB,eAAO,eAAe,MAAM;AAAA,MAC9B,OAAO;AACL,uBAAe,MAAM,IAAI,KAAK,UAAU,QAAQ;AAAA,MAClD;AACA,aAAO,QAAQ,QAAQ;AAAA,IACzB;AAAA,IACA,KAAK,CAAC,QAAQ;AACZ,YAAM,SAAS,GAAG,SAAS,IAAI,GAAG;AAClC,aAAO,QAAQ,QAAQ,UAAU,cAAc;AAAA,IACjD;AAAA,EACF;AACA,SAAO;AACT;AAGA,IAAI,oBAAoB;AACxB,IAAI,YAAY;AAChB,IAAI,wBAAwB,MAAM;AAAA,EAChC,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,QAAQ,IAAI,iBAAiB;AAAA,EAC3C;AAAA,EACA,iBAAiB,UAAU;AACzB,WAAO,KAAK,QAAQ,IAAI,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,QAAQ,IAAI,iBAAiB;AAAA,EAC3C;AAAA,EACA,WAAW;AACT,WAAO,KAAK,QAAQ,IAAI,SAAS;AAAA,EACnC;AAAA,EACA,SAAS,UAAU;AACjB,WAAO,KAAK,QAAQ,IAAI,WAAW,QAAQ;AAAA,EAC7C;AAAA,EACA,WAAW;AACT,WAAO,KAAK,QAAQ,IAAI,SAAS;AAAA,EACnC;AACF;AAIA,mBAAAE,QAAY,OAAO;AAAA,EACjB,MAAM;AACR,CAAC;AACD,IAAI,gBAAgB,CAAC,QAAQ;AAC3B,UAAQ,KAAK;AAAA,IACX,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,EACX;AACF;AACA,IAAI,iCAAiC,CAAC,WAAW;AAC/C,MAAI,YAAY,GAAG,cAAc,OAAO,GAAG,CAAC,IAAI,OAAO,QAAQ,IAAI,OAAO,gBAAgB;AAC1F,MAAI,qCAAqC,MAAM,GAAG;AAChD,iBAAa,IAAI,OAAO,cAAc,IAAI,OAAO,iBAAiB;AAAA,EACpE,OAAO;AACL,iBAAa,IAAI,OAAO,eAAe;AAAA,EACzC;AACA,QAAM,gBAAgB;AAAA,IACpB,KAAK,OAAO,QAAQ;AAClB,YAAM,OAAO,MAAM,mBAAAA,QAAY,QAAQ,GAAG,SAAS,IAAI,GAAG,EAAE;AAC5D,aAAO;AAAA,IACT;AAAA,IACA,KAAK,OAAO,KAAK,aAAa;AAC5B,YAAM,mBAAAA,QAAY,QAAQ,GAAG,SAAS,IAAI,GAAG,IAAI,QAAQ;AAAA,IAC3D;AAAA,IACA,KAAK,OAAO,QAAQ;AAClB,YAAM,OAAO,MAAM,mBAAAA,QAAY,KAAK;AACpC,aAAO,KAAK,QAAQ,GAAG,SAAS,IAAI,GAAG,EAAE,KAAK;AAAA,IAChD;AAAA,EACF;AACA,SAAO;AACT;AAGA,IAAI,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWtB,IAAI,uBAAuB,MAAM;AAAA,EAC/B,YAAY,gBAAgB,UAAU,UAAU;AAC9C,SAAK,iBAAiB;AACtB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,aAAa;AACjB,UAAM,CAAC,qBAAqB,KAAK,IAAI,MAAM,QAAQ,IAAI;AAAA,MACrD,KAAK,SAAS,iBAAiB;AAAA,MAC/B,KAAK,SAAS,SAAS;AAAA,IACzB,CAAC;AACD,QAAI,gBAAgB;AACpB,QAAI,kBAAkB,MAAM;AAC1B,WAAK,SAAS,OAAO,MAAM;AAC3B,YAAM,eAAe;AAAA,QACnB,QAAQ;AAAA,MACV;AACA,WAAK,aAAa;AAClB,aAAO;AAAA,IACT;AACA,UAAM,aAAa,IAAI,KAAK,cAAc,MAAM;AAChD,UAAM,MAAsB,oBAAI,KAAK;AACrC,QAAI,cAAc,KAAK;AACrB,WAAK,SAAS,OAAO,MAAM;AAC3B,YAAM,gBAAgB;AAAA,QACpB,QAAQ;AAAA,QACR;AAAA,MACF;AACA,WAAK,aAAa;AAClB,aAAO;AAAA,IACT;AACA,UAAM,cAA8B,oBAAI,KAAK;AAC7C,gBAAY,QAAQ,IAAI,QAAQ,IAAI,CAAC;AACrC,QAAI,aAAa,aAAa;AAC5B,UAAI;AACF,cAAM,kBAAkB,MAAM,KAAK,SAAS,qBAAqB,CAAC,CAAC;AACnE,cAAM,mBAAmB,gBAAgB;AACzC,YAAI,qBAAqB,QAAQ;AAC/B,eAAK,SAAS,iBAAiB,gBAAgB;AAC/C,0BAAgB;AAAA,QAClB;AAAA,MACF,SAAS,GAAG;AACV,gBAAQ,IAAI,kCAAkC,CAAC;AAAA,MACjD;AAAA,IACF;AACA,SAAK,SAAS,OAAO,cAAc,KAAK;AACxC,UAAM,YAAY;AAAA,MAChB,QAAQ;AAAA,MACR;AAAA,MACA,OAAO,SAAS,OAAO,QAAQ,CAAC;AAAA,IAClC;AACA,SAAK,aAAa;AAClB,WAAO;AAAA,EACT;AAAA,EACA,MAAM,SAAS;AACb,UAAM,QAAQ,IAAI;AAAA,MAChB,KAAK,SAAS,iBAAiB,IAAI;AAAA,MACnC,KAAK,SAAS,SAAS,IAAI;AAAA,MAC3B,KAAK,SAAS,OAAO;AAAA,IACvB,CAAC;AACD,WAAO;AAAA,MACL,QAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,MAAM,MAAM,mBAAmB;AAC7B,UAAM,YAAY,KAAK,MAAM,KAAK,IAAI,IAAI,GAAG;AAC7C,UAAM,YAAY,MAAM,KAAK,aAAa;AAAA,MACxC;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,EAAE,UAAU,iBAAiB,IAAI,KAAK;AAC5C,QAAI,cAAc;AAClB,YAAQ,kBAAkB;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,UAAU;AACb,cAAM,SAAS,MAAM,KAAK,SAAS,cAAc;AAAA,UAC/C;AAAA,UACA,iBAAiB,KAAK,eAAe;AAAA,UACrC,aAAa;AAAA,UACb;AAAA,UACA;AAAA,QACF,CAAC;AACD,sBAAc,OAAO;AACrB;AAAA,MACF;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,SAAS;AACZ,cAAM,SAAS,MAAM,KAAK,SAAS,cAAc;AAAA,UAC/C;AAAA,UACA,iBAAiB,KAAK,eAAe;AAAA,UACrC,WAAW,KAAK,eAAe;AAAA,UAC/B,aAAa;AAAA,UACb;AAAA,UACA;AAAA,QACF,CAAC;AACD,sBAAc,OAAO;AACrB;AAAA,MACF;AAAA,IACF;AACA,QAAI,gBAAgB,QAAQ;AAC1B,aAAO,QAAQ,OAAO,iBAAiB;AAAA,IACzC;AACA,UAAM,KAAK,mBAAmB,WAAW;AACzC,WAAO;AAAA,EACT;AAAA,EACA,MAAM,aAAa;AAAA,IACjB;AAAA,IACA;AAAA,EACF,GAAG;AACD,QAAI,KAAK,eAAe,qBAAqB,kBAAkB,kBAAkB;AAC/E,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AACA,YAAQ,kBAAkB,kBAAkB;AAAA,MAC1C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,YAAY;AACf,cAAM,EAAE,iBAAiB,SAAS,IAAI,KAAK;AAC3C,cAAM,gBAAgB,IAAI,YAAY,EAAE;AAAA,UACtC,GAAG,eAAe,GAAG,eAAe,GAAG,QAAQ,GAAG,UAAU,SAAS,CAAC;AAAA,QACxE;AACA,cAAM,eAAe,MAAM,kBAAkB,YAAY,aAAa;AACtE,cAAM,YAAY;AAAA,UAChB,qBAAO,KAAK,YAAY,EAAE,SAAS,KAAK;AAAA,QAC1C;AACA,eAAO;AAAA,MACT;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,aAAa;AAChB,cAAM,EAAE,mBAAmB,SAAS,IAAI,KAAK;AAC7C,cAAM,gBAAgB,IAAI,YAAY,EAAE;AAAA,UACtC,GAAG,eAAe,GAAG,iBAAiB,GAAG,QAAQ,GAAG,UAAU,SAAS,CAAC;AAAA,QAC1E;AACA,cAAM,eAAe,MAAM,kBAAkB,YAAY,aAAa;AACtE,cAAM,YAAY,qBAAO,KAAK,YAAY,EAAE,SAAS,QAAQ;AAC7D,eAAO;AAAA,MACT;AAAA,MACA,KAAK,UAAU;AACb,cAAM,EAAE,iBAAiB,SAAS,IAAI,KAAK;AAC3C,cAAM,gBAAgB,IAAI,YAAY,EAAE;AAAA,UACtC,GAAG,eAAe,GAAG,eAAe,GAAG,QAAQ,GAAG,UAAU,SAAS,CAAC;AAAA,QACxE;AACA,cAAM,eAAe,MAAM,kBAAkB,YAAY,aAAa;AACtE,cAAM,YAAY,qBAAO,KAAK,YAAY,EAAE,SAAS,QAAQ;AAC7D,eAAO;AAAA,MACT;AAAA,MACA,KAAK,SAAS;AACZ,cAAM,EAAE,gBAAgB,SAAS,IAAI,KAAK;AAC1C,cAAM,UAAU,GAAG,eAAe,GAAG,cAAc,GAAG,QAAQ,GAAG,UAAU,SAAS,CAAC;AACrF,cAAM,eAAe,MAAM,kBAAkB;AAAA,UAC3C;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MACA,KAAK,SAAS;AACZ,cAAM,YAAY,MAAM,kBAAkB;AAAA,UACxC;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MACA,KAAK,OAAO;AACV,cAAM,EAAE,gBAAgB,SAAS,IAAI,KAAK;AAC1C,cAAM,gBAAgB,IAAI,YAAY,EAAE;AAAA,UACtC,GAAG,eAAe,GAAG,cAAc,GAAG,QAAQ,GAAG,UAAU,SAAS,CAAC;AAAA,QACvE;AACA,cAAM,eAAe,MAAM,kBAAkB,YAAY,aAAa;AACtE,cAAM,YAAY,aAAa,SAAS;AACxC,eAAO;AAAA,MACT;AAAA,MACA,KAAK,QAAQ;AACX,cAAM,EAAE,mBAAmB,gBAAgB,SAAS,IAAI,KAAK;AAC7D,cAAM,UAAU,GAAG,aAAa,iBAAiB,GAAG,QAAQ,GAAG,cAAc,GAAG,UAAU,SAAS,CAAC;AACpG,cAAM,eAAe,IAAI,YAAY,EAAE,OAAO,OAAO;AACrD,cAAM,aAAa,MAAM,OAAO,OAAO,OAAO;AAAA,UAC5C;AAAA,UACA;AAAA,QACF;AACA,cAAM,gBAAgB,IAAI,WAAW,UAAU;AAC/C,cAAM,eAAe,MAAM,kBAAkB,YAAY,aAAa;AACtE,cAAM,YAAY,qBAAO,KAAK,YAAY,EAAE,SAAS,QAAQ;AAC7D,eAAO;AAAA,MACT;AAAA,MACA;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAAA,EACA,MAAM,mBAAmB,MAAM;AAC7B,UAAM,gBAAgB,QAAQ,OAAO,SAAS,KAAK;AACnD,UAAM,2BAA2B,kBAAkB,SAAS,KAAK,SAAS,iBAAiB,aAAa,IAAI,QAAQ,QAAQ;AAC5H,UAAM,QAAQ,QAAQ,OAAO,SAAS,KAAK;AAC3C,UAAM,mBAAmB,UAAU,SAAS,KAAK,SAAS,SAAS,MAAM,OAAO,cAAc,CAAC,IAAI,QAAQ,QAAQ;AACnH,QAAI,iBAAiB,OAAO;AAC1B,YAAM,YAAY;AAAA,QAChB,QAAQ;AAAA,QACR;AAAA,QACA,OAAO,MAAM,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI;AAAA,MACtC;AACA,WAAK,aAAa;AAAA,IACpB;AACA,UAAM,QAAQ,IAAI,CAAC,0BAA0B,gBAAgB,CAAC;AAAA,EAChE;AAAA,EACA,MAAM,YAAY;AAChB,WAAO,KAAK,SAAS,UAAU,CAAC,CAAC;AAAA,EACnC;AAAA,EACA,MAAM,yBAAyB;AAAA,IAC7B;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAM,EAAE,SAAS,IAAI,KAAK;AAC1B,UAAM,SAAS,MAAM,KAAK,SAAS,wBAAwB;AAAA,MACzD;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACf,CAAC;AACD,UAAM,QAAQ,OAAO,wBAAwB;AAC7C,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,UAAM,QAAQ,OAAO,WAAW;AAChC,SAAK,oBAAoB;AACzB,UAAM,UAAU,IAAI,YAAY;AAChC,UAAM,OAAO,QAAQ,OAAO,QAAQ,KAAK;AACzC,UAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,UAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,UAAM,WAAW,oBAAoB,UAAU,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAClG,WAAO,EAAE,OAAO,SAAS;AAAA,EAC3B;AAAA,EACA,MAAM,4BAA4B;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAM,EAAE,SAAS,IAAI,KAAK;AAC1B,UAAM,mBAAmB,KAAK;AAC9B,SAAK,oBAAoB;AACzB,QAAI,qBAAqB,MAAM;AAC7B,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AACA,UAAM,SAAS,MAAM,KAAK,SAAS,2BAA2B;AAAA,MAC5D;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,MACZ;AAAA,IACF,CAAC;AACD,UAAM,KAAK,mBAAmB,OAAO,0BAA0B;AAC/D,WAAO;AAAA,EACT;AAAA,EACA,MAAM,kBAAkB;AACtB,QAAI,IAAI;AACR,UAAM,QAAQ,MAAM,KAAK,SAAS,gBAAgB,CAAC,CAAC;AACpD,UAAM,WAAW,MAAM,KAAK,MAAM,gBAAgB,OAAO,SAAS,GAAG,OAAO,cAAc,MAAM,OAAO,KAAK,CAAC;AAC7G,WAAO;AAAA,EACT;AAAA,EACA,MAAM,kBAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,QAAI;AACJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,MAAM,QAAQ,IAAI;AAAA,MACpB,KAAK,SAAS,gBAAgB,CAAC,CAAC;AAAA,MAChC,YAAY,KAAK,UAAU,YAAY;AAAA,MACvC,UAAU,KAAK,UAAU,WAAW;AAAA,MACpC,eAAe,KAAK,UAAU,UAAU;AAAA,MACxC,cAAc,KAAK,UAAU,OAAO;AAAA,MACpC,cAAc,KAAK,UAAU,SAAS;AAAA,IACxC,CAAC;AACD,UAAM,iBAAiB,kBAAkB,SAAS,CAAC,IAAI,CAAC,aAAa;AACrE,UAAM,eAAe,gBAAgB,SAAS,CAAC,IAAI,CAAC,WAAW;AAC/D,UAAM,oBAAoB,qBAAqB,SAAS,CAAC,IAAI,CAAC,gBAAgB;AAC9E,UAAM,mBAAmB,oBAAoB,SAAS,CAAC,IAAI,CAAC,eAAe;AAC3E,UAAM,mBAAmB,oBAAoB,SAAS,CAAC,IAAI,CAAC,eAAe;AAC3E,UAAM,YAAY,KAAK,kBAAkB,gBAAgB,OAAO,SAAS,GAAG;AAAA,MAC1E,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU;AAAA,IAC9C;AACA,QAAI,aAAa,QAAQ;AACvB,aAAO,KAAK,mBAAmB;AAAA,QAC7B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AACA,UAAM,iBAAiB,MAAM,KAAK,SAAS,kBAAkB;AAAA,MAC3D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,QAAI,eAAe,sBAAsB,QAAQ;AAC/C,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO,eAAe;AAAA,EACxB;AAAA,EACA,MAAM,mBAAmB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,QAAI,YAAY,iBAAiB,KAAK,SAAS,iBAAiB,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,eAAe,KAAK,SAAS,eAAe,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,oBAAoB,KAAK,SAAS,oBAAoB,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,mBAAmB,KAAK,SAAS,mBAAmB,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,mBAAmB,KAAK,SAAS,mBAAmB,OAAO,KAAK,CAAC,CAAC,GAAG;AACrZ,aAAO;AAAA,IACT;AACA,UAAM,iBAAiB,MAAM,KAAK,SAAS,kBAAkB;AAAA,MAC3D,IAAI,SAAS;AAAA,MACb,OAAO,KAAK,SAAS,SAAS,OAAO,KAAK,SAAS;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,UAAU,eAAe;AAC/B,QAAI,YAAY,QAAQ;AACtB,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,kBAAkB;AACtB,QAAI,IAAI;AACR,UAAM,QAAQ,MAAM,KAAK,SAAS,gBAAgB,CAAC,CAAC;AACpD,UAAM,WAAW,MAAM,KAAK,MAAM,gBAAgB,OAAO,SAAS,GAAG,OAAO,cAAc,MAAM,OAAO,KAAK,CAAC;AAC7G,WAAO;AAAA,EACT;AAAA,EACA,MAAM,YAAY;AAChB,QAAI,IAAI;AACR,UAAM,QAAQ,MAAM,KAAK,SAAS,UAAU,CAAC,CAAC;AAC9C,YAAQ,MAAM,KAAK,MAAM,UAAU,OAAO,SAAS,GAAG,OAAO,cAAc,MAAM,OAAO,KAAK,CAAC;AAAA,EAChG;AAAA,EACA,MAAM,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,IACA,kBAAkB;AAAA,EACpB,GAAG;AACD,QAAI,IAAI;AACR,UAAM,CAAC,aAAa,mBAAmB,gBAAgB,IAAI,MAAM,QAAQ,IAAI;AAAA,MAC3E,KAAK,SAAS,UAAU,CAAC,CAAC;AAAA,MAC1B,KAAK,SAAS,gBAAgB,CAAC,CAAC;AAAA,MAChC,uBAAuB,KAAK,UAAU,WAAW,MAAM;AAAA,IACzD,CAAC;AACD,UAAM,eAAe,KAAK,kBAAkB,gBAAgB,OAAO,SAAS,GAAG;AAAA,MAC7E,CAAC,QAAQ,MAAM,OAAO,SAAS,GAAG,UAAU;AAAA,IAC9C;AACA,QAAI,gBAAgB,QAAQ;AAC1B,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AACA,UAAM,EAAE,aAAa,QAAQ,cAAc,IAAI;AAC/C,UAAM,gBAAgB,kBAAkB,aAAa;AACrD,UAAM,YAAY,KAAK,YAAY,UAAU,OAAO,SAAS,GAAG;AAAA,MAC9D,CAAC,OAAO,OAAO,UAAU,GAAG,SAAS,UAAU;AAAA,IACjD;AACA,QAAI,aAAa,QAAQ;AACvB,UAAI,SAAS,YAAY,OAAO,YAAY,MAAM,SAAS,YAAY,OAAO,YAAY,MAAM,SAAS,OAAO,OAAO,OAAO,MAAM,SAAS,kBAAkB,eAAe;AAC5K,eAAO;AAAA,MACT;AACA,YAAM,KAAK,YAAY;AAAA,QACrB,IAAI,SAAS;AAAA,MACf,CAAC;AAAA,IACH;AACA,UAAM,WAAW,MAAM,KAAK,SAAS,YAAY;AAAA,MAC/C,MAAM,UAAU;AAAA,MAChB,eAAe,YAAY;AAAA,MAC3B,UAAU,OAAO;AAAA,MACjB,eAAe,YAAY;AAAA,MAC3B,eAAe;AAAA,MACf,WAAW;AAAA,IACb,CAAC;AACD,UAAM,UAAU,SAAS;AACzB,QAAI,YAAY,QAAQ;AACtB,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,YAAY;AAAA,IAChB;AAAA,EACF,GAAG;AACD,QAAI;AACJ,UAAM,WAAW,MAAM,KAAK,SAAS,YAAY,EAAE,GAAG,CAAC;AACvD,UAAM,UAAU,KAAK,SAAS,gBAAgB,OAAO,SAAS,GAAG;AACjE,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,MAAM,gBAAgB;AACpB,UAAM,sBAAsB;AAAA,MAC1B,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AACA,UAAM,SAAS,MAAM;AAAA,MACnB,KAAK;AAAA,MACL;AAAA,MACA,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,uBAAuB,WAAW;AACtC,QAAI,IAAI;AACR,UAAM,QAAQ,MAAM,KAAK,SAAS,uBAAuB,SAAS;AAClE,UAAM,SAAS,KAAK,MAAM,wBAAwB,OAAO,SAAS,GAAG;AACrE,UAAM,YAAY,KAAK,MAAM,wBAAwB,OAAO,SAAS,GAAG;AACxE,QAAI,UAAU,UAAU,aAAa,QAAQ;AAC3C,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,WAAO,EAAE,UAAU,MAAM;AAAA,EAC3B;AAAA,EACA,MAAM,oCAAoC;AACxC,UAAM,QAAQ,MAAM,KAAK,SAAS,kCAAkC,CAAC,CAAC;AACtE,UAAM,SAAS,MAAM;AACrB,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACrE;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,kBAAkB;AACtB,UAAM,QAAQ,MAAM,KAAK,SAAS,gBAAgB,CAAC,CAAC;AACpD,UAAM,SAAS,MAAM;AACrB,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,6BAA6B,WAAW;AAC5C,QAAI,IAAI;AACR,UAAM,QAAQ,MAAM,KAAK,SAAS,6BAA6B,SAAS;AACxE,UAAM,SAAS,KAAK,MAAM,8BAA8B,OAAO,SAAS,GAAG;AAC3E,UAAM,YAAY,KAAK,MAAM,8BAA8B,OAAO,SAAS,GAAG;AAC9E,QAAI,UAAU,UAAU,aAAa,QAAQ;AAC3C,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,WAAO,EAAE,UAAU,MAAM;AAAA,EAC3B;AAAA,EACA,MAAM,sBAAsB,WAAW;AACrC,UAAM,QAAQ,MAAM,KAAK,SAAS,iBAAiB;AAAA,MACjD,OAAO,cAAcF,gBAAe,CAAC,GAAG,SAAS,GAAG;AAAA,QAClD,QAAQ,KAAK,eAAe;AAAA,MAC9B,CAAC;AAAA,IACH,CAAC;AACD,UAAM,SAAS,MAAM;AACrB,QAAI,WAAW,QAAQ;AACrB,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,UAAM,QAAQ,OAAO;AACrB,QAAI,UAAU,QAAQ;AACpB,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AACA,UAAM,MAAM,KAAK,MAAM,KAAK;AAC5B,QAAI,OAAO;AACX,YAAQ,IAAI,SAAS;AAAA,MACnB,KAAK,MAAM;AACT,eAAO;AACP;AAAA,MACF;AAAA,MACA,KAAK,cAAc;AACjB,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAI,SAAS,QAAQ;AACnB,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,kBAAkB,QAAQ;AAC9B,QAAI;AACJ,UAAM,OAAO,MAAM,KAAK,SAAS,iBAAiB;AAClD,UAAM,QAAQ,MAAM,KAAK,SAAS,SAAS;AAC3C,UAAM,WAAW,KAAK,OAAO,kBAAkB,OAAO,SAAS,GAAG,gBAAgB,aAAa,4BAA4B,MAAM,IAAI,+BAA+B,MAAM;AAC1K,UAAM,eAAe,IAAI,sBAAsB,MAAM;AACrD,UAAM,QAAQ,IAAI;AAAA,MAChB,aAAa,iBAAiB,IAAI;AAAA,MAClC,aAAa,SAAS,KAAK;AAAA,IAC7B,CAAC;AAAA,EACH;AAAA,EACA,MAAM,4BAA4B;AAAA,IAChC;AAAA,EACF,GAAG;AACD,QAAI;AACJ,UAAM,cAAc,MAAM,KAAK,SAAS,mCAAmC;AAAA,MACzE;AAAA,IACF,CAAC;AACD,UAAM,MAAM,KAAK,YAAY,uCAAuC,OAAO,SAAS,GAAG;AACvF,QAAI,OAAO,QAAQ;AACjB,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,gBAAgB,QAAQ;AAC5B,UAAM,EAAE,kBAAkB,aAAa,gBAAgB,IAAI,OAAO;AAClE,UAAM,oBAAoB;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AACA,QAAI,KAAK,cAAc,KAAK,WAAW,WAAW,iBAAiB;AACjE,YAAM,KAAK,MAAM,iBAAiB;AAAA,IACpC;AACA,UAAM,YAAY,KAAK,MAAM,KAAK,IAAI,IAAI,GAAG;AAC7C,UAAM,YAAY,MAAM,KAAK,aAAa;AAAA,MACxC;AAAA,MACA;AAAA,IACF,CAAC;AACD,UAAM,kBAAkB,MAAM,KAAK,SAAS,cAAc;AAAA,MACxD;AAAA,MACA;AAAA,MACA,WAAW,qBAAqB,WAAW,qBAAqB,WAAW,qBAAqB,UAAU,qBAAqB,QAAQ,OAAO,aAAa,iBAAiB;AAAA,MAC5K;AAAA,MACA;AAAA,MACA,0CAA0C,OAAO;AAAA,IACnD,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,MAAM,wBAAwB,OAAO;AACnC,UAAM,QAAQ,MAAM,KAAK,SAAS,wBAAwB,KAAK;AAC/D,WAAO;AAAA,EACT;AAAA,EACA,MAAM,yBAAyB,OAAO;AACpC,UAAM,WAAW,MAAM,KAAK,SAAS,yBAAyB,KAAK;AACnE,WAAO;AAAA,EACT;AAAA,EACA,MAAM,0BAA0B,OAAO;AACrC,UAAM,WAAW,MAAM,KAAK,SAAS,0BAA0B,KAAK;AACpE,WAAO;AAAA,EACT;AAAA,EACA,MAAM,oBAAoB,OAAO;AAC/B,UAAM,WAAW,MAAM,KAAK,SAAS,oBAAoB;AAAA,MACvD,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AACD,WAAO,SAAS;AAAA,EAClB;AAAA,EACA,MAAM,oCAAoC,OAAO;AAC/C,UAAM,WAAW,MAAM,KAAK,SAAS;AAAA,MACnC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,mBAAmB,OAAO;AAC9B,UAAM,WAAW,MAAM,KAAK,SAAS,mBAAmB,KAAK;AAC7D,WAAO;AAAA,EACT;AACF;AAKA,IAAI,mBAAmB,CAAC,WAAW;AACjC,MAAI;AACJ,QAAM,WAAW,KAAK,OAAO,kBAAkB,OAAO,SAAS,GAAG,gBAAgB,aAAa,4BAA4B,MAAM,IAAI,+BAA+B,MAAM;AAC1K,SAAO,IAAI,sBAAsB,MAAM;AACzC;AACA,IAAI,mBAAmB,CAAC,WAAW;AACjC,QAAM,MAAM,OAAO,OAAO,GAAG;AAC7B,QAAM,SAAS,IAAI,cAAc,GAAG;AACpC,SAAO,IAAI,cAAc,MAAM;AACjC;AACA,IAAI,oBAAoB,CAAC,SAAS;AAChC,QAAM,SAAS,kBAAkB,IAAI;AACrC,QAAM,UAAU,iBAAiB,MAAM;AACvC,QAAM,UAAU,iBAAiB,MAAM;AACvC,SAAO,IAAI,qBAAqB,QAAQ,SAAS,OAAO;AAC1D;AAGA,IAAI,yBAAyB;AAAA,EAC3B,iBAAiB;AAAA,EACjB,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,mBAAmB;AACrB;",
  "names": ["f", "define", "module", "exports", "o", "e", "n", "Promise", "self", "i", "key", "length", "idb", "forage", "value", "err", "keys", "db", "t", "error", "resolve", "reject", "sameValue", "includes", "LocalForage", "configureMissingMethods", "methodNotImplementedFactory", "promise", "setDriverSupport", "supportedDrivers", "parse", "version", "operationName", "f", "e", "f", "params_", "fetch", "crossFetch", "url", "variables", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "fetch", "localforage"]
}
