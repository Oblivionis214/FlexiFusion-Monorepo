{
  "version": 3,
  "sources": ["../../@notifi-network/notifi-react-hooks/lib/utils/alertUtils.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/types/GqlError.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/dist/types/AxiosCreate.js", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/dist/types/AxiosPost.js", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/types/index.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/utils/axiosRequest.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/utils/collectDependencies.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/utils/notifiConfigs.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/utils/index.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-utils/lib/index.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/ensureSource.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/ensureSourceGroup.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/ensureTarget.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/ensureTargetGroup.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/ensureTargetIds.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/fetchDataImpl.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/packFilterOptions.ts", "../../@notifi-network/notifi-react-hooks/lib/utils/storage.ts", "../../@notifi-network/notifi-react-hooks/lib/hooks/useNotifiConfig.ts", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/bind.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/utils.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/buildURL.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/InterceptorManager.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/enhanceError.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/defaults/transitional.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/createError.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/settle.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/cookies.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/combineURLs.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/buildFullPath.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/parseHeaders.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/cancel/Cancel.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/adapters/xhr.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/defaults/index.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/transformData.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/cancel/isCancel.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/dispatchRequest.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/mergeConfig.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/env/data.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/validator.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/core/Axios.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/cancel/CancelToken.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/spread.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/helpers/isAxiosError.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/lib/axios.js", "../../@notifi-network/notifi-react-hooks/node_modules/axios/index.js", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/filterFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/sourceFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/sourceGroupFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/discordTargetFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/emailTargetFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/smsTargetFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/telegramTargetFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/targetGroupFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/alertFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/authorizationFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/beginLogInByTransactionFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/clientConfigurationFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/userFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/completeLogInByTransactionFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/connectedWalletFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/participantFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/conversationMessageFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/convMessagePageInfoFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/notificationHistoryEntryFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/userTopicFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/webhookTargetFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/fusionNotificationHistoryEntryFragment.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/fragments/index.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/beginLogInByTransaction.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/broadcastMessageImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/completeLogInByTransaction.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/connectWalletImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createAlertImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createDiscordTargetImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createEmailTargetImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createSmsTargetImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createSourceGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createSourceImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createSupportConversationImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createTargetGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createTelegramTargetImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/createWebhookTargetImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/deleteAlertImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/deleteSourceGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/deleteTargetGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/logInFromDappImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/markFusionNotificationHistoryAsRead.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/refreshAuthorizationImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/sendConversationMessagesImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/sendEmailTargetVerificationRequestImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/updateSourceGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/mutations/updateTargetGroupImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/findTenantConfigImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getAlertsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getConfigurationForDappImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getConnectedWalletsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getConversationMessagesImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getDiscordTargetsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getEmailTargetsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getFiltersImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getFusionNotificationHistoryImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getNotificationHistoryImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getSmsTargetsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getSourceGroupsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getSourcesImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getTargetGroupsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getTelegramTargetsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getTopicsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getUnreadNotificationHistoryCountImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/queries/getWebhookTargetsImpl.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/NotifiAxiosService.ts", "../../@notifi-network/notifi-react-hooks/node_modules/@notifi-network/notifi-axios-adapter/lib/index.ts", "../../@notifi-network/notifi-react-hooks/lib/hooks/useNotifiService.ts", "../../@notifi-network/notifi-react-hooks/lib/hooks/useNotifiClient.ts", "../../@notifi-network/notifi-react-hooks/lib/hooks/index.ts", "../../@notifi-network/notifi-react-hooks/lib/index.ts", "../../@notifi-network/notifi-react-card/lib/components/NotifiEmailInput.tsx", "../../@notifi-network/notifi-react-card/lib/assets/EmailIcon.tsx", "../../@notifi-network/notifi-react-card/lib/context/NotifiContext.tsx", "../../@notifi-network/notifi-react-card/lib/context/NotifiClientContext.tsx", "../../@notifi-network/notifi-react-card/lib/context/NotifiFormContext.tsx", "../../@notifi-network/notifi-react-card/lib/context/NotifiSubscriptionContext.tsx", "../../node_modules/libphonenumber-js/metadata.min.json.js", "../../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js", "../../node_modules/libphonenumber-js/source/ParseError.js", "../../node_modules/libphonenumber-js/source/constants.js", "../../node_modules/libphonenumber-js/source/tools/semver-compare.js", "../../node_modules/libphonenumber-js/source/metadata.js", "../../node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js", "../../node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js", "../../node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js", "../../node_modules/libphonenumber-js/source/helpers/parseDigits.js", "../../node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js", "../../node_modules/libphonenumber-js/source/helpers/mergeArrays.js", "../../node_modules/libphonenumber-js/source/helpers/checkNumberLength.js", "../../node_modules/libphonenumber-js/source/isPossible.js", "../../node_modules/libphonenumber-js/source/helpers/RFC3966.js", "../../node_modules/libphonenumber-js/source/helpers/matchesEntirely.js", "../../node_modules/libphonenumber-js/source/helpers/getNumberType.js", "../../node_modules/libphonenumber-js/source/isValid.js", "../../node_modules/libphonenumber-js/source/helpers/getPossibleCountriesForNumber.js", "../../node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js", "../../node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js", "../../node_modules/libphonenumber-js/source/helpers/getIddPrefix.js", "../../node_modules/libphonenumber-js/source/format.js", "../../node_modules/libphonenumber-js/source/PhoneNumber.js", "../../node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js", "../../node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js", "../../node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js", "../../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js", "../../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js", "../../node_modules/libphonenumber-js/source/helpers/getCountryByNationalNumber.js", "../../node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js", "../../node_modules/libphonenumber-js/source/parse.js", "../../node_modules/libphonenumber-js/source/parsePhoneNumberWithError_.js", "../../node_modules/libphonenumber-js/source/normalizeArguments.js", "../../node_modules/libphonenumber-js/source/parsePhoneNumberWithError.js", "../../node_modules/libphonenumber-js/source/parsePhoneNumber_.js", "../../node_modules/libphonenumber-js/source/isValidPhoneNumber.js", "../../node_modules/libphonenumber-js/min/exports/parsePhoneNumberWithError.js", "../../node_modules/libphonenumber-js/min/exports/isValidPhoneNumber.js", "../../@notifi-network/notifi-react-card/lib/hooks/useNotifiSubscribe.ts", "../../@notifi-network/notifi-react-card/lib/utils/stringUtils.ts", "../../@notifi-network/notifi-react-card/lib/utils/walletUtils.ts", "../../@notifi-network/notifi-react-card/lib/hooks/useSubscriptionCard.ts", "../../@notifi-network/notifi-react-card/lib/hooks/useFetchedCardState.ts", "../../@notifi-network/notifi-react-card/lib/hooks/useUnreadState.ts", "../../@notifi-network/notifi-react-card/lib/hooks/useFrontendClientLogin.ts", "../../@notifi-network/notifi-react-card/lib/hooks/useIntercomCardState.ts", "../../@notifi-network/notifi-react-card/lib/context/NotifiDemoPreviewContext.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiFooter.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiDisclosureStatement.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiLogo.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiSmsInput.tsx", "../../@notifi-network/notifi-react-card/lib/assets/SmsIcon.tsx", "../../@notifi-network/notifi-react-card/lib/constants/countryData.tsx", "../../@notifi-network/notifi-react-card/lib/utils/phoneUtils.ts", "../../@notifi-network/notifi-react-card/lib/components/NotifiSmsDropdownOption.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiTelegramInput.tsx", "../../@notifi-network/notifi-react-card/lib/assets/TelegramIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeBroadcastRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/resolveRef.ts", "../../@notifi-network/notifi-react-card/lib/utils/AlertConfiguration.ts", "../../@notifi-network/notifi-react-card/lib/utils/NotificationHistoryUtils.tsx", "../../@notifi-network/notifi-react-card/lib/assets/AnnouncementIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/ChatAlertIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/RatioCheckIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/SwapIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/BellIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/AlertHistory/AlertIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/ChartIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/CheckIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/ClockIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/DaoIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/DownArrowIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/FlagIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/GraphIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/InfoIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/StarIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/UpArrowIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/UrgentIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/WatchIcon.tsx", "../../@notifi-network/notifi-react-card/lib/utils/AlertHistoryUtils.tsx", "../../@notifi-network/notifi-react-card/lib/utils/frontendClient.ts", "../../@notifi-network/notifi-react-card/lib/utils/typeUtils.ts", "../../@notifi-network/notifi-react-card/lib/components/subscription/NotifiToggle.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/NotifiTooltip.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeCustomHealthCheckRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeCustomToggleRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeDirectPushRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeHealthCheckRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeLabelRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypePriceChangeRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeTradingPairsRow.tsx", "../../@notifi-network/notifi-react-card/lib/assets/DeleteIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeFusionMultiThresholdRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeUnsupportedRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeWalletBalanceRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/FetchedStateCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/SubscriptionCardUnsupported.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/SubscriptionCardV1.tsx", "../../@notifi-network/notifi-react-card/lib/hooks/useDestinationState.ts", "../../@notifi-network/notifi-react-card/lib/components/AlertHistory/AlertDetailsCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/ConfigAlertModal.tsx", "../../@notifi-network/notifi-react-card/lib/components/AlertBox/AlertActionIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/BackArrowIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/CloseIcon.tsx", "../../@notifi-network/notifi-react-card/lib/assets/SettingIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/ConfigDestinationModal.tsx", "../../@notifi-network/notifi-react-card/lib/assets/DiscordIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/preview-panel/DestinationErrorMessage.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiAlertBox.tsx", "../../@notifi-network/notifi-react-card/lib/components/SignupBanner.tsx", "../../@notifi-network/notifi-react-card/lib/assets/CircleBellIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/VerifyBanner.tsx", "../../@notifi-network/notifi-react-card/lib/components/common/ErrorStateCard.tsx", "../../@notifi-network/notifi-react-card/lib/utils/errorUtils.ts", "../../@notifi-network/notifi-react-card/lib/components/common/LoadingStateCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/common/Spinner.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/EditCardView.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/NotifiSubscribeButton.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/AlertListPreview.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/InputFields.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiDiscordToggle.tsx", "../../@notifi-network/notifi-react-card/lib/components/NotifiHwWalletToggle.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/ExpiredTokenViewCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/HistoryCardView.tsx", "../../@notifi-network/notifi-react-card/lib/assets/NotificationEmptyBellIcon.tsx", "../../@notifi-network/notifi-react-card/lib/utils/constants.ts", "../../@notifi-network/notifi-react-card/lib/components/AlertHistory/AlertNotificationRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/PreviewCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/preview-panel/AlertsPanel.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeFusionHealthCheckRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeFusionToggleRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/EventTypeXMTPRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/preview-panel/UserInfoPanel.tsx", "../../@notifi-network/notifi-react-card/lib/assets/PenIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/subscription-card-views/VerifyWalletView.tsx", "../../@notifi-network/notifi-react-card/lib/components/WalletList/ConnectWalletRow.tsx", "../../@notifi-network/notifi-react-card/lib/components/WalletList/WalletList.tsx", "../../@notifi-network/notifi-react-card/lib/components/common/NotifiCardButton.tsx", "../../@notifi-network/notifi-react-card/lib/components/subscription/NotifiSubscriptionCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/ChatMessageDate.tsx", "../../@notifi-network/notifi-react-card/lib/utils/datetimeUtils.ts", "../../@notifi-network/notifi-react-card/lib/components/intercom/ChatMessageSection.tsx", "../../@notifi-network/notifi-react-card/lib/hooks/useIntercomChat.ts", "../../@notifi-network/notifi-react-card/lib/components/intercom/ChatWindowIntroSection.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/MessageList.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/MessageGroup.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/SendMessageSection.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/ChatWindowHeader.tsx", "../../@notifi-network/notifi-react-card/lib/assets/ChatIcon.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/IntercomCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/NotifiIntercomChatWindowContainer.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/NotifiIntercomFTUNotificationTargetSection.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/NotifiStartChatButton.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/SettingHeader.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/NotifiIntercomCard.tsx", "../../@notifi-network/notifi-react-card/lib/components/intercom/NotifiIntercomCardContainer.tsx", "../../@notifi-network/notifi-react-card/lib/hooks/useIntercomCard.ts", "../../@virtuoso.dev/urx/src/constants.ts", "../../@virtuoso.dev/urx/src/utils.ts", "../../@virtuoso.dev/urx/src/actions.ts", "../../@virtuoso.dev/urx/src/streams.ts", "../../@virtuoso.dev/urx/src/pipe.ts", "../../@virtuoso.dev/urx/src/transformers.ts", "../../@virtuoso.dev/urx/src/system.ts", "../../@virtuoso.dev/react-urx/src/index.ts", "../../react-virtuoso/src/hooks/useIsomorphicLayoutEffect.ts", "../../react-virtuoso/src/loggerSystem.ts", "../../react-virtuoso/src/hooks/useSize.ts", "../../react-virtuoso/src/hooks/useChangedChildSizes.ts", "../../react-virtuoso/src/utils/correctItemSize.ts", "../../react-virtuoso/src/utils/approximatelyEqual.ts", "../../react-virtuoso/src/hooks/useScrollTop.ts", "../../react-virtuoso/src/domIOSystem.ts", "../../react-virtuoso/src/AATree.ts", "../../react-virtuoso/src/utils/binaryArraySearch.ts", "../../react-virtuoso/src/recalcSystem.ts", "../../react-virtuoso/src/sizeSystem.ts", "../../react-virtuoso/src/scrollToIndexSystem.ts", "../../react-virtuoso/src/stateFlagsSystem.ts", "../../react-virtuoso/src/propsReadySystem.ts", "../../react-virtuoso/src/initialTopMostItemIndexSystem.ts", "../../react-virtuoso/src/followOutputSystem.ts", "../../react-virtuoso/src/groupedListSystem.ts", "../../react-virtuoso/src/comparators.tsx", "../../react-virtuoso/src/sizeRangeSystem.ts", "../../react-virtuoso/src/listStateSystem.ts", "../../react-virtuoso/src/initialItemCountSystem.ts", "../../react-virtuoso/src/scrollSeekSystem.ts", "../../react-virtuoso/src/topItemCountSystem.ts", "../../react-virtuoso/src/totalListHeightSystem.ts", "../../react-virtuoso/src/utils/simpleMemoize.ts", "../../react-virtuoso/src/upwardScrollFixSystem.ts", "../../react-virtuoso/src/initialScrollTopSystem.ts", "../../react-virtuoso/src/alignToBottomSystem.ts", "../../react-virtuoso/src/windowScrollerSystem.ts", "../../react-virtuoso/src/scrollIntoViewSystem.ts", "../../react-virtuoso/src/listSystem.ts", "../../react-virtuoso/src/utils/positionStickyCssValue.ts", "../../react-virtuoso/src/hooks/useWindowViewportRect.ts", "../../react-virtuoso/src/utils/context.ts", "../../react-virtuoso/src/List.tsx", "../../react-virtuoso/src/gridSystem.ts", "../../react-virtuoso/src/Grid.tsx", "../../react-virtuoso/src/Table.tsx", "../../react-virtuoso/src/components.tsx"],
  "sourcesContent": [null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXhpb3NDcmVhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvdHlwZXMvQXhpb3NDcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiJ9", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXhpb3NQb3N0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL3R5cGVzL0F4aW9zUG9zdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIn0=", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.26.1\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import clsx from 'clsx';\nimport React from 'react';\n\nimport { EmailIcon } from '../assets/EmailIcon';\nimport { useNotifiForm, useNotifiSubscriptionContext } from '../context';\nimport type { DeepPartialReadonly } from '../utils';\n\nexport type NotifiEmailInputProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    input: string;\n    label: string;\n    errorMessage: string;\n    button: string;\n  }>;\n  copy?: DeepPartialReadonly<{\n    placeholder: string;\n    label: string;\n  }>;\n  disabled: boolean;\n  intercomEmailInputStyle?: string;\n  intercomEmailInputContainerStyle?: string;\n  intercomView?: boolean;\n  hasChatAlert?: boolean;\n}>;\n\nexport const NotifiEmailInput: React.FC<NotifiEmailInputProps> = ({\n  classNames,\n  copy,\n  disabled,\n  intercomEmailInputStyle,\n  intercomEmailInputContainerStyle,\n  intercomView,\n}: NotifiEmailInputProps) => {\n  const { intercomCardView, destinationErrorMessages } =\n    useNotifiSubscriptionContext();\n\n  const {\n    formState,\n    formErrorMessages,\n    setEmail,\n    setEmailErrorMessage,\n    setHasChanges,\n  } = useNotifiForm();\n\n  const { email } = formState;\n\n  const { email: emailErrorMessage } = formErrorMessages;\n\n  const { email: emailErrorMessageFromSubscriptionContext } =\n    destinationErrorMessages;\n\n  const validateEmail = () => {\n    if (email === '') {\n      return;\n    }\n\n    const emailRegex = new RegExp(\n      '^[a-zA-Z0-9._:$!%-+]+@[a-zA-Z0-9.-]+.[a-zA-Z]$',\n    );\n    if (emailRegex.test(email)) {\n      setEmailErrorMessage('');\n    } else {\n      setEmailErrorMessage('The email is invalid. Please try again.');\n    }\n  };\n\n  const handleClick = () => {\n    if (emailErrorMessageFromSubscriptionContext?.type !== 'recoverableError')\n      return;\n    emailErrorMessageFromSubscriptionContext.onClick();\n  };\n\n  return (\n    <>\n      {intercomView ? (\n        intercomCardView.state === 'settingView' &&\n        emailErrorMessageFromSubscriptionContext?.type ===\n          'recoverableError' ? (\n          <div\n            onClick={handleClick}\n            className={clsx(\n              'NotifiEmailVerification__button',\n              classNames?.button,\n            )}\n          >\n            Resend Verification\n          </div>\n        ) : null\n      ) : (\n        <label className={clsx('NotifiEmailInput__label', classNames?.label)}>\n          {copy?.label}\n        </label>\n      )}\n      <div\n        className={clsx(\n          'NotifiEmailInput__container',\n          intercomEmailInputContainerStyle,\n          classNames?.container,\n        )}\n      >\n        <EmailIcon className={'NotifiInput__icon'} />\n        <input\n          data-cy=\"notifiEmailInput\"\n          onBlur={validateEmail}\n          className={clsx(\n            'NotifiEmailInput__input',\n            intercomEmailInputStyle,\n            classNames?.input,\n          )}\n          disabled={disabled}\n          name=\"notifi-email\"\n          type=\"email\"\n          value={email}\n          onFocus={() => setEmailErrorMessage('')}\n          onChange={(e) => {\n            setHasChanges(true);\n            setEmail(e.target.value ?? '');\n          }}\n          placeholder={copy?.placeholder ?? 'Email Address'}\n        />\n      </div>\n      <label\n        className={clsx(\n          'NotifiEmailInput__errorMessage',\n          classNames?.errorMessage,\n        )}\n      >\n        {emailErrorMessage}\n      </label>\n    </>\n  );\n};\n", "import React from 'react';\n\nexport type Props = Readonly<{\n  className?: string;\n}>;\n\nexport const EmailIcon: React.FC<Props> = ({ className }: Props) => {\n  return (\n    <svg\n      width=\"13\"\n      height=\"11\"\n      viewBox=\"0 0 13 11\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M11.5 0.499996H1.5C0.8125 0.499996 0.25625 1.0625 0.25625 1.75L0.25 9.25C0.25 9.9375 0.8125 10.5 1.5 10.5H11.5C12.1875 10.5 12.75 9.9375 12.75 9.25V1.75C12.75 1.0625 12.1875 0.499996 11.5 0.499996ZM11.5 3L6.5 6.125L1.5 3V1.75L6.5 4.875L11.5 1.75V3Z\"\n        fill=\"#B6B8D5\"\n      />\n    </svg>\n  );\n};\n", "import { WalletWithSignParams } from '@notifi-network/notifi-frontend-client';\nimport {\n  AcalaSignMessageFunction,\n  AptosSignMessageFunction,\n  NotifiEnvironment,\n  Uint8SignMessageFunction,\n} from '@notifi-network/notifi-react-hooks';\nimport React from 'react';\n\nimport { HardwareLoginPlugin } from '../plugins';\nimport { AlertConfiguration } from '../utils';\nimport { NotifiClientContextProvider } from './NotifiClientContext';\nimport { NotifiFormProvider } from './NotifiFormContext';\nimport { NotifiSubscriptionContextProvider } from './NotifiSubscriptionContext';\n\nexport type SolanaParams = Readonly<{\n  walletBlockchain: 'SOLANA';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n  hardwareLoginPlugin: HardwareLoginPlugin;\n}>;\nexport type EthereumParams = Readonly<{\n  walletBlockchain: 'ETHEREUM';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\nexport type PolygonParams = Readonly<{\n  walletBlockchain: 'POLYGON';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\nexport type ArbitrumParams = Readonly<{\n  walletBlockchain: 'ARBITRUM';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\nexport type BinanceParams = Readonly<{\n  walletBlockchain: 'BINANCE';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type BaseParams = Readonly<{\n  walletBlockchain: 'BASE';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type AptosParams = Readonly<{\n  walletBlockchain: 'APTOS';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: AptosSignMessageFunction;\n}>;\nexport type ZksyncParams = Readonly<{\n  walletBlockchain: 'ZKSYNC';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type AcalaParams = Readonly<{\n  walletBlockchain: 'ACALA';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: AcalaSignMessageFunction;\n}>;\n\nexport type OptimismParams = Readonly<{\n  walletBlockchain: 'OPTIMISM';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type NearParams = Readonly<{\n  walletBlockchain: 'NEAR';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type InjectiveParams = Readonly<{\n  walletBlockchain: 'INJECTIVE';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type OsmosisParams = Readonly<{\n  walletBlockchain: 'OSMOSIS';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type NibiruParams = Readonly<{\n  walletBlockchain: 'NIBIRU';\n  accountAddress: string;\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type AvalancheParams = Readonly<{\n  walletBlockchain: 'AVALANCHE';\n  walletPublicKey: string;\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type SuiParams = Readonly<{\n  walletBlockchain: 'SUI';\n  accountAddress: string;\n  walletPublicKey: string; // The same as accountAddress\n  signMessage: Uint8SignMessageFunction;\n}>;\n\nexport type MultiWalletParams = Readonly<{\n  ownedWallets: ReadonlyArray<WalletWithSignParams>;\n}>;\n\ntype WalletParams =\n  | SolanaParams\n  | EthereumParams\n  | PolygonParams\n  | AvalancheParams\n  | ArbitrumParams\n  | BaseParams\n  | BinanceParams\n  | AptosParams\n  | AcalaParams\n  | NearParams\n  | AvalancheParams\n  | OptimismParams\n  | InjectiveParams\n  | OsmosisParams\n  | NibiruParams\n  | SuiParams\n  | ZksyncParams;\n\nexport type NotifiParams = Readonly<{\n  alertConfigurations?: Record<string, AlertConfiguration | null>;\n  dappAddress: string;\n  env: NotifiEnvironment;\n  keepSubscriptionData?: boolean;\n  multiWallet?: MultiWalletParams;\n  isUsingFrontendClient?: boolean; // default is true\n}> &\n  WalletParams;\n\nexport const NotifiContext: React.FC<React.PropsWithChildren<NotifiParams>> = ({\n  children,\n  ...params\n}: React.PropsWithChildren<NotifiParams>) => {\n  return (\n    <NotifiClientContextProvider {...params}>\n      <NotifiFormProvider>\n        <NotifiSubscriptionContextProvider {...params}>\n          {children}\n        </NotifiSubscriptionContextProvider>\n      </NotifiFormProvider>\n    </NotifiClientContextProvider>\n  );\n};\n", "import {\n  ConfigFactoryInput,\n  NotifiFrontendClient,\n  newFrontendClient,\n} from '@notifi-network/notifi-frontend-client';\nimport { useNotifiClient } from '@notifi-network/notifi-react-hooks';\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { NotifiParams } from './NotifiContext';\n\nexport type NotifiClientContextData = Readonly<{\n  client: ReturnType<typeof useNotifiClient>;\n  frontendClient: NotifiFrontendClient;\n  isUsingFrontendClient: boolean;\n  params: NotifiParams;\n  frontendClientStatus: FrontendClientStatus;\n  updateFrontendClientStatus: () => void;\n}>;\n\nexport type FrontendClientStatus = {\n  isExpired: boolean;\n  isInitialized: boolean;\n  isAuthenticated: boolean;\n};\n\nconst NotifiClientContext = createContext<NotifiClientContextData>(\n  {} as unknown as NotifiClientContextData, // Intentially empty in default, use NotifiSubscriptionContextProvider\n);\n\nconst getFrontendConfigInput = (params: NotifiParams): ConfigFactoryInput => {\n  if ('accountAddress' in params) {\n    return {\n      account: {\n        address: params.accountAddress,\n        publicKey: params.walletPublicKey,\n      },\n      tenantId: params.dappAddress,\n      walletBlockchain: params.walletBlockchain,\n      env: params.env,\n    };\n  } else {\n    return {\n      account: {\n        publicKey: params.walletPublicKey,\n      },\n      tenantId: params.dappAddress,\n      walletBlockchain: params.walletBlockchain,\n      env: params.env,\n    };\n  }\n};\n\nexport const NotifiClientContextProvider: React.FC<NotifiParams> = ({\n  children,\n  ...params\n}: React.PropsWithChildren<NotifiParams>) => {\n  const [frontendClientStatus, setFrontendClientStatus] =\n    useState<FrontendClientStatus>({\n      isExpired: false,\n      isInitialized: false,\n      isAuthenticated: false,\n    });\n  const client = useNotifiClient(params);\n  const frontendClient = useMemo(() => {\n    const configInput = getFrontendConfigInput(params);\n    const updatedFrontendClient = newFrontendClient(configInput);\n    return updatedFrontendClient;\n  }, [\n    params.dappAddress,\n    params.env,\n    params.walletBlockchain,\n    params.walletPublicKey,\n  ]);\n\n  const updateFrontendClientStatus = useCallback(() => {\n    setFrontendClientStatus({\n      isExpired: frontendClient.userState?.status === 'expired',\n      isInitialized: !!frontendClient,\n      isAuthenticated: frontendClient.userState?.status === 'authenticated',\n    });\n  }, [frontendClient]);\n\n  const isClientInitialized = useMemo(() => {\n    return params.isUsingFrontendClient\n      ? !!frontendClient.userState\n      : client.isInitialized;\n  }, [params.isUsingFrontendClient, client, frontendClient]);\n\n  useEffect(() => {\n    frontendClient.initialize().then(() => updateFrontendClientStatus());\n  }, [frontendClient]);\n\n  if (!isClientInitialized) return null;\n\n  return (\n    <NotifiClientContext.Provider\n      value={{\n        client,\n        params,\n        isUsingFrontendClient: params.isUsingFrontendClient ?? true,\n        frontendClient,\n        frontendClientStatus,\n        updateFrontendClientStatus,\n      }}\n    >\n      {children}\n    </NotifiClientContext.Provider>\n  );\n};\n\nexport const useNotifiClientContext = () => useContext(NotifiClientContext);\n", "import React, {\n  PropsWithChildren,\n  createContext,\n  useContext,\n  useState,\n} from 'react';\n\nimport { DestinationInputs, EditFormType } from '.';\n\nexport type FormErrorMessages = DestinationInputs;\n\nexport type NotifiFormData = Readonly<{\n  formState: DestinationInputs;\n  formErrorMessages: FormErrorMessages;\n  hasChanges: boolean;\n  setHasChanges: (value: boolean) => void;\n\n  setEmail: (value: string) => void;\n  setEmailErrorMessage: (value: string) => void;\n\n  setPhoneNumber: (value: string) => void;\n  setPhoneNumberErrorMessage: (value: string) => void;\n\n  setTelegram: (value: string) => void;\n  setTelegramErrorMessage: (value: string) => void;\n}>;\n\nconst NotifiFormContext = createContext<NotifiFormData>({} as NotifiFormData);\n\nexport const NotifiFormProvider: React.FC<PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const [hasChanges, setHasChanges] = useState<boolean>(false);\n  const [formState, setFormInput] = useState<DestinationInputs>({\n    email: '',\n    phoneNumber: '',\n    telegram: '',\n    discord: '',\n  });\n\n  const [formErrorMessages, setInputErrorMessage] = useState<FormErrorMessages>(\n    {\n      email: '',\n      telegram: '',\n      phoneNumber: '',\n      discord: '',\n    },\n  );\n\n  const handleFormInput = ({ field, value }: EditFormType) => {\n    setFormInput((formErrorMessages) => ({\n      ...formErrorMessages,\n      [field]: value,\n    }));\n  };\n\n  const handleErrorMessage = ({ field, value }: EditFormType) => {\n    setInputErrorMessage((formErrorMessages) => ({\n      ...formErrorMessages,\n      [field]: value,\n    }));\n  };\n\n  const setEmail = (value: string) => {\n    handleFormInput({ field: 'email', value });\n  };\n\n  const setEmailErrorMessage = (value: string) => {\n    handleErrorMessage({ field: 'email', value });\n  };\n\n  const setTelegram = (value: string) => {\n    handleFormInput({ field: 'telegram', value });\n  };\n\n  const setTelegramErrorMessage = (value: string) => {\n    handleErrorMessage({ field: 'telegram', value });\n  };\n\n  const setPhoneNumber = (value: string) => {\n    handleFormInput({ field: 'phoneNumber', value });\n  };\n\n  const setPhoneNumberErrorMessage = (value: string) => {\n    handleErrorMessage({ field: 'phoneNumber', value });\n  };\n\n  const value = {\n    formState,\n    formErrorMessages,\n    hasChanges,\n    setHasChanges,\n    setEmail,\n    setEmailErrorMessage,\n    setTelegram,\n    setTelegramErrorMessage,\n    setPhoneNumber,\n    setPhoneNumberErrorMessage,\n  };\n\n  return (\n    <NotifiFormContext.Provider value={value}>\n      {children}\n    </NotifiFormContext.Provider>\n  );\n};\n\nexport const useNotifiForm: () => NotifiFormData = () => {\n  const data = useContext(NotifiFormContext);\n  return data;\n};\n", "import { Types } from '@notifi-network/notifi-graphql';\nimport { PropsWithChildren, useMemo } from 'react';\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport {\n  FetchedCardViewState,\n  SubscriptionData,\n  useFetchedCardState,\n} from '../hooks';\nimport {\n  IntercomCardView,\n  useIntercomCardState,\n} from '../hooks/useIntercomCardState';\nimport { prefixTelegramWithSymbol } from '../utils/stringUtils';\nimport { useNotifiClientContext } from './NotifiClientContext';\nimport { NotifiParams } from './NotifiContext';\nimport { useNotifiForm } from './NotifiFormContext';\nimport {\n  DestinationError,\n  DestinationErrorMessageField,\n  DestinationErrors,\n} from './constants';\n\nexport type DestinationErrorMessages = DestinationErrors;\n\nexport enum FtuStage {\n  Destination = 3,\n  Alerts = 2,\n  Done = 1,\n}\n\nexport type NotifiSubscriptionData = Readonly<{\n  alerts: Readonly<Record<string, Types.AlertFragmentFragment | undefined>>;\n  connectedWallets: ReadonlyArray<Types.ConnectedWalletFragmentFragment>;\n  setConnectedWallets: React.Dispatch<\n    React.SetStateAction<ReadonlyArray<Types.ConnectedWalletFragmentFragment>>\n  >;\n  destinationErrorMessages: DestinationErrorMessages;\n  email: string;\n  params: NotifiParams;\n  phoneNumber: string;\n  telegramId: string;\n  telegramConfirmationUrl?: string;\n  useHardwareWallet: boolean;\n  useDiscord: boolean;\n  /**\n   * @deprecated Now this context can be consumed as long as the component is wrapped in NotifiContext\n   */\n  contextId: string;\n  cardView: FetchedCardViewState;\n  setCardView: React.Dispatch<React.SetStateAction<FetchedCardViewState>>;\n  intercomCardView: IntercomCardView;\n  setIntercomCardView: React.Dispatch<React.SetStateAction<IntercomCardView>>;\n  setAlerts: (\n    alerts: Record<string, Types.AlertFragmentFragment | undefined>,\n  ) => void;\n  setEmail: (email: string) => void;\n  setPhoneNumber: (phoneNumber: string) => void;\n  setTelegramId: (telegramId: string) => void;\n  setUseHardwareWallet: React.Dispatch<React.SetStateAction<boolean>>;\n  setUseDiscord: React.Dispatch<React.SetStateAction<boolean>>;\n  loading: boolean;\n  setLoading: (loading: boolean) => void;\n  hasChatAlert: boolean;\n  setHasChatAlert: (hasChatAlert: boolean) => void;\n  conversationId: string;\n  setConversationId: (conversationId: string) => void;\n  userId: string;\n  setUserId: (userId: string) => void;\n  setEmailErrorMessage: (value: DestinationError) => void;\n  setTelegramConfirmationUrl: (\n    telegramConfirmationUrl: string | undefined,\n  ) => void;\n  setPhoneNumberErrorMessage: (value: DestinationError) => void;\n  setDiscordErrorMessage: (value: DestinationError) => void;\n  setTelegramErrorMessage: (value: DestinationError) => void;\n  resetErrorMessageState: () => void;\n\n  discordTargetData: Types.DiscordTargetFragmentFragment | undefined;\n  setDiscordTargetData: React.Dispatch<\n    React.SetStateAction<Types.DiscordTargetFragmentFragment | undefined>\n  >;\n  ftuStage: FtuStage;\n  syncFtuStage: (isContactInfoRequired?: boolean) => Promise<void>;\n  updateFtuStage: (ftuConfigStep: FtuStage) => Promise<void>;\n  render: (newData: Types.FetchDataQuery) => SubscriptionData;\n}>;\n\nconst NotifiSubscriptionContext = createContext<NotifiSubscriptionData>(\n  {} as unknown as NotifiSubscriptionData, // Intentially empty in default, use NotifiSubscriptionContextProvider\n);\n\nconst hasKey = <K extends string>(\n  obj: object,\n  key: K,\n): obj is object & { [k in K]: unknown } => {\n  return typeof obj === 'object' && obj !== null && key in obj;\n};\n\nexport const NotifiSubscriptionContextProvider: React.FC<\n  PropsWithChildren<NotifiParams>\n> = ({ children, ...params }) => {\n  const { frontendClient, isUsingFrontendClient } = useNotifiClientContext();\n\n  const contextId = useMemo(() => {\n    return new Date().toISOString();\n  }, []);\n\n  const [conversationId, setConversationId] = useState<string>('');\n  const [userId, setUserId] = useState<string>('');\n\n  const [hasChatAlert, setHasChatAlert] = useState<boolean>(false);\n  const { cardView, setCardView } = useFetchedCardState();\n  const { intercomCardView, setIntercomCardView } = useIntercomCardState();\n\n  const [telegramConfirmationUrl, setTelegramConfirmationUrl] = useState<\n    string | undefined\n  >(undefined);\n\n  const [alerts, setAlerts] = useState<\n    Record<string, Types.AlertFragmentFragment | undefined>\n  >({});\n  const [connectedWallets, setConnectedWallets] = useState<\n    ReadonlyArray<Types.ConnectedWalletFragmentFragment>\n  >([]);\n  const [useHardwareWallet, setUseHardwareWallet] = useState<boolean>(false);\n  const [useDiscord, setUseDiscord] = useState<boolean>(false);\n  const [loading, setLoading] = useState(false);\n\n  const [email, setEmail] = useState<string>('');\n  const [phoneNumber, setPhoneNumber] = useState<string>('');\n  const [telegramId, setTelegramId] = useState<string>('');\n  const [ftuStage, setFtuStage] = useState<FtuStage>(FtuStage.Done);\n\n  const [discordTargetData, setDiscordTargetData] = useState<\n    Types.DiscordTargetFragmentFragment | undefined\n  >(undefined);\n\n  const [destinationErrorMessages, setDestinationErrorMessages] =\n    useState<DestinationErrorMessages>({\n      email: undefined,\n      telegram: undefined,\n      phoneNumber: undefined,\n      discord: undefined,\n    });\n\n  const handleErrorMessage = ({\n    field,\n    value,\n  }: DestinationErrorMessageField) => {\n    setDestinationErrorMessages((destinationErrorMessages) => ({\n      ...destinationErrorMessages,\n      [field]: value,\n    }));\n  };\n\n  const setEmailErrorMessage = (value: DestinationError) => {\n    handleErrorMessage({ field: 'email', value });\n  };\n\n  const setTelegramErrorMessage = (value: DestinationError) => {\n    handleErrorMessage({ field: 'telegram', value });\n  };\n\n  const setPhoneNumberErrorMessage = (value: DestinationError) => {\n    handleErrorMessage({ field: 'phoneNumber', value });\n  };\n  const setDiscordErrorMessage = (value: DestinationError) => {\n    handleErrorMessage({ field: 'discord', value });\n  };\n\n  const resetErrorMessageState = () => {\n    setDestinationErrorMessages({\n      email: undefined,\n      telegram: undefined,\n      phoneNumber: undefined,\n      discord: undefined,\n    });\n  };\n\n  const syncFtuStage = useCallback(\n    async (isContactInfoRequired?: boolean) => {\n      const userSettings = await frontendClient.getUserSettings();\n      if (!userSettings?.ftuStage) {\n        if (isContactInfoRequired) {\n          return await updateFtuStage(FtuStage.Destination);\n        }\n        return await updateFtuStage(FtuStage.Alerts);\n      }\n      setFtuStage(userSettings.ftuStage);\n    },\n    [frontendClient?.userState?.status],\n  );\n\n  const updateFtuStage = useCallback(\n    async (ftuConfigStep: FtuStage) => {\n      await frontendClient.updateUserSettings({\n        input: { ftuStage: ftuConfigStep },\n      });\n      setFtuStage(ftuConfigStep);\n    },\n    [frontendClient?.userState?.status],\n  );\n\n  const {\n    setEmail: setFormEmail,\n    setTelegram: setFormTelegram,\n    setPhoneNumber: setFormPhoneNumber,\n  } = useNotifiForm();\n\n  const didFetch = React.useRef(false);\n\n  useEffect(() => {\n    // Initial fetch data\n    if (\n      !didFetch.current &&\n      frontendClient.userState?.status === 'authenticated' &&\n      isUsingFrontendClient\n    ) {\n      frontendClient\n        .fetchData()\n        .then((data) => {\n          render(data);\n          copyAuths(data);\n        })\n        .catch((_e) => {\n          /* Intentionally empty */\n        })\n        .finally(() => {\n          didFetch.current = true;\n        });\n    }\n  }, [frontendClient.userState]);\n\n  const copyAuths = useCallback(\n    async (data: Types.FetchDataQuery) => {\n      if (params.multiWallet !== undefined) {\n        params.multiWallet.ownedWallets.forEach((wallet) => {\n          const key = 'accountAddress';\n          const address = hasKey(wallet, key)\n            ? wallet[key]\n            : wallet.walletPublicKey;\n          if (\n            data.connectedWallet?.find(\n              (cw) =>\n                cw?.address === address &&\n                cw?.walletBlockchain === wallet.walletBlockchain,\n            ) !== undefined\n          ) {\n            frontendClient\n              .copyAuthorization({\n                walletBlockchain: 'SOLANA',\n                walletPublicKey: wallet.walletPublicKey,\n                env: params.env,\n                tenantId: params.dappAddress,\n                storageOption: { driverType: 'LocalForage' },\n              })\n              .catch(console.log);\n          }\n        });\n      }\n    },\n    [frontendClient, params],\n  );\n\n  const render = useCallback(\n    (newData: Types.FetchDataQuery): SubscriptionData => {\n      const targetGroup = newData.targetGroup?.find(\n        (tg) => tg?.name === 'Default',\n      );\n      const alerts: Record<string, Types.AlertFragmentFragment> = {};\n      newData.alert?.forEach((alert) => {\n        if (alert?.name) {\n          alerts[alert.name] = alert;\n        }\n      });\n      setAlerts(alerts);\n\n      setConnectedWallets(\n        newData.connectedWallet?.filter(\n          (wallet): wallet is Types.ConnectedWalletFragmentFragment => !!wallet,\n        ) ?? [],\n      );\n      const emailTarget = targetGroup?.emailTargets?.[0] ?? null;\n      const emailToSet = emailTarget?.emailAddress ?? '';\n\n      if (!!emailTarget && !emailTarget.isConfirmed) {\n        setEmailErrorMessage({\n          type: 'recoverableError',\n          onClick: () =>\n            frontendClient.sendEmailTargetVerification({\n              targetId: emailTarget.id,\n            }),\n          message: 'Resend Link',\n        });\n      } else {\n        setEmailErrorMessage(undefined);\n      }\n      setEmail(emailToSet);\n      setFormEmail(emailToSet);\n\n      const phoneNumber = targetGroup?.smsTargets?.[0]?.phoneNumber ?? null;\n      const isPhoneNumberConfirmed =\n        targetGroup?.smsTargets?.[0]?.isConfirmed ?? false;\n      const phoneNumberToSet = phoneNumber ?? '';\n\n      if (!!phoneNumber && !isPhoneNumberConfirmed) {\n        setPhoneNumberErrorMessage({\n          type: 'unrecoverableError',\n          message: 'Messages stopped',\n          tooltip: `Please text 'start' to the following number:\\n${\n            params.env === 'Production' ? '+1 206 222 3465' : '+1 253 880 1477 '\n          }`,\n        });\n      }\n\n      setFormPhoneNumber(phoneNumberToSet || '');\n      setPhoneNumber(phoneNumberToSet || '');\n\n      const telegramTarget = targetGroup?.telegramTargets?.[0] ?? null;\n      const telegramId = telegramTarget?.telegramId;\n\n      const telegramIdWithSymbolAdded =\n        telegramId !== '' && telegramId?.length\n          ? prefixTelegramWithSymbol(telegramId)\n          : null;\n\n      setFormTelegram(telegramId ?? '');\n      setTelegramId(telegramIdWithSymbolAdded ?? '');\n\n      if (!!telegramTarget && !telegramTarget?.isConfirmed) {\n        setTelegramErrorMessage({\n          type: 'recoverableError',\n          onClick: () => {\n            if (!telegramTarget?.confirmationUrl) {\n              return;\n            }\n\n            window.open(telegramTarget?.confirmationUrl);\n          },\n          message: 'Verify ID',\n        });\n      } else {\n        setTelegramErrorMessage(undefined);\n      }\n\n      const discordTarget = targetGroup?.discordTargets?.find(\n        (it) => it?.name === 'Default',\n      );\n\n      if (!!discordTarget && !discordTarget.isConfirmed) {\n        setDiscordErrorMessage({\n          type: 'recoverableError',\n          onClick: () => window.open(discordTarget.verificationLink, '_blank'),\n          message: 'Enable Bot',\n        });\n        setUseDiscord(true);\n        setDiscordTargetData(discordTarget);\n      } else if (!!discordTarget && discordTarget.isConfirmed) {\n        switch (discordTarget.userStatus) {\n          case 'DISCORD_SERVER_NOT_JOINED':\n            setDiscordErrorMessage({\n              type: 'recoverableError',\n              onClick: () =>\n                window.open(discordTarget.discordServerInviteLink, '_blank'),\n              message: 'Join Server',\n            });\n            break;\n          case 'COMPLETE':\n            setDiscordErrorMessage(undefined);\n            break;\n          default: // UNVERIFIED: Should never get in this state\n            throw new Error('Discord target in unexpected state');\n        }\n        setUseDiscord(true);\n        setDiscordTargetData(discordTarget);\n      } else {\n        setDiscordTargetData(undefined);\n        setUseDiscord(false);\n      }\n\n      return {\n        alerts,\n        email: emailTarget?.emailAddress ?? null,\n        isPhoneNumberConfirmed,\n        phoneNumber,\n        telegramConfirmationUrl: telegramTarget?.confirmationUrl ?? null,\n        telegramId: telegramTarget?.telegramId ?? null,\n        discordId: discordTarget?.id ?? null,\n      };\n    },\n    [setAlerts, setEmail, setPhoneNumber, setTelegramId],\n  );\n\n  const value = {\n    alerts,\n    connectedWallets,\n    email,\n    loading,\n    params,\n    phoneNumber,\n    contextId,\n    telegramId,\n    cardView,\n    telegramConfirmationUrl,\n    useHardwareWallet,\n    destinationErrorMessages,\n    setAlerts,\n    setConnectedWallets,\n    setCardView,\n    setEmail,\n    setLoading,\n    setPhoneNumber,\n    setTelegramId,\n    setTelegramConfirmationUrl,\n    setUseHardwareWallet,\n    intercomCardView,\n    setIntercomCardView,\n    hasChatAlert,\n    setHasChatAlert,\n    conversationId,\n    setConversationId,\n    userId,\n    setUserId,\n    setEmailErrorMessage,\n    setTelegramErrorMessage,\n    setPhoneNumberErrorMessage,\n    resetErrorMessageState,\n    setDiscordErrorMessage,\n    useDiscord,\n    setUseDiscord,\n    discordTargetData,\n    setDiscordTargetData,\n    render,\n    ftuStage,\n    syncFtuStage,\n    updateFtuStage,\n  };\n\n  return (\n    <NotifiSubscriptionContext.Provider value={value}>\n      {children}\n    </NotifiSubscriptionContext.Provider>\n  );\n};\n\nexport const useNotifiSubscriptionContext: () => NotifiSubscriptionData =\n  () => {\n    const data = useContext(NotifiSubscriptionContext);\n    return data;\n  };\n", "// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[047]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:395|76[018])\\\\d{5}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-79]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0(4(?:[14]4|56)|[579])?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[189]\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-246-9])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|97\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d\\\\d|606)\\\\d{5}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-489]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:395|76[018])\\\\d{5}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29[1289]|389)\",\"529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5293[01]\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]|8[0-3]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:395|76[018])\\\\d{5}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[04]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]|59\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-3]))\\\\d{4}\"],[\"(?:69(?:2\\\\d\\\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|6[0-6]|7[0-27]|8[0-8]|9[0-479]))|9(?:399[0-2]|4790|76(?:2[27]|3[0-37]|9\\\\d)))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,0,[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-6]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3478]|64|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"(?:00|[1-57-9]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"(?:47220[01]|5(?:05(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|4[46]))|57200))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"(?:0004|4)\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10,13],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[35-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[69]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"(?:(?:(?:26|63)9|80\\\\d)\\\\d\\\\d|93980)\\\\d{4}\",[9],0,\"0\",0,0,0,0,\"269|63|9398\"],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}", "// https://stackoverflow.com/a/46971044/970769\r\n// \"Breaking changes in Typescript 2.1\"\r\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\r\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\r\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\nexport default class ParseError extends Error {\r\n  constructor(code) {\r\n    super(code)\r\n    // Set the prototype explicitly.\r\n    // Any subclass of FooError will have to manually set the prototype as well.\r\n    Object.setPrototypeOf(this, ParseError.prototype)\r\n    this.name = this.constructor.name\r\n  }\r\n}", "// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')", "// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}", "import compare from './tools/semver-compare.js'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\t// The test case could be found by searching for \"nonGeographical\".\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\t// In that metadata, there was no concept of \"non-geographic\" metadata\r\n\t\t\t// so metadata for `001` country code was stored along with other countries.\r\n\t\t\t// The test case can be found by searching for:\r\n\t\t\t// \"should work around `nonGeographic` metadata not existing\".\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// \"possible length\" data is always present in Google's metadata.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!is_object(metadata) || !is_object(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst type_of = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries[country] !== undefined\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }", "import { VALID_DIGITS } from '../../constants.js'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}", "import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants.js'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern.js'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}", "import createExtensionPattern from './createExtensionPattern.js'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}", "// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}", "import { parseDigit } from './helpers/parseDigits.js'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}", "/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}", "import mergeArrays from './mergeArrays.js'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}", "import Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\t// Old metadata (< 1.0.18) had no \"possible length\" data.\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}", "import isViablePhoneNumber from './isViablePhoneNumber.js'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}", "/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}", "import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returned `{}`\r\n\t// meaning that the phone number is not a valid one.\r\n\tif (!input.country) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\r\n\t\t// For example, for \"US\" country.\r\n\t\t// Old metadata (< `1.0.18`) had a specific \"types\" data structure\r\n\t\t// that happened to be `undefined` for `MOBILE` in that case.\r\n\t\t// Newer metadata (>= `1.0.18`) has another data structure that is\r\n\t\t// not `undefined` for `MOBILE` in that case (it's just an empty array).\r\n\t\t// So this `if` is just for backwards compatibility with old metadata.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}", "import Metadata from './metadata.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes()) {\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n}", "import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\r\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\tlet possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn []\r\n\t}\r\n\treturn possibleCountries.filter((country) => {\r\n\t\treturn couldNationalNumberBelongToCountry(nationalNumber, country, metadata)\r\n\t})\r\n}\r\n\r\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.selectNumberingPlan(country)\r\n\tif (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}", "import { VALID_PUNCTUATION } from '../constants.js'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}", "import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}", "import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\nimport Metadata, { getCountryCallingCode } from './metadata.js'\r\nimport getIddPrefix from './helpers/getIddPrefix.js'\r\nimport { formatRFC3966 } from './helpers/RFC3966.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nfunction chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits.\r\n\t\t// The test case for \"else path\" could be found by searching for\r\n\t\t// \"format.leadingDigitsPatterns().length === 0\".\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}", "import Metadata from './metadata.js'\r\nimport isPossibleNumber from './isPossible.js'\r\nimport isValidNumber from './isValid.js'\r\n// import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js'\r\nimport formatNumber from './format.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\tconstructor(countryOrCountryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryOrCountryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst { country, countryCallingCode } = getCountryAndCountryCallingCode(\r\n\t\t\tcountryOrCountryCallingCode,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tthis.country = country\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tgetPossibleCountries() {\r\n\t\tif (this.country) {\r\n\t\t\treturn [this.country]\r\n\t\t}\r\n\t\treturn getPossibleCountriesForNumber(\r\n\t\t\tthis.countryCallingCode,\r\n\t\t\tthis.nationalNumber,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.metadata)\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\r\n\t// but later it was found out that it doesn't include the possible `TOO_SHORT` result\r\n\t// returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\r\n\t// so eventually I simply commented out this method from the `PhoneNumber` class\r\n\t// and just left the `validatePhoneNumberLength()` function, even though that one would require\r\n\t// and additional step to also validate the actual country / calling code of the phone number.\r\n\t// validateLength() {\r\n\t// \tconst metadata = new Metadata(this.metadata)\r\n\t// \tmetadata.selectNumberingPlan(this.countryCallingCode)\r\n\t// \tconst result = checkNumberLength(this.nationalNumber, metadata)\r\n\t// \tif (result !== 'IS_POSSIBLE') {\r\n\t// \t\treturn result\r\n\t// \t}\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)\r\n\r\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\r\n\tlet country\r\n\tlet countryCallingCode\r\n\r\n\tconst metadata = new Metadata(metadataJson)\r\n\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t// Also store the country code as `.country`.\r\n\tif (isCountryCode(countryOrCountryCallingCode)) {\r\n\t\tcountry = countryOrCountryCallingCode\r\n\t\tmetadata.selectNumberingPlan(country)\r\n\t\tcountryCallingCode = metadata.countryCallingCode()\r\n\t} else {\r\n\t\tcountryCallingCode = countryOrCountryCallingCode\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\tif (metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\tcountry = '001'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode\r\n\t}\r\n}", "import Metadata from '../metadata.js'\r\nimport { VALID_DIGITS } from '../constants.js'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}", "/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}", "import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tcarrierCode,\r\n\t\tnationalNumber\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (nationalNumber !== number) {\r\n\t\tif (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t\t// Don't strip the national prefix.\r\n\t\t\treturn { nationalNumber: number }\r\n\t\t}\r\n\t\t// Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t\t// Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// The number remaining after stripping the national prefix and carrier code\r\n\t\t\t// should be long enough to have a possible length for the country.\r\n\t\t\t// Otherwise, don't strip the national prefix and carrier code,\r\n\t\t\t// since the original number could be a valid number.\r\n\t\t\t// This check has been copy-pasted \"as is\" from Google's original library:\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\t// It doesn't check for the \"possibility\" of the original `number`.\r\n\t\t\t// I guess it's fine not checking that one. It works as is anyway.\r\n\t\t\tif (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\r\n\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// This \"is possible\" national number (length) check has been commented out\r\n\t// because it's superceded by the (effectively) same check done in the\r\n\t// `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\r\n\t// In other words, why run the same check twice if it could only be run once.\r\n\t// // Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t// // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\r\n\t// // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\r\n\t// if (metadata.possibleLengths()) {\r\n\t// \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\r\n\t// \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\r\n\t// \t\treturn false\r\n\t// \t}\r\n\t// }\r\n\treturn true\r\n}\r\n\r\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'TOO_SHORT':\r\n\t\tcase 'INVALID_LENGTH':\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn true\r\n\t}\r\n}", "import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}", "import stripIddPrefix from './stripIddPrefix.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport Metadata from '../metadata.js'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn { number }\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}", "import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nexport default function getCountryByNationalNumber(possibleCountries, nationalPhoneNumber, metadata) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\tfor (const country of possibleCountries) {\r\n\t\tmetadata.country(country)\r\n\t\t// \"Leading digits\" patterns are only defined for about 20% of all countries.\r\n\t\t// By definition, matching \"leading digits\" is a sufficient but not a necessary\r\n\t\t// condition for a phone number to belong to a country.\r\n\t\t// The point of \"leading digits\" check is that it's the fastest one to get a match.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\treturn country\r\n\t\t}\r\n\t}\r\n}", "import getCountryByNationalNumber from './getCountryByNationalNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, nationalPhoneNumber, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn getCountryByNationalNumber(possibleCountries, nationalPhoneNumber, metadata.metadata)\r\n}", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants.js'\r\n\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js'\r\nimport extractExtension from './helpers/extension/extractExtension.js'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js'\r\nimport getCountryCallingCode from './getCountryCallingCode.js'\r\nimport { isPossibleNumber } from './isPossible.js'\r\nimport { parseRFC3966 } from './helpers/RFC3966.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractNationalNumber from './helpers/extractNationalNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\n\r\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// Parse RFC 3966 phone number URI.\r\n\tif (text && text.indexOf('tel:') === 0) {\r\n\t\treturn parseRFC3966(text)\r\n\t}\r\n\tlet number = extractFormattedPhoneNumber(text, extract, v2)\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is passed in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` is `undefined`.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn { countryCallingCode }\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, nationalNumber, metadata)\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}", "import parse from './parse.js'\r\n\r\nexport default function parsePhoneNumberWithError(text, options, metadata) {\r\n\treturn parse(text, { ...options, v2: true }, metadata)\r\n}", "// Extracts the following properties from function arguments:\r\n// * input `text`\r\n// * `options` object\r\n// * `metadata` JSON\r\nexport default function normalizeArguments(args) {\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Otherwise istanbul would show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst isObject = _ => typeof _ === 'object'", "import parsePhoneNumberWithError_ from './parsePhoneNumberWithError_.js'\r\nimport normalizeArguments from './normalizeArguments.js'\r\n\r\nexport default function parsePhoneNumberWithError() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumberWithError_(text, options, metadata)\r\n}", "import parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumberWithError(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n", "import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber from './parsePhoneNumber_.js'\r\n\r\nexport default function isValidPhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumber(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isValid() || false\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { parsePhoneNumberWithError as _parsePhoneNumberWithError } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumberWithError() {\r\n\treturn withMetadataArgument(_parsePhoneNumberWithError, arguments)\r\n}\r\n", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { isValidPhoneNumber as _isValidPhoneNumber } from '../../core/index.js'\r\n\r\nexport function isValidPhoneNumber() {\r\n\treturn withMetadataArgument(_isValidPhoneNumber, arguments)\r\n}", "import { ConnectWalletParams } from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport {\n  defaultDemoConfigV1,\n  useNotifiDemoPreviewContext,\n  useNotifiSubscriptionContext,\n} from '../context';\nimport { useNotifiClientContext } from '../context/NotifiClientContext';\nimport {\n  formatTelegramForSubscription,\n  prefixTelegramWithSymbol,\n} from '../utils/stringUtils';\nimport { walletToSource } from '../utils/walletUtils';\nimport { useNotifiForm } from './../context/NotifiFormContext';\nimport { AlertConfiguration } from './../utils/AlertConfiguration';\n\nexport type ClientData = Readonly<{\n  alerts: ReadonlyArray<Types.AlertFragmentFragment>;\n  connectedWallets: ReadonlyArray<Types.ConnectedWallet>;\n  emailTargets: ReadonlyArray<Types.EmailTargetFragmentFragment>;\n  filters: ReadonlyArray<Types.FilterFragmentFragment>;\n  smsTargets: ReadonlyArray<Types.SmsTargetFragmentFragment>;\n  sources: ReadonlyArray<Types.SourceFragmentFragment>;\n  targetGroups: ReadonlyArray<Types.TargetGroupFragmentFragment>;\n  telegramTargets: ReadonlyArray<Types.TelegramTargetFragmentFragment>;\n  sourceGroups: ReadonlyArray<Types.SourceGroupFragmentFragment>;\n  discordTargets: ReadonlyArray<Types.DiscordTargetFragmentFragment>;\n}>;\n\nexport type SubscriptionData = Readonly<{\n  alerts: Readonly<Record<string, Types.AlertFragmentFragment>>;\n  email: string | null;\n  phoneNumber: string | null;\n  telegramId: string | null;\n  telegramConfirmationUrl: string | null;\n  isPhoneNumberConfirmed: boolean | null;\n  discordId: string | null;\n}>;\n\nexport type InstantSubscribe = Readonly<{\n  alertName: string;\n  alertConfiguration: AlertConfiguration | null;\n}>;\n\ntype useNotifiSubscribeProps = Readonly<{\n  targetGroupName?: string;\n}>;\n\nconst hasKey = <K extends string>(\n  obj: object,\n  key: K,\n): obj is object & { [k in K]: unknown } => {\n  return typeof obj === 'object' && obj !== null && key in obj;\n};\n\nexport const useNotifiSubscribe: ({\n  targetGroupName,\n}: useNotifiSubscribeProps) => Readonly<{\n  isAuthenticated: boolean;\n  isEmailConfirmationSent: boolean;\n  isInitialized: boolean;\n  isTokenExpired: boolean;\n  logIn: () => Promise<SubscriptionData>;\n  subscribe: (\n    alertConfigs: Record<string, AlertConfiguration | null>,\n  ) => Promise<SubscriptionData>;\n  subscribeWallet: (walletParams: ConnectWalletParams) => Promise<void>;\n  updateWallets: () => Promise<void>;\n  instantSubscribe: (\n    subscribeData: InstantSubscribe,\n  ) => Promise<SubscriptionData>;\n  updateTargetGroups: () => Promise<SubscriptionData>;\n  resendEmailVerificationLink: (emailId: string) => Promise<string>;\n  reload: () => Promise<SubscriptionData>;\n}> = ({ targetGroupName = 'Default' }: useNotifiSubscribeProps) => {\n  const { demoPreview } = useNotifiDemoPreviewContext();\n  const { isUsingFrontendClient } = useNotifiClientContext();\n\n  const { client } = useNotifiClientContext();\n\n  const {\n    formState,\n    setEmail: setFormEmail,\n    setTelegram: setFormTelegram,\n    setPhoneNumber: setFormPhoneNumber,\n  } = useNotifiForm();\n\n  const {\n    email: formEmail,\n    telegram: formTelegram,\n    phoneNumber: formPhoneNumber,\n  } = formState;\n\n  const {\n    params,\n    setAlerts,\n    setConnectedWallets,\n    setEmail,\n    setLoading,\n    setPhoneNumber,\n    setTelegramId,\n    setPhoneNumberErrorMessage,\n    useHardwareWallet,\n    resetErrorMessageState,\n    setTelegramErrorMessage,\n    setEmailErrorMessage,\n    setDiscordErrorMessage,\n    setUseDiscord,\n    useDiscord,\n    setDiscordTargetData,\n    discordTargetData: discordTargetDatafromSubscriptionContext,\n  } = useNotifiSubscriptionContext();\n\n  const { keepSubscriptionData = true, walletPublicKey } = params;\n\n  const [isEmailConfirmationSent, setIsEmailConfirmationSent] =\n    useState<boolean>(false);\n\n  const resendEmailVerificationLink = useCallback(\n    async (emailId: string) => {\n      const resend = await client.sendEmailTargetVerification({\n        targetId: emailId,\n      });\n\n      return resend;\n    },\n    [client.sendEmailTargetVerification],\n  );\n\n  const handleMissingDiscordTarget = (\n    discordTargets: ReadonlyArray<Types.DiscordTargetFragmentFragment>,\n  ): void => {\n    // Check for the default, and if none exists, use the first discord target.\n    const target =\n      discordTargets?.find((target) => target.name === 'Default') ||\n      discordTargets?.[0];\n\n    setDiscordTargetData(target);\n  };\n\n  const render = useCallback(\n    (newData: ClientData | null): SubscriptionData => {\n      const targetGroup = newData?.targetGroups.find(\n        (tg) => tg.name === targetGroupName,\n      );\n\n      const alerts: Record<string, Types.AlertFragmentFragment> = {};\n      newData?.alerts.forEach((alert) => {\n        if (alert?.name) {\n          alerts[alert.name] = alert;\n        }\n      });\n\n      setAlerts(alerts);\n      setConnectedWallets(newData?.connectedWallets ?? []);\n      const emailTarget = targetGroup?.emailTargets?.[0] ?? null;\n      const emailToSet = emailTarget?.emailAddress ?? '';\n\n      if (emailTarget !== null && emailTarget?.isConfirmed === false) {\n        setEmailErrorMessage({\n          type: 'recoverableError',\n          onClick: () => {\n            resendEmailVerificationLink(emailTarget.id ?? '');\n          },\n          message: 'Resend Link',\n        });\n      } else {\n        setEmailErrorMessage(undefined);\n      }\n\n      setFormEmail(emailToSet);\n      setEmail(emailToSet);\n\n      const phoneNumber = targetGroup?.smsTargets?.[0]?.phoneNumber ?? null;\n\n      const isPhoneNumberConfirmed =\n        targetGroup?.smsTargets?.[0]?.isConfirmed ?? null;\n\n      const phoneNumberToSet = phoneNumber ?? '';\n\n      if (!isPhoneNumberConfirmed) {\n        setPhoneNumberErrorMessage({\n          type: 'unrecoverableError',\n          message: 'Messages stopped',\n          tooltip: `Please text 'start' to the following number:\\n${\n            params.env === 'Production' ? '+1 206 222 3465' : '+1 253 880 1477 '\n          }`,\n        });\n      }\n\n      setFormPhoneNumber(phoneNumberToSet);\n      setPhoneNumber(phoneNumberToSet);\n\n      const telegramTarget = targetGroup?.telegramTargets?.[0];\n      const telegramId = telegramTarget?.telegramId;\n\n      const telegramIdWithSymbolAdded =\n        telegramId !== '' && telegramId?.length\n          ? prefixTelegramWithSymbol(telegramId)\n          : null;\n\n      setFormTelegram(telegramId ?? '');\n      setTelegramId(telegramIdWithSymbolAdded ?? '');\n\n      if (telegramTarget?.isConfirmed === false) {\n        setTelegramErrorMessage({\n          type: 'recoverableError',\n          onClick: () => {\n            if (!telegramTarget?.confirmationUrl) {\n              return;\n            }\n\n            window.open(telegramTarget?.confirmationUrl);\n          },\n          message: 'Verify ID',\n        });\n      } else {\n        setTelegramErrorMessage(undefined);\n      }\n\n      const discordTarget = targetGroup?.discordTargets?.find(\n        (it) => it?.name === 'Default',\n      );\n\n      const discordId = discordTarget?.id;\n\n      if (discordId) {\n        const {\n          isConfirmed,\n          userStatus,\n          verificationLink,\n          discordServerInviteLink,\n        } = discordTarget;\n\n        if (!isConfirmed) {\n          setDiscordErrorMessage({\n            type: 'recoverableError',\n            onClick: () => window.open(verificationLink, '_blank'),\n            message: 'Enable Bot',\n          });\n        } else if (userStatus === 'DISCORD_SERVER_NOT_JOINED') {\n          setDiscordErrorMessage({\n            type: 'recoverableError',\n            onClick: () => window.open(discordServerInviteLink, '_blank'),\n            message: 'Join Server',\n          });\n        } else {\n          setDiscordErrorMessage(undefined);\n        }\n        setUseDiscord(true);\n        setDiscordTargetData(discordTarget);\n      } else {\n        handleMissingDiscordTarget(newData?.discordTargets ?? []);\n        setUseDiscord(false);\n      }\n\n      return {\n        alerts,\n        email: emailTarget?.emailAddress ?? null,\n        isPhoneNumberConfirmed,\n        phoneNumber,\n        telegramConfirmationUrl: telegramTarget?.confirmationUrl ?? null,\n        telegramId: telegramTarget?.telegramId ?? null,\n        discordId: discordTarget?.id ?? null,\n      };\n    },\n    [\n      setAlerts,\n      setEmail,\n      setPhoneNumber,\n      setTelegramId,\n      setIsEmailConfirmationSent,\n    ],\n  );\n\n  const copyAuths = useCallback(\n    async (data: ClientData) => {\n      if (params.multiWallet !== undefined) {\n        params.multiWallet.ownedWallets.forEach((wallet) => {\n          const key = 'accountAddress';\n          const address = hasKey(wallet, key)\n            ? wallet[key]\n            : wallet.walletPublicKey;\n          if (\n            data.connectedWallets.find(\n              (cw) =>\n                cw?.address === address &&\n                cw?.walletBlockchain === wallet.walletBlockchain,\n            ) !== undefined\n          ) {\n            client.copyAuthorization(wallet.walletPublicKey).catch(console.log);\n          }\n        });\n      }\n    },\n    [client, params],\n  );\n\n  // Initial fetch\n  const didFetch = useRef(false);\n  useEffect(() => {\n    if (demoPreview) {\n      // Mockup info for demo preview card\n      setEmail(defaultDemoConfigV1.name);\n      setPhoneNumber('+101234567890');\n      setTelegramId(defaultDemoConfigV1.id ?? 'testTelegramId');\n      setUseDiscord(true);\n    }\n\n    if (client.isAuthenticated && !didFetch.current && !isUsingFrontendClient) {\n      didFetch.current = true;\n      client\n        .fetchData()\n        .then((data) => {\n          copyAuths(data);\n          render(data);\n        })\n        .catch((_e) => {\n          /* Intentionally empty */\n        });\n    }\n  }, [client.isAuthenticated]);\n\n  const logInViaHardwareWallet =\n    useCallback(async (): Promise<SubscriptionData> => {\n      if (demoPreview) {\n        throw new Error('Preview card does not support method call');\n      }\n      if (params.walletBlockchain !== 'SOLANA') {\n        throw new Error('Unsupported wallet blockchain');\n      }\n\n      const plugin = params.hardwareLoginPlugin;\n\n      // Obtain nonce from Notifi\n      const { logValue } = await client.beginLoginViaTransaction();\n\n      // Commit a transaction with the Memo program\n      const signature = await plugin.sendMessage(logValue);\n\n      // Inform Notifi of the signature so that we can complete login\n      await client.completeLoginViaTransaction({\n        transactionSignature: signature,\n      });\n\n      const newData = await client.fetchData();\n      return render(newData);\n    }, [walletPublicKey, client, params, render]);\n\n  const reload = useCallback(async (): Promise<SubscriptionData> => {\n    const newData = await client.fetchData(true);\n    copyAuths(newData);\n    const results = render(newData);\n    return results;\n  }, [client.fetchData, copyAuths, render]);\n\n  const logIn = useCallback(async (): Promise<SubscriptionData> => {\n    if (demoPreview)\n      throw new Error('Preview card does not support method call');\n    if (!client.isAuthenticated) {\n      if (useHardwareWallet) {\n        await logInViaHardwareWallet();\n      } else {\n        await client.logIn(params);\n      }\n    }\n\n    const newData = await client.fetchData();\n\n    copyAuths(newData);\n    const results = render(newData);\n    return results;\n  }, [\n    client.isAuthenticated,\n    client.logIn,\n    client.fetchData,\n    params,\n    useHardwareWallet,\n    logInViaHardwareWallet,\n    render,\n    setLoading,\n    copyAuths,\n  ]);\n\n  const updateAlertInternal = useCallback(\n    async (\n      alertParams: InstantSubscribe,\n      data: ClientData,\n      contacts: Readonly<{\n        finalEmail: string | undefined;\n        finalPhoneNumber: string | undefined;\n        finalTelegramId: string | undefined;\n        finalDiscordId: string | undefined;\n      }>,\n    ): Promise<Types.AlertFragmentFragment | null> => {\n      if (demoPreview) throw Error('Preview card does not support method call');\n      const { alertName, alertConfiguration } = alertParams;\n      const { finalEmail, finalPhoneNumber, finalTelegramId } = contacts;\n      const existingAlert = data.alerts.find(\n        (alert) => alert?.name === alertName,\n      );\n\n      const deleteThisAlert = async () => {\n        if (existingAlert !== undefined && existingAlert.id !== null) {\n          await client.deleteAlert({\n            alertId: existingAlert.id,\n            keepSourceGroup: keepSubscriptionData,\n            keepTargetGroup: keepSubscriptionData,\n          });\n        }\n      };\n\n      const ensureSource = async (\n        params: Types.CreateSourceInput,\n      ): Promise<Types.SourceFragmentFragment> => {\n        const existing = data.sources.find(\n          (s) =>\n            s.type === params.type &&\n            s.blockchainAddress === params.blockchainAddress &&\n            s.fusionEventTypeId === params.fusionEventTypeId,\n        );\n        if (existing !== undefined) {\n          return existing;\n        }\n\n        const created = await client.createSource(params);\n        return created;\n      };\n      if (alertConfiguration === null) {\n        await deleteThisAlert();\n        return null;\n      } else if (alertConfiguration.type === 'multiple') {\n        const {\n          filterOptions,\n          filterType,\n          sources: sourcesInput,\n          sourceGroupName,\n          maintainSourceGroup,\n        } = alertConfiguration;\n\n        const sources = await Promise.all(sourcesInput.map(ensureSource));\n        const filter = sources\n          .flatMap((s) => s.applicableFilters)\n          .find((f) => f?.filterType === filterType);\n        if (filter === undefined || filter.id === null) {\n          await deleteThisAlert();\n          throw new Error(\n            `No applicableFilters filter for sources: ${JSON.stringify(\n              sources,\n            )}`,\n          );\n        } else {\n          const sourceIds: string[] = [];\n          const existingSourceGroup = data.sourceGroups.find(\n            (sourceGroup) =>\n              sourceGroup?.name === (sourceGroupName ?? alertName),\n          );\n\n          if (maintainSourceGroup && existingSourceGroup) {\n            existingSourceGroup.sources?.forEach((s) => {\n              const id = s?.id;\n              if (id !== null && id !== undefined) {\n                sourceIds.push(id);\n              }\n            });\n          } else {\n            sources.forEach((s) => {\n              if (s.id !== null) {\n                sourceIds.push(s.id);\n              }\n            });\n          }\n\n          // Call serially because of limitations\n          await deleteThisAlert();\n\n          const alert = await client.createAlert({\n            emailAddress: finalEmail,\n            filterId: filter.id,\n            filterOptions: filterOptions ?? undefined,\n            groupName: 'managed',\n            name: alertName,\n            phoneNumber: finalPhoneNumber,\n            sourceId: '',\n            targetGroupName,\n            telegramId: finalTelegramId,\n            sourceIds,\n            includeDiscord: useDiscord,\n            sourceGroupName,\n          });\n\n          return alert;\n        }\n      } else {\n        const {\n          createSource: createSourceParam,\n          filterOptions,\n          filterType,\n          sourceType,\n          sourceGroupName,\n          maintainSourceGroup,\n        } = alertConfiguration;\n\n        let source: Types.Maybe<Types.SourceFragmentFragment>;\n\n        if (createSourceParam !== undefined) {\n          const eventTypeId = createSourceParam.fusionEventTypeId;\n          const address = createSourceParam.address;\n          const name =\n            eventTypeId !== undefined ? `${eventTypeId}:;:${address}` : address;\n          source = await ensureSource({\n            name,\n            blockchainAddress: address,\n            type: sourceType,\n            fusionEventTypeId: eventTypeId,\n          });\n        } else {\n          source = data.sources.find((s) => s.type === sourceType);\n        }\n\n        const filter = source?.applicableFilters?.find(\n          (f) => f?.filterType === filterType,\n        );\n\n        if (\n          source === undefined ||\n          source.id === null ||\n          filter === undefined ||\n          filter.id === null\n        ) {\n          await deleteThisAlert();\n          throw new Error(\n            `No applicableFilters filter for source: ${JSON.stringify(source)}`,\n          );\n        } else if (\n          existingAlert !== undefined &&\n          existingAlert.id !== null &&\n          existingAlert.filterOptions === JSON.stringify(filterOptions)\n        ) {\n          const alert = await client.updateAlert({\n            alertId: existingAlert.id,\n            emailAddress: finalEmail,\n            phoneNumber: finalPhoneNumber,\n            telegramId: finalTelegramId,\n            includeDiscord: useDiscord,\n          });\n\n          return alert;\n        } else {\n          // Call serially because of limitations\n\n          const sourceIds: string[] = [];\n\n          const existingSourceGroup = data.sourceGroups.find(\n            (sourceGroup) =>\n              sourceGroup?.name === (sourceGroupName ?? alertName),\n          );\n\n          if (maintainSourceGroup && existingSourceGroup) {\n            existingSourceGroup.sources?.forEach((s) => {\n              const id = s?.id;\n              if (id !== null && id !== undefined) {\n                sourceIds.push(id);\n              }\n            });\n          } else {\n            sourceIds.push(source.id);\n          }\n          await deleteThisAlert();\n          const alert = await client.createAlert({\n            emailAddress: finalEmail,\n            filterId: filter.id,\n            filterOptions: filterOptions ?? undefined,\n            groupName: 'managed',\n            name: alertName,\n            phoneNumber: finalPhoneNumber,\n            sourceId: '',\n            sourceIds,\n            targetGroupName,\n            telegramId: finalTelegramId,\n            sourceGroupName,\n            includeDiscord: useDiscord,\n          });\n\n          return alert;\n        }\n      }\n    },\n    [],\n  );\n\n  const subscribe = useCallback(\n    async (\n      alertConfigs: Record<string, AlertConfiguration | null>,\n    ): Promise<SubscriptionData> => {\n      if (demoPreview) {\n        throw new Error('Preview card does not support method call');\n      }\n      const configurations = { ...alertConfigs };\n\n      const names = Object.keys(configurations);\n\n      const finalEmail = formEmail === '' ? undefined : formEmail;\n      const finalTelegramId =\n        formTelegram === ''\n          ? undefined\n          : formatTelegramForSubscription(formTelegram);\n\n      let finalPhoneNumber = undefined;\n      if (isValidPhoneNumber(formPhoneNumber)) {\n        finalPhoneNumber = formPhoneNumber;\n      }\n\n      setLoading(true);\n\n      if (!client.isAuthenticated) {\n        await logIn();\n      }\n      const data = await client.fetchData();\n\n      //\n      // Yes, we're ignoring the server side values and just using whatever the client typed in\n      // We should eventually always start from a logged in state from client having called\n      // \"refresh\" or \"fetchData\" to obtain existing settings first\n      //\n\n      const existingDiscordTarget = data.discordTargets.find(\n        (target) => target.name === 'Default',\n      );\n\n      let finalDiscordId: string | undefined = undefined;\n\n      if (useDiscord === true) {\n        if (existingDiscordTarget !== undefined) {\n          finalDiscordId = existingDiscordTarget.id;\n        } else {\n          finalDiscordId = await client.createDiscordTarget('Default');\n        }\n      }\n\n      const newResults: Record<string, Types.AlertFragmentFragment> = {};\n      for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n\n        const config = configurations[name];\n\n        let alert = null;\n        try {\n          alert = await updateAlertInternal(\n            {\n              alertName: name,\n              alertConfiguration: config,\n            },\n            data,\n            {\n              finalEmail,\n              finalPhoneNumber,\n              finalTelegramId,\n              finalDiscordId,\n            },\n          );\n        } catch (e) {\n          console.log(`Error updating alert ${name}: ${e}`);\n        }\n\n        if (alert !== null) {\n          newResults[name] = alert;\n        }\n      }\n\n      if (\n        Object.getOwnPropertyNames(newResults).length === 0 &&\n        keepSubscriptionData\n      ) {\n        // We didn't create or update any alert, manually update the targets\n        await client.ensureTargetGroup({\n          emailAddress: finalEmail,\n          name: targetGroupName,\n          phoneNumber: finalPhoneNumber,\n          telegramId: finalTelegramId,\n          includeDiscord: useDiscord,\n        });\n      }\n\n      const newData = await client.fetchData();\n\n      const results = render(newData);\n      setLoading(false);\n      return results;\n    },\n    [client, formEmail, formPhoneNumber, formTelegram, logIn, setLoading],\n  );\n\n  const updateTargetGroups = useCallback(async () => {\n    resetErrorMessageState();\n\n    if (demoPreview) {\n      throw new Error('Preview card does not support method call');\n    }\n\n    const finalEmail = formEmail === '' ? undefined : formEmail;\n\n    const finalTelegramId =\n      formTelegram === ''\n        ? undefined\n        : formatTelegramForSubscription(formTelegram);\n\n    let finalPhoneNumber = undefined;\n\n    if (isValidPhoneNumber(formPhoneNumber)) {\n      finalPhoneNumber = formPhoneNumber;\n    }\n\n    setLoading(true);\n    if (!client.isAuthenticated) {\n      await logIn();\n    }\n\n    await client.ensureTargetGroup({\n      emailAddress: finalEmail,\n      name: targetGroupName,\n      phoneNumber: finalPhoneNumber,\n      telegramId: finalTelegramId,\n      includeDiscord: useDiscord,\n    });\n\n    const newData = await client.fetchData();\n\n    const results = render(newData);\n    setLoading(false);\n    return results;\n  }, [\n    client,\n    formEmail,\n    formPhoneNumber,\n    formTelegram,\n    render,\n    setLoading,\n    useDiscord,\n  ]);\n\n  const instantSubscribe = useCallback(\n    async (alertData: InstantSubscribe) => {\n      if (demoPreview)\n        throw new Error('Preview card does not support method call');\n      const finalEmail = formEmail === '' ? undefined : formEmail;\n\n      const finalTelegramId =\n        formTelegram === ''\n          ? undefined\n          : formatTelegramForSubscription(formTelegram);\n      let finalPhoneNumber = undefined;\n      if (isValidPhoneNumber(formPhoneNumber)) {\n        finalPhoneNumber = formPhoneNumber;\n      }\n\n      const finalDiscordId =\n        useDiscord === false || !discordTargetDatafromSubscriptionContext?.id\n          ? undefined\n          : discordTargetDatafromSubscriptionContext?.id;\n\n      try {\n        setLoading(true);\n        await logIn();\n        const data = await client.fetchData();\n\n        //\n        // Yes, we're ignoring the server side values and just using whatever the client typed in\n        // We should eventually always start from a logged in state from client having called\n        // \"refresh\" or \"fetchData\" to obtain existing settings first\n        //\n\n        const alert = await updateAlertInternal(alertData, data, {\n          finalEmail,\n          finalPhoneNumber,\n          finalTelegramId,\n          finalDiscordId,\n        });\n\n        if (alert === null && keepSubscriptionData) {\n          // We didn't create or update any alert, manually update the targets\n          await client.ensureTargetGroup({\n            emailAddress: finalEmail,\n            name: targetGroupName,\n            phoneNumber: finalPhoneNumber,\n            telegramId: finalTelegramId,\n            includeDiscord: useDiscord,\n          });\n        }\n      } catch (e) {\n        throw new Error(`Something went wrong: ${e}`);\n      } finally {\n        setLoading(false);\n      }\n      const newData = await client.fetchData();\n      const results = render(newData);\n      return results;\n    },\n    [\n      client,\n      formEmail,\n      formPhoneNumber,\n      formTelegram,\n      logIn,\n      setLoading,\n      subscribe,\n      render,\n    ],\n  );\n\n  const subscribeWallet = useCallback(\n    async (params: ConnectWalletParams) => {\n      if (demoPreview)\n        throw new Error('Preview card does not support method call');\n      setLoading(true);\n\n      try {\n        if (!client.isAuthenticated) {\n          await logIn();\n        }\n\n        await client.connectWallet(params);\n\n        const newData = await client.fetchData();\n\n        await client.ensureSourceGroup({\n          name: 'User Wallets',\n          sources: newData.connectedWallets.map(walletToSource),\n        });\n\n        const finalData = await client.fetchData();\n        copyAuths(finalData);\n        render(finalData);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [client, logIn, setLoading, setConnectedWallets],\n  );\n\n  const updateWallets = useCallback(async () => {\n    setLoading(true);\n    if (demoPreview)\n      throw new Error('Preview card does not support method call');\n    try {\n      if (!client.isAuthenticated) {\n        await logIn();\n      }\n\n      const newData = await client.fetchData();\n\n      await client.ensureSourceGroup({\n        name: 'User Wallets',\n        sources: newData.connectedWallets.map(walletToSource),\n      });\n\n      const finalData = await client.fetchData();\n      render(finalData);\n    } finally {\n      setLoading(false);\n    }\n  }, [client, logIn, setLoading, render]);\n\n  return {\n    isEmailConfirmationSent,\n    resendEmailVerificationLink,\n    instantSubscribe,\n    isAuthenticated: client.isAuthenticated,\n    isInitialized: client.isInitialized,\n    isTokenExpired: client.isTokenExpired,\n    logIn,\n    subscribe,\n    updateTargetGroups,\n    subscribeWallet,\n    updateWallets,\n    reload,\n  };\n};\n", "export function addressEllipsis(\n  str: string | undefined,\n  index?: number,\n): string | undefined {\n  index = index || 6;\n\n  if (!str || str.length < 11) {\n    return str;\n  }\n\n  return str.slice(0, index) + '...' + str.slice(str.length - index);\n}\n\nexport function formatTelegramForSubscription(telegramId: string) {\n  if (telegramId.startsWith('@')) {\n    return telegramId.slice(1);\n  }\n  return telegramId;\n}\n\nexport function prefixCharacter(value: string, character: string) {\n  return character + value;\n}\n\nexport function prefixTelegramWithSymbol(telegramId: string) {\n  if (telegramId.startsWith('@')) {\n    return telegramId;\n  }\n  return prefixCharacter(telegramId, '@');\n}\n", "import { Types } from '@notifi-network/notifi-graphql';\n\nexport const walletToSourceType = (\n  wallet: Types.ConnectedWallet,\n): Types.CreateSourceInput['type'] => {\n  switch (wallet?.walletBlockchain) {\n    case 'ACALA':\n      return 'ACALA_WALLET';\n    case 'APTOS':\n      return 'APTOS_WALLET';\n    case 'ARBITRUM':\n      return 'ARBITRUM_WALLET';\n    case 'AVALANCHE':\n      return 'AVALANCHE_WALLET';\n    case 'BINANCE':\n      return 'BINANCE_WALLET';\n    case 'ETHEREUM':\n      return 'ETHEREUM_WALLET';\n    case 'BASE':\n      return 'ETHEREUM_WALLET';\n    case 'POLYGON':\n      return 'POLYGON_WALLET';\n    case 'SOLANA':\n      return 'SOLANA_WALLET';\n    case 'OPTIMISM':\n      return 'OPTIMISM_WALLET';\n    case 'SUI':\n      return 'SUI_WALLET';\n    case 'ZKSYNC':\n      return 'ZKSYNC_WALLET';\n    default:\n      throw new Error('Unsupported walletType');\n  }\n};\n\nexport const walletToSourceAddress = (\n  wallet: Types.ConnectedWalletFragmentFragment,\n): Types.CreateSourceInput['blockchainAddress'] => {\n  if (wallet?.address === null) {\n    throw new Error('Invalid connected wallet');\n  }\n  return wallet?.address;\n};\n\nexport const walletToSource = (\n  wallet: Types.ConnectedWalletFragmentFragment,\n): Types.CreateSourceInput => {\n  const sourceAddress = walletToSourceAddress(wallet);\n  const sourceType = walletToSourceType(wallet);\n\n  return {\n    name: `${sourceType} ${sourceAddress}`,\n    blockchainAddress: sourceAddress,\n    type: sourceType,\n  };\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport { useEffect, useState } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiDemoPreviewContext,\n} from '../context';\nimport { ErrorViewState } from './useFetchedCardState';\n\ntype ClientFetchSubscriptionCardInput = Omit<\n  Types.FindTenantConfigInput,\n  'tenant'\n>;\n\nexport type LoadingState = Readonly<{\n  state: 'loading';\n}>;\n\nexport type Data = CardConfigItemV1;\n\nexport type FetchedState = Readonly<{\n  state: 'fetched';\n  data: Data;\n}>;\n\nexport type SubscriptionCardState =\n  | LoadingState\n  | FetchedState\n  | ErrorViewState;\n\nexport const useSubscriptionCard = (\n  input: ClientFetchSubscriptionCardInput,\n): SubscriptionCardState => {\n  const [state, setState] = useState<SubscriptionCardState>({\n    state: 'loading',\n  });\n  const { demoPreview } = useNotifiDemoPreviewContext();\n  const { client, isUsingFrontendClient, frontendClient } =\n    useNotifiClientContext();\n\n  useEffect(() => {\n    if (demoPreview) {\n      return setState(() => ({\n        state: 'fetched',\n        data: demoPreview.data,\n      }));\n    }\n\n    let card: CardConfigItemV1 | undefined;\n    setState({ state: 'loading' });\n    (isUsingFrontendClient ? frontendClient : client)\n      .fetchSubscriptionCard(input)\n      .then((result) => {\n        if ('dataJson' in result) {\n          if (!result.dataJson) {\n            return Promise.reject(new Error('Failed to fetch data'));\n          }\n          card = JSON.parse(result.dataJson);\n        } else if ('version' in result && result.version !== 'IntercomV1') {\n          card = result;\n        }\n\n        if (card?.version !== 'v1') {\n          return Promise.reject(new Error('Unsupported config format'));\n        }\n\n        setState({\n          state: 'fetched',\n          data: card,\n        });\n      })\n      .catch((error: unknown) => {\n        setState({\n          state: 'error',\n          reason: error,\n        });\n      });\n  }, [input.id, input.type, demoPreview, isUsingFrontendClient]);\n\n  return state;\n};\n", "import { useState } from 'react';\n\nexport type PreviewViewState = Readonly<{\n  state: 'preview';\n}>;\nexport type AlertHistoryViewState = Readonly<{\n  state: 'history';\n}>;\nexport type EditInfoViewState = Readonly<{\n  state: 'edit';\n}>;\nexport type ExpiredTokenViewState = Readonly<{\n  state: 'expired';\n}>;\nexport type VerifyWalletViewState = Readonly<{\n  state: 'verify';\n}>;\nexport type SignUpViewState = Readonly<{\n  state: 'signup';\n}>;\nexport type VerifyOnboardingViewState = Readonly<{\n  state: 'verifyonboarding';\n}>;\n\nexport type ErrorViewState = Readonly<{\n  state: 'error';\n  reason: unknown;\n}>;\n\nexport type FetchedCardViewState =\n  | PreviewViewState\n  | AlertHistoryViewState\n  | EditInfoViewState\n  | VerifyWalletViewState\n  | ExpiredTokenViewState\n  | SignUpViewState\n  | VerifyOnboardingViewState\n  | ErrorViewState;\n\nexport const useFetchedCardState = () => {\n  const [cardView, setCardView] = useState<FetchedCardViewState>({\n    state: 'history',\n  });\n\n  return {\n    cardView,\n    setCardView,\n  };\n};\n", "import { useEffect, useMemo, useState } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../context';\n\nexport const useUnreadState = () => {\n  const { frontendClient, isUsingFrontendClient } = useNotifiClientContext();\n\n  if (!isUsingFrontendClient)\n    throw new Error(\n      'Number badge is only available when frontendClient is enabled',\n    );\n\n  const {\n    params: { walletPublicKey },\n  } = useNotifiSubscriptionContext();\n\n  const [unreadNotificationCount, setUnreadNotificationCount] = useState(0);\n  const hasUnreadNotification = useMemo(\n    () => (unreadNotificationCount > 0 ? true : false),\n    [unreadNotificationCount],\n  );\n  const { isClientAuthenticated } = useMemo(() => {\n    return {\n      isClientAuthenticated:\n        frontendClient.userState?.status === 'authenticated',\n    };\n  }, [frontendClient.userState?.status]);\n\n  useEffect(() => {\n    if (!walletPublicKey || !isClientAuthenticated) return;\n\n    frontendClient\n      .getUnreadNotificationHistoryCount()\n      .then((res) => {\n        const unreadNotificationCount = res.count;\n        setUnreadNotificationCount(unreadNotificationCount);\n      })\n      .catch((_e) => {\n        /* Intentionally empty (Concurrent can only possibly happens here instead of inside interval) */\n      });\n    const interval = setInterval(() => {\n      if (!walletPublicKey || !isClientAuthenticated) return;\n\n      frontendClient.getUnreadNotificationHistoryCount().then((res) => {\n        const unreadNotificationCount = res.count;\n        setUnreadNotificationCount(unreadNotificationCount);\n      });\n    }, Math.floor(Math.random() * 5000) + 5000); // a random interval between 5 and 10 seconds to avoid spamming the server\n\n    return () => clearInterval(interval);\n  }, [isClientAuthenticated, walletPublicKey, isUsingFrontendClient]);\n\n  return { hasUnreadNotification, unreadNotificationCount };\n};\n", "import { Types } from '@notifi-network/notifi-graphql';\nimport { useCallback } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../context';\n\nexport const useFrontendClientLogin = () => {\n  const { params, frontendClient, updateFrontendClientStatus } =\n    useNotifiClientContext();\n\n  const { useHardwareWallet } = useNotifiSubscriptionContext();\n\n  const logIn = useCallback(async (): Promise<Types.UserFragmentFragment> => {\n    if (useHardwareWallet && params.walletBlockchain === 'SOLANA') {\n      const plugin = params.hardwareLoginPlugin;\n      const { nonce } = await frontendClient.beginLoginViaTransaction({\n        walletAddress: params.walletPublicKey,\n        walletBlockchain: params.walletBlockchain,\n      });\n\n      const transactionSignature = await plugin.sendMessage(nonce);\n\n      const logInResult = await frontendClient.completeLoginViaTransaction({\n        walletAddress: params.walletPublicKey,\n        walletBlockchain: params.walletBlockchain,\n        transactionSignature,\n      });\n\n      if (logInResult?.completeLogInByTransaction === undefined) {\n        throw new Error('Log in failed');\n      }\n      updateFrontendClientStatus();\n      return logInResult.completeLogInByTransaction;\n    } else {\n      const result = await frontendClient.logIn(params);\n      updateFrontendClientStatus();\n      return result;\n    }\n  }, [useHardwareWallet, frontendClient, params]);\n\n  return logIn;\n};\n", "import { useState } from 'react';\n\nexport type startChatView = Readonly<{\n  state: 'startChatView';\n}>;\n\nexport type chatWindowView = Readonly<{\n  state: 'chatWindowView';\n}>;\n\nexport type settingView = Readonly<{\n  state: 'settingView';\n}>;\n\nexport type loadingView = Readonly<{\n  state: 'loadingView';\n}>;\n\nexport type IntercomCardView =\n  | startChatView\n  | chatWindowView\n  | settingView\n  | loadingView;\n\nexport const useIntercomCardState = () => {\n  const [intercomCardView, setIntercomCardView] = useState<IntercomCardView>({\n    state: 'loadingView',\n  });\n\n  return {\n    intercomCardView,\n    setIntercomCardView,\n  };\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport React, {\n  PropsWithChildren,\n  createContext,\n  useContext,\n  useMemo,\n} from 'react';\n\nimport { FetchedCardViewState, WebhookContactInfo } from '../hooks';\n\nexport type DemoPreview = {\n  view: FetchedCardViewState['state'];\n  data: CardConfigItemV1;\n};\n\nexport const defaultDemoConfigV1: CardConfigItemV1 = {\n  version: 'v1',\n  id: '@notifi.network', // Shown as dummy telegram id\n  name: 'notifi@notifi.network', // Shown as dummy email field\n  eventTypes: [],\n  inputs: [],\n  contactInfo: {\n    sms: {\n      active: true,\n      supportedCountryCodes: ['+1', '+886'],\n    },\n    email: {\n      active: true,\n    },\n    telegram: {\n      active: true,\n    },\n    discord: {\n      active: false,\n    },\n    webhook: {} as unknown as WebhookContactInfo,\n  },\n};\n\nexport type NotifiDemoPreviewContextData = Readonly<{\n  demoPreview: DemoPreview;\n}>;\n\nconst NotifiDemoPreviewContext = createContext<NotifiDemoPreviewContextData>(\n  {} as unknown as NotifiDemoPreviewContextData, // Intentionally empty in default\n);\n\nexport const NotifiDemoPreviewContextProvider: React.FC<\n  PropsWithChildren<DemoPreview>\n> = ({ children, view, data }) => {\n  const demoPreview = useMemo(() => ({ view, data }), [view, data]);\n\n  return (\n    <NotifiDemoPreviewContext.Provider value={{ demoPreview }}>\n      {children}\n    </NotifiDemoPreviewContext.Provider>\n  );\n};\n\nexport const useNotifiDemoPreviewContext = () =>\n  useContext(NotifiDemoPreviewContext);\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport type { DeepPartialReadonly } from '../utils';\nimport {\n  NotifiDisclosureStatement,\n  NotifiDisclosureStatementProps,\n} from './NotifiDisclosureStatement';\nimport { NotifiLogo } from './NotifiLogo';\n\nexport type NotifiFooterProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    poweredBy: string;\n    logoSvg: string;\n    link: string;\n    spacer: string;\n    disclosure: NotifiDisclosureStatementProps['classNames'];\n  }>;\n  copy?: DeepPartialReadonly<{\n    poweredBy: string;\n    learnMore: string;\n    disclosure: string;\n  }>;\n}>;\n\nexport const NotifiFooter: React.FC<NotifiFooterProps> = ({\n  classNames,\n  copy,\n}: NotifiFooterProps) => {\n  return (\n    <div className={clsx('NotifiFooter__container', classNames?.container)}>\n      {copy?.disclosure ? (\n        <NotifiDisclosureStatement\n          disclosureCopy={copy?.disclosure}\n          classNames={classNames?.disclosure}\n        />\n      ) : null}\n      <a\n        href=\"https://notifi.network\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={clsx(\n          'NotifiFooter__poweredByContainer',\n          classNames?.container,\n        )}\n      >\n        <span\n          className={clsx('NotifiFooter__poweredBy', classNames?.poweredBy)}\n        >\n          {copy?.poweredBy ?? 'Powered by'}\n        </span>\n        <NotifiLogo\n          className={clsx('NotifiFooter__logoSvg', classNames?.logoSvg)}\n        />\n      </a>\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { DeepPartialReadonly } from '../utils';\n\nexport type NotifiDisclosureStatementProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    hyperlink: string;\n  }>;\n  disclosureCopy: string;\n}>;\nexport const NotifiDisclosureStatement: React.FC<\n  NotifiDisclosureStatementProps\n> = ({ classNames, disclosureCopy }) => {\n  return (\n    <div className={clsx('NotifiDisclosure__container', classNames?.container)}>\n      <label className={clsx('NotifiDisclosure__label', classNames?.label)}>\n        {disclosureCopy}{' '}\n      </label>\n      <a\n        className={clsx('NotifiDisclosure__hyperlink', classNames?.hyperlink)}\n        href=\"https://notifi.network\"\n        target=\"_blank\"\n      >\n        Learn more\n      </a>\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const NotifiLogo: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"39\"\n      height=\"9\"\n      viewBox=\"0 0 39 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.92661 5.02549C7.68505 5.09427 7.43002 5.1311 7.16639 5.1311C5.63641 5.1311 4.39611 3.8908 4.39611 2.36082C4.39611 2.0878 4.43561 1.824 4.50919 1.57483H1.63872C1.19751 1.57483 0.839844 1.9325 0.839844 2.3737V7.86272C0.839844 8.30393 1.19751 8.66159 1.63872 8.66159H7.12774C7.56894 8.66159 7.92661 8.30393 7.92661 7.86272V5.02549Z\"\n        fill=\"white\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        d=\"M9.5013 1.96855C9.5013 3.05574 8.61995 3.93709 7.53275 3.93709C6.44556 3.93709 5.56421 3.05574 5.56421 1.96855C5.56421 0.881348 6.44556 0 7.53275 0C8.61995 0 9.5013 0.881348 9.5013 1.96855Z\"\n        fill=\"url(#paint0_linear_872_5572)\"\n      />\n      <path\n        d=\"M17.9031 5.61338V8.60198H19.1442V5.61338C19.1442 3.77653 18.1911 2.57513 16.6819 2.57513C15.9471 2.57513 15.2918 3.012 15.0734 3.61766V2.64463H13.8323V8.60198H15.0734V5.6233C15.0734 4.57084 15.6592 3.81624 16.4634 3.81624C17.3372 3.81624 17.9031 4.52119 17.9031 5.61338Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        d=\"M19.9738 5.61338C19.9738 7.34101 21.2546 8.66155 22.9028 8.66155C24.551 8.66155 25.8219 7.34101 25.8219 5.61338C25.8219 3.89567 24.551 2.57513 22.9028 2.57513C21.2546 2.57513 19.9738 3.89567 19.9738 5.61338ZM22.9028 3.81624C23.856 3.81624 24.5808 4.5907 24.5808 5.61338C24.5808 6.64598 23.856 7.42044 22.9028 7.42044C21.9496 7.42044 21.2149 6.64598 21.2149 5.61338C21.2149 4.5907 21.9496 3.81624 22.9028 3.81624Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        d=\"M27.5834 1.38365L27.2855 2.64463H26.4019V3.81624H27.2855V6.55662C27.2855 8.01617 27.8813 8.60198 29.3011 8.60198H29.8174V7.37079H29.4203C28.8047 7.37079 28.5267 7.10271 28.5267 6.48712V3.81624H29.8174V2.64463H28.5267V1.38365H27.5834Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        d=\"M31.9217 8.60198V2.64463H30.6806V8.60198H31.9217Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        d=\"M38.2799 8.60198V2.64463H34.8644V2.20776C34.8644 1.59217 35.1424 1.31415 35.758 1.31415H36.1551V0.0928955H35.6388C34.219 0.0928955 33.6233 0.668778 33.6233 2.13826V2.64463H32.7495V3.81624H33.6233V8.60198H34.8644V3.81624H37.0388V8.60198H38.2799Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M31.1573 0C30.8066 0 30.6804 0.192486 30.6804 0.466236V1.46139H31.6535C31.9914 1.46139 32.1418 1.34309 32.1418 1.00946V0.466236C32.1418 0.15399 31.9358 0 31.6193 0H31.1573Z\"\n        fill=\"black\"\n        className=\"notifiLogo-letters\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_872_5572\"\n          x1=\"8.72155\"\n          y1=\"0.306786\"\n          x2=\"6.8297\"\n          y2=\"3.93709\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#FE7970\" />\n          <stop offset=\"1\" stopColor=\"#FEB776\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n", "import clsx from 'clsx';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { SmsIcon } from '../assets/SmsIcon';\nimport { DialCode, countryMap } from '../constants/countryData';\nimport { useNotifiForm } from '../context';\nimport type { DeepPartialReadonly } from '../utils';\nimport { splitPhoneNumber } from '../utils/phoneUtils';\nimport NotifiSmsDropdownOption from './NotifiSmsDropdownOption';\n\nexport type NotifiSmsInputProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    input: string;\n    dropdownContainer: string;\n    dropdownOption: string;\n    dropdownSelectField: string;\n    label: string;\n    errorMessage: string;\n  }>;\n  copy?: DeepPartialReadonly<{\n    placeholder: string;\n    label: string;\n  }>;\n  disabled: boolean;\n  allowedCountryCodes: string[];\n  intercomSmsInputStyle?: string;\n  intercomSmsDropdownContainerStyle?: string;\n  intercomSmsDropdownSelectStyle?: string;\n  intercomSmsInputContainerStyle?: string;\n  intercomView?: boolean;\n}>;\n\nexport const NotifiSmsInput: React.FC<NotifiSmsInputProps> = ({\n  allowedCountryCodes,\n  classNames,\n  copy,\n  disabled,\n  intercomSmsDropdownContainerStyle,\n  intercomSmsDropdownSelectStyle,\n  intercomSmsInputContainerStyle,\n  intercomSmsInputStyle,\n  intercomView,\n}: NotifiSmsInputProps) => {\n  const {\n    formErrorMessages,\n    formState,\n    setPhoneNumber,\n    setPhoneNumberErrorMessage,\n    setHasChanges,\n  } = useNotifiForm();\n\n  const { phoneNumber: phoneNumberErrorMessage } = formErrorMessages;\n\n  const { phoneNumber } = formState;\n\n  const [phoneValues, setPhoneValues] = useState({\n    baseNumber: '',\n    dialCode: '+1',\n  });\n  const [isShowOption, setShowOption] = useState(false);\n\n  const handleShowOption = () => {\n    setShowOption(!isShowOption);\n  };\n\n  const handleSelected = useCallback(\n    (dialCode: string) => {\n      setPhoneValues({ ...phoneValues, dialCode });\n      setPhoneNumber(dialCode + phoneValues.baseNumber);\n      setShowOption(false);\n    },\n    [phoneValues, setPhoneNumber, setPhoneValues],\n  );\n\n  const handleBaseNumberChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n      const onlyNumberInput = event.target.value.replace(/[^\\d]/g, '');\n\n      setPhoneValues({ ...phoneValues, baseNumber: onlyNumberInput });\n      setPhoneNumber(phoneValues.dialCode + event.target.value);\n    },\n    [phoneValues, setPhoneNumber, setPhoneValues],\n  );\n\n  const splitPhoneValues = useCallback(() => {\n    if (!phoneNumber) {\n      return;\n    }\n\n    if (isValidPhoneNumber(phoneNumber)) {\n      const { baseNumber: number, countryCallingCode } =\n        splitPhoneNumber(phoneNumber);\n      if (!countryCallingCode || !number) {\n        throw new Error('Improper phone');\n      }\n\n      setPhoneValues({\n        baseNumber: number,\n        dialCode: `+${countryCallingCode}`,\n      });\n      return;\n    }\n  }, [phoneNumber, handleSelected]);\n\n  useEffect(() => {\n    if (phoneNumber) {\n      splitPhoneValues();\n    }\n  }, [phoneNumber]);\n\n  useEffect(() => {\n    if (phoneValues.baseNumber === '' && phoneNumber !== '') {\n      setPhoneNumber('');\n    }\n  }, [phoneValues.baseNumber, setPhoneNumber, phoneNumber]);\n\n  const validateSmsInput = useCallback(() => {\n    if (phoneNumber === '') {\n      return;\n    }\n\n    if (!isValidPhoneNumber(phoneNumber)) {\n      setPhoneNumberErrorMessage(\n        'The phone number is invalid. Please try again',\n      );\n    }\n  }, [phoneNumber, setPhoneNumberErrorMessage]);\n\n  return (\n    <>\n      {intercomView ? null : (\n        <label className={clsx('NotifiSmsInput__label', classNames?.label)}>\n          {copy?.label}\n        </label>\n      )}\n      <div\n        className={clsx(\n          'NotifiSmsInput__container',\n          intercomSmsInputContainerStyle,\n          classNames?.container,\n        )}\n      >\n        <SmsIcon className={'NotifiInput__icon'} />\n        <div\n          className={clsx(\n            'NotifiSmsInput__dropdownContainer',\n            intercomSmsDropdownContainerStyle,\n            classNames?.dropdownContainer,\n          )}\n        >\n          <div\n            className={clsx(\n              'NotifiSmsInput__dropdownSelect',\n              intercomSmsDropdownSelectStyle,\n              classNames?.dropdownSelectField,\n            )}\n            tabIndex={0}\n            onBlur={() => {\n              setShowOption(false);\n            }}\n          >\n            <div\n              className=\"NotifiSmsInput__dropdownSelected\"\n              onClick={handleShowOption}\n            >\n              <div className=\"NotifiSmsInput__dropdownSelectValue\">\n                {phoneValues.dialCode}\n              </div>\n              <input\n                className=\"NotifiSmsInput__dropdownInput\"\n                type=\"hidden\"\n                value={phoneValues.dialCode}\n                onChange={(e) => {\n                  setHasChanges(true);\n                  handleBaseNumberChange(e);\n                }}\n              />\n              <svg\n                className=\"NotifiSmsInput__dropdownSelectIcon\"\n                viewBox=\"0 0 9 5\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M0.539062 0.916016L4.4974 4.87435L8.45573 0.916016H0.539062Z\"\n                  fill=\"inherit\"\n                />\n              </svg>\n            </div>\n            {isShowOption && (\n              <ul className=\"NotifiSmsInput__dropdownOptionList\">\n                {allowedCountryCodes.map((code) => {\n                  const countryData = countryMap[code as DialCode];\n                  return (\n                    <NotifiSmsDropdownOption\n                      key={code}\n                      countryData={countryData}\n                      phoneValues={phoneValues}\n                      onSelected={(dialCode) => handleSelected(dialCode)}\n                    />\n                  );\n                })}\n              </ul>\n            )}\n          </div>\n        </div>\n        <input\n          className={clsx(\n            'NotifiSmsInput__input',\n            intercomSmsInputStyle,\n            classNames?.input,\n          )}\n          disabled={disabled}\n          name=\"notifi-sms\"\n          onBlur={validateSmsInput}\n          onChange={(e) => {\n            setHasChanges(true);\n            handleBaseNumberChange(e);\n          }}\n          onFocus={() => setPhoneNumberErrorMessage('')}\n          placeholder={copy?.placeholder ?? 'Phone Number'}\n          type=\"tel\"\n          value={phoneValues.baseNumber}\n        />\n      </div>\n      <label\n        className={clsx(\n          'NotifiSmsInput__errorMessage',\n          classNames?.errorMessage,\n        )}\n      >\n        {phoneNumberErrorMessage}\n      </label>\n    </>\n  );\n};\n", "import React from 'react';\n\nexport type Props = Readonly<{\n  className?: string;\n}>;\n\nexport const SmsIcon: React.FC<Props> = ({ className }: Props) => {\n  return (\n    <svg\n      width=\"11\"\n      height=\"17\"\n      viewBox=\"0 0 11 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M8.33335 0.708328H2.66669C1.49085 0.708328 0.541687 1.65749 0.541687 2.83333V14.1667C0.541687 15.3425 1.49085 16.2917 2.66669 16.2917H8.33335C9.50919 16.2917 10.4584 15.3425 10.4584 14.1667V2.83333C10.4584 1.65749 9.50919 0.708328 8.33335 0.708328ZM6.91669 14.875H4.08335V14.1667H6.91669V14.875ZM9.21877 12.75H1.78127V2.83333H9.21877V12.75Z\"\n        fill=\"#B6B8D5\"\n      />\n    </svg>\n  );\n};\n", "export type CountryMap = typeof countryMap;\n\nexport type DialCode = keyof CountryMap;\nexport type CountryMetadata = CountryMap[keyof CountryMap];\n\nexport const countryMap = {\n  '+1': {\n    dialCode: '+1',\n    flag: '🇺🇸',\n    name: 'United States/Canada',\n  },\n  '+61': {\n    dialCode: '+61',\n    flag: '🇦🇺',\n    name: 'Australia',\n  },\n  '+43': {\n    dialCode: '+43',\n    flag: '🇦🇹',\n    name: 'Austria',\n  },\n  '+32': {\n    dialCode: '+32',\n    flag: '🇧🇪',\n    name: 'Belgium',\n  },\n  '+55': {\n    dialCode: '+55',\n    flag: '🇧🇷',\n    name: 'Brazil',\n  },\n  '+45': {\n    dialCode: '+45',\n    flag: '🇩🇰',\n    name: 'Denmark',\n  },\n  '+358': {\n    dialCode: '+358',\n    flag: '🇫🇮',\n    name: 'Finland',\n  },\n  '+33': {\n    dialCode: '+33',\n    flag: '🇫🇷',\n    name: 'France',\n  },\n  '+49': {\n    dialCode: '+49',\n    flag: '🇩🇪',\n    name: 'Germany',\n  },\n  '+852': {\n    dialCode: '+852',\n    flag: '🇭🇰',\n    name: 'Hong Kong',\n  },\n  '+36': {\n    dialCode: '+36',\n    flag: '🇭🇺',\n    name: 'Hungary',\n  },\n  '+354': {\n    dialCode: '+354',\n    flag: '🇮🇸',\n    name: 'Iceland',\n  },\n  '+60': {\n    dialCode: '+60',\n    flag: '🇲🇾',\n    name: 'Malaysia',\n  },\n  '+47': {\n    dialCode: '+47',\n    flag: '🇳🇴',\n    name: 'Norway',\n  },\n  '+63': {\n    dialCode: '+63',\n    flag: '🇵🇭',\n    name: 'Philippines',\n  },\n  '+48': {\n    dialCode: '+48',\n    flag: '🇵🇱',\n    name: 'Poland',\n  },\n  '+351': {\n    dialCode: '+351',\n    flag: '🇵🇹',\n    name: 'Portugal',\n  },\n  '+65': {\n    dialCode: '+65',\n    flag: '🇸🇬',\n    name: 'Singapore',\n  },\n  '+82': {\n    dialCode: '+82',\n    flag: '🇰🇷',\n    name: 'Korea, Republic of South Korea',\n  },\n  '+34': {\n    dialCode: '+34',\n    flag: '🇪🇸',\n    name: 'Spain',\n  },\n  '+46': {\n    dialCode: '+46',\n    flag: '🇸🇪',\n    name: 'Sweden',\n  },\n  '+41': {\n    dialCode: '+41',\n    flag: '🇨🇭',\n    name: 'Switzerland',\n  },\n  '+886': {\n    dialCode: '+886',\n    flag: '🇹🇼',\n    name: 'Taiwan',\n  },\n  '+44': {\n    dialCode: '+44',\n    flag: '🇬🇧',\n    name: 'United Kingdom',\n  },\n} as const;\n", "import { parsePhoneNumber } from 'libphonenumber-js';\n\ntype PhoneData = {\n  countryCallingCode: string;\n  baseNumber: string;\n};\n\nexport const splitPhoneNumber = (phoneNumber: string): PhoneData => {\n  const { countryCallingCode, nationalNumber: baseNumber } =\n    parsePhoneNumber(phoneNumber);\n  if (!countryCallingCode || !baseNumber) {\n    throw new Error('No country or phone found');\n  }\n\n  return { baseNumber, countryCallingCode };\n};\n\nexport const formatPhoneNumber = (phoneNumber: string) => {\n  if (!phoneNumber) {\n    throw new Error('No phone data found!');\n  }\n\n  return parsePhoneNumber(phoneNumber)\n    .formatInternational()\n    .replaceAll(' ', '-');\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { CountryMetadata } from '../constants/countryData';\nimport type { DeepPartialReadonly } from '../utils';\n\ntype DropdownOptionType = {\n  countryData: CountryMetadata;\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    input: string;\n    dropdownContainer: string;\n    dropdownOption: string;\n    dropdownSelectField: string;\n    label: string;\n    errorMessage: string;\n  }>;\n  phoneValues: {\n    baseNumber: string;\n    dialCode: string;\n  };\n  onSelected: (dialCode: string) => void;\n};\n\nconst NotifiSmsDropdownOption: React.FC<DropdownOptionType> = ({\n  countryData,\n  classNames,\n  phoneValues,\n  onSelected,\n}) => {\n  const { name, dialCode, flag } = countryData;\n\n  return (\n    <li\n      className={clsx(\n        'NotifiSmsInput__dropdownOption',\n        classNames?.dropdownOption,\n        {\n          'NotifiSmsInput__dropdownOption-selected':\n            phoneValues.dialCode === dialCode,\n        },\n      )}\n      onClick={() => onSelected(dialCode)}\n    >\n      <div className=\"NotifiSmsInput__dropdownCountry\">\n        <p className=\"NotifiSmsInput__dropdownFlag\">{flag} </p>\n        <p className=\"NotifiSmsInput__dropdownName\">{name}</p>\n      </div>\n      <span className=\"NotifiSmsInput__dropdownCode\">{dialCode}</span>\n    </li>\n  );\n};\n\nexport default NotifiSmsDropdownOption;\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { TelegramIcon } from '../assets/TelegramIcon';\nimport { useNotifiForm, useNotifiSubscriptionContext } from '../context';\nimport type { DeepPartialReadonly } from '../utils';\n\nexport type NotifiTelegramInputProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    input: string;\n    label: string;\n    button: string;\n    errorMessage: string;\n  }>;\n  copy?: DeepPartialReadonly<{\n    placeholder: string;\n    label: string;\n  }>;\n  disabled: boolean;\n  intercomTelegramInputStyle?: string;\n  intercomTelegramInputContainerStyle?: string;\n  intercomView?: boolean;\n  hasChatAlert?: boolean;\n}>;\n\nexport const NotifiTelegramInput: React.FC<NotifiTelegramInputProps> = ({\n  classNames,\n  copy,\n  disabled,\n  intercomTelegramInputStyle,\n  intercomTelegramInputContainerStyle,\n  intercomView,\n}: NotifiTelegramInputProps) => {\n  const { telegramConfirmationUrl, intercomCardView } =\n    useNotifiSubscriptionContext();\n\n  const {\n    formState,\n    formErrorMessages,\n    setTelegram,\n    setTelegramErrorMessage,\n    setHasChanges,\n  } = useNotifiForm();\n\n  const { telegram } = formState;\n\n  const { telegram: telegramErrorMessage } = formErrorMessages;\n\n  const validateTelegram = () => {\n    if (telegram === '') {\n      return;\n    }\n\n    const TelegramRegex =\n      /^@?(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:[a-zA-Z0-9_ ]+[a-zA-Z0-9])*$/;\n\n    if (TelegramRegex.test(telegram)) {\n      setTelegramErrorMessage('');\n    } else {\n      setTelegramErrorMessage('The telegram is invalid. Please try again.');\n    }\n  };\n\n  const handleClick = () => {\n    window.open(telegramConfirmationUrl, '_blank');\n  };\n\n  return (\n    <>\n      {intercomView ? (\n        intercomCardView.state === 'settingView' &&\n        telegramConfirmationUrl != null ? (\n          <div\n            onClick={handleClick}\n            className={clsx(\n              'NotifiTelegramVerification__button',\n              classNames?.button,\n            )}\n          >\n            Verify ID\n          </div>\n        ) : null\n      ) : (\n        <label className={clsx('NotifiTelegramInput__label', classNames?.label)}>\n          {copy?.label}\n        </label>\n      )}\n      <div\n        className={clsx(\n          'NotifiTelegramInput__container',\n          intercomTelegramInputContainerStyle,\n          classNames?.container,\n        )}\n      >\n        <TelegramIcon className={'NotifiInput__icon'} />\n        <input\n          data-cy=\"notifiTelegramInput\"\n          onBlur={validateTelegram}\n          className={clsx(\n            'NotifiTelegramInput__input',\n            intercomTelegramInputStyle,\n            classNames?.input,\n          )}\n          disabled={disabled}\n          name=\"notifi-telegram\"\n          type=\"text\"\n          value={telegram}\n          onFocus={() => setTelegramErrorMessage('')}\n          onChange={(e) => {\n            setHasChanges(true);\n            setTelegram(e.target.value ?? '');\n          }}\n          placeholder={copy?.placeholder ?? 'Telegram ID'}\n        />\n      </div>\n      <label\n        className={clsx(\n          'NotifiTelegramInput__errorMessage',\n          classNames?.errorMessage,\n        )}\n      >\n        {telegramErrorMessage}\n      </label>\n    </>\n  );\n};\n", "import React from 'react';\n\nexport type Props = Readonly<{\n  className?: string;\n}>;\n\nexport const TelegramIcon: React.FC<Props> = ({ className }: Props) => {\n  return (\n    <svg\n      width=\"17\"\n      height=\"16\"\n      viewBox=\"0 0 17 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M8.63846 15.4458L16.4253 0.189566L0.00576619 5.06668L3.35716 9.10781L12.9656 3.06713L5.27554 11.4143L8.63846 15.4458Z\"\n        fill=\"#B6B8D5\"\n      />\n    </svg>\n  );\n};\n", "import {\n  BroadcastEventTypeItem,\n  EventTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  AlertConfiguration,\n  DeepPartialReadonly,\n  broadcastMessageConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeBroadcastRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: BroadcastEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeBroadcastRow: React.FC<EventTypeBroadcastRowProps> = ({\n  classNames,\n  config,\n  disabled,\n  inputs,\n}: EventTypeBroadcastRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const broadcastId = useMemo(\n    () => resolveStringRef(config.name, config.broadcastId, inputs),\n    [config, inputs],\n  );\n\n  const alertName = useMemo<string>(() => {\n    if (config.broadcastId.type === 'value') {\n      return config.name;\n    }\n    return `${config.name}:${broadcastId}`;\n  }, [config, broadcastId]);\n\n  const alertConfiguration = useMemo<AlertConfiguration>(() => {\n    return broadcastMessageConfiguration({\n      topicName: broadcastId,\n    });\n  }, [alertName, config, inputs]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: alertConfiguration,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  const tooltipContent = config.tooltipContent;\n\n  const didFetch = useRef(false);\n\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    if (!enabled) {\n      setEnabled(true);\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    loading,\n    enabled,\n    instantSubscribe,\n    alertConfiguration,\n    alertName,\n    isNotificationLoading,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeBroadcastRow__container',\n        classNames?.container,\n      )}\n    >\n      <div className={clsx('EventTypeBroadcastRow__label', classNames?.label)}>\n        {config.displayNameOverride ?? config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        checked={enabled}\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import { ValueOrRef } from '../../hooks';\n\ntype Validator<T> = (item: unknown) => item is T;\ntype ResolveFunc<T> = (\n  name: string,\n  valueOrRef: ValueOrRef<T>,\n  inputs: Record<string, unknown>,\n) => T;\n\nconst createRefResolver = <T>(validator: Validator<T>): ResolveFunc<T> => {\n  return (\n    name: string,\n    valueOrRef: ValueOrRef<T>,\n    inputs: Record<string, unknown>,\n  ) => {\n    if (valueOrRef.type === 'value') {\n      return valueOrRef.value;\n    } else {\n      if (valueOrRef.ref === null) {\n        throw new Error(`Invalid configuration: Ref ${name} is null`);\n      }\n\n      const runtimeInput = inputs[valueOrRef.ref];\n      if (validator(runtimeInput)) {\n        return runtimeInput;\n      } else {\n        throw new Error(`Invalid value provided for ${name}: ${runtimeInput}`);\n      }\n    }\n  };\n};\n\nexport const resolveStringRef = createRefResolver(\n  (item: unknown): item is string => {\n    return typeof item === 'string';\n  },\n);\n\nexport const resolveStringArrayRef = createRefResolver(\n  (item: unknown): item is ReadonlyArray<string> => {\n    return (\n      Array.isArray(item) &&\n      item.every((element) => typeof element === 'string')\n    );\n  },\n);\n", "import {\n  EventTypeConfig,\n  FilterOptions,\n} from '@notifi-network/notifi-frontend-client';\nimport type { Types } from '@notifi-network/notifi-graphql';\n\nimport { resolveStringRef } from '../components/subscription/resolveRef';\nimport { NotifiSubscriptionData } from '../context';\nimport { walletToSource } from './walletUtils';\n\nexport type SingleSourceAlertConfiguration = Readonly<{\n  type: 'single';\n  sourceType: Types.CreateSourceInput['type'];\n  createSource?: Readonly<{\n    address: string;\n    fusionEventTypeId?: string;\n  }>;\n  filterType: string;\n  filterOptions: FilterOptions | null;\n  sourceGroupName?: string;\n  maintainSourceGroup?: boolean;\n}>;\n\nexport type MultipleSourceAlertConfiguration = Readonly<{\n  type: 'multiple';\n  sources: ReadonlyArray<Types.CreateSourceInput>;\n  filterType: string;\n  filterOptions: FilterOptions | null;\n  sourceGroupName?: string;\n  maintainSourceGroup?: boolean;\n}>;\n\nexport type AlertConfiguration =\n  | SingleSourceAlertConfiguration\n  | MultipleSourceAlertConfiguration;\n\nexport const chatConfiguration = (): AlertConfiguration => {\n  return {\n    type: 'single',\n    filterType: 'NOTIFI_CHAT_MESSAGES',\n    filterOptions: {\n      alertFrequency: 'THREE_MINUTES',\n    },\n    sourceType: 'NOTIFI_CHAT',\n    createSource: {\n      address: '*',\n    },\n  };\n};\n\nexport const customThresholdConfiguration = ({\n  alertFrequency,\n  threshold,\n  filterType,\n  thresholdDirection,\n  sourceType,\n  sourceAddress,\n}: Readonly<{\n  alertFrequency: FilterOptions['alertFrequency'];\n  threshold: number;\n  filterType: string;\n  thresholdDirection: FilterOptions['thresholdDirection'];\n  sourceType: Types.CreateSourceInput['type'];\n  sourceAddress: string;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    sourceType,\n    filterType,\n    filterOptions: {\n      alertFrequency,\n      threshold,\n      thresholdDirection,\n    },\n    createSource: {\n      address: sourceAddress,\n    },\n  };\n};\n\nexport const customToggleConfiguration = ({\n  filterType,\n  filterOptions,\n  sourceType,\n  sourceAddress,\n}: Readonly<{\n  filterType: string;\n  filterOptions: FilterOptions;\n  sourceType: Types.CreateSourceInput['type'];\n  sourceAddress: string;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    sourceType,\n    filterType,\n    filterOptions,\n    createSource: {\n      address: sourceAddress,\n    },\n  };\n};\n\nexport type XMTPTopic = Readonly<{\n  address: string | null;\n  walletBlockchain: string;\n}>;\n\nconst topicToSource = (topic: string): Types.CreateSourceInput => {\n  return {\n    name: topic,\n    blockchainAddress: topic,\n    type: 'XMTP',\n  };\n};\n\nexport const XMTPToggleConfiguration = ({\n  XMTPTopics,\n}: Readonly<{\n  XMTPTopics: ReadonlyArray<string>;\n}>): AlertConfiguration => {\n  return {\n    type: 'multiple',\n    filterType: 'WEB3_CHAT_MESSAGES',\n    filterOptions: {},\n    sources: XMTPTopics.map(topicToSource),\n  };\n};\n\nexport const broadcastMessageConfiguration = ({\n  topicName,\n}: Readonly<{\n  topicName: string;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    filterType: 'BROADCAST_MESSAGES',\n    filterOptions: {},\n    sourceType: 'BROADCAST',\n    createSource: {\n      address: topicName,\n    },\n  };\n};\n\nexport const fusionToggleConfiguration = ({\n  fusionId,\n  fusionSourceAddress,\n  maintainSourceGroup,\n  alertFrequency,\n}: Readonly<{\n  fusionId: string;\n  fusionSourceAddress: string;\n  maintainSourceGroup?: boolean;\n  alertFrequency: FilterOptions['alertFrequency'] | undefined;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    maintainSourceGroup,\n    filterType: 'FUSION_SOURCE',\n    filterOptions: alertFrequency === undefined ? {} : { alertFrequency },\n    sourceType: 'FUSION_SOURCE',\n    createSource: {\n      address: fusionSourceAddress,\n      fusionEventTypeId: fusionId,\n    },\n  };\n};\n\ntype FusionToggleConfiguration = {\n  fusionId: string;\n  fusionSourceAddress: string;\n  maintainSourceGroup?: boolean;\n  alertFrequency: FilterOptions['alertFrequency'];\n  threshold: number;\n  thresholdDirection: FilterOptions['thresholdDirection'];\n};\nexport const fusionHealthCheckConfiguration = (\n  props: FusionToggleConfiguration,\n): AlertConfiguration => {\n  return {\n    type: 'single',\n    maintainSourceGroup: props.maintainSourceGroup,\n    filterType: 'FUSION_SOURCE',\n    filterOptions: {\n      alertFrequency: props.alertFrequency,\n      threshold: props.threshold,\n      thresholdDirection: props.thresholdDirection,\n    },\n    sourceType: 'FUSION_SOURCE',\n    createSource: {\n      address: props.fusionSourceAddress,\n      fusionEventTypeId: props.fusionId,\n    },\n  };\n};\n\nexport const directMessageConfiguration = (\n  params?: Readonly<{\n    type?: string;\n  }>,\n): AlertConfiguration => {\n  const type = params?.type;\n  return {\n    type: 'single',\n    sourceType: 'DIRECT_PUSH',\n    filterType: 'DIRECT_TENANT_MESSAGES',\n    filterOptions: type === undefined ? null : { directMessageType: type },\n  };\n};\n\nexport const healthThresholdConfiguration = ({\n  alertFrequency,\n  percentage,\n  thresholdDirection,\n}: Readonly<{\n  alertFrequency: FilterOptions['alertFrequency'];\n  percentage: number;\n  thresholdDirection: FilterOptions['thresholdDirection'];\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    sourceType: 'DIRECT_PUSH',\n    filterType: 'VALUE_THRESHOLD',\n    filterOptions: {\n      alertFrequency,\n      threshold: percentage,\n      thresholdDirection,\n    },\n  };\n};\n\nexport const hedgeProtocolConfiguration = ({\n  walletAddress,\n}: Readonly<{\n  walletAddress: string;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    filterType: 'LIQUIDATIONS',\n    filterOptions: {},\n    sourceType: 'HEDGE_PROTOCOL',\n    createSource: {\n      address: walletAddress,\n    },\n  };\n};\n\nexport const tradingPairConfiguration = ({\n  tradingPair,\n  above,\n  price,\n}: Readonly<{\n  tradingPair: string;\n  above: boolean;\n  price: number;\n}>): AlertConfiguration => {\n  return {\n    type: 'single',\n    sourceType: 'DIRECT_PUSH',\n    filterType: 'DIRECT_TENANT_MESSAGES',\n    filterOptions: {\n      tradingPair,\n      values: {\n        and: [\n          {\n            key: 'spotPrice',\n            op: above ? 'gt' : 'lt',\n            value: price.toFixed(8),\n          },\n        ],\n      },\n    },\n  };\n};\n\nexport const walletBalanceConfiguration = ({\n  connectedWallets,\n}: Readonly<{\n  connectedWallets: ReadonlyArray<Types.ConnectedWalletFragmentFragment>;\n}>): AlertConfiguration => {\n  return {\n    type: 'multiple',\n    filterType: 'BALANCE',\n    filterOptions: null,\n    sources: connectedWallets\n      .filter(\n        (wallet): wallet is Types.ConnectedWalletFragmentFragment => !!wallet,\n      )\n      .map(walletToSource),\n    sourceGroupName: 'User Wallets',\n  };\n};\n\nexport const priceChangeConfiguration = ({\n  tokenIds,\n}: Readonly<{\n  tokenIds: ReadonlyArray<string>;\n}>): AlertConfiguration => {\n  return {\n    type: 'multiple',\n    filterType: 'COIN_PRICE_CHANGE_EVENTS',\n    filterOptions: null,\n    sources: tokenIds.map((tokenId) => {\n      return {\n        name: tokenId,\n        type: 'COIN_PRICE_CHANGES',\n        blockchainAddress: tokenId,\n      };\n    }),\n  };\n};\n\nexport const createConfigurations = (\n  eventTypes: EventTypeConfig,\n  inputs: Record<string, unknown>,\n  connectedWallets: NotifiSubscriptionData['connectedWallets'],\n): Record<string, AlertConfiguration> => {\n  const configs: Record<string, AlertConfiguration> = {};\n  eventTypes.forEach((eventType) => {\n    switch (eventType.type) {\n      case 'broadcast': {\n        const broadcastId = resolveStringRef(\n          eventType.name,\n          eventType.broadcastId,\n          {},\n        );\n\n        configs[eventType.name] = broadcastMessageConfiguration({\n          topicName: broadcastId,\n        });\n        break;\n      }\n      case 'custom': {\n        switch (eventType.selectedUIType) {\n          case 'HEALTH_CHECK': {\n            const thresholdDirection = eventType.checkRatios[0].type ?? 'below';\n            const ratioNumber = eventType.checkRatios[1].ratio;\n            configs[eventType.name] = customThresholdConfiguration({\n              sourceType: eventType.sourceType,\n              filterType: eventType.filterType,\n              alertFrequency: eventType.alertFrequency,\n              sourceAddress: resolveStringRef(\n                eventType.name,\n                eventType.sourceAddress,\n                inputs,\n              ),\n              thresholdDirection: thresholdDirection,\n              threshold:\n                eventType.numberType === 'percentage'\n                  ? ratioNumber / 100\n                  : ratioNumber,\n            });\n            break;\n          }\n          case 'TOGGLE': {\n            configs[eventType.name] = customToggleConfiguration({\n              sourceType: eventType.sourceType,\n              filterType: eventType.filterType,\n              filterOptions: eventType.filterOptions,\n              sourceAddress: resolveStringRef(\n                eventType.name,\n                eventType.sourceAddress,\n                inputs,\n              ),\n            });\n            break;\n          }\n        }\n        break;\n      }\n      case 'directPush': {\n        const pushId = resolveStringRef(\n          eventType.name,\n          eventType.directPushId,\n          {},\n        );\n\n        configs[eventType.name] = directMessageConfiguration({\n          type: pushId,\n        });\n\n        break;\n      }\n      case 'walletBalance': {\n        configs[eventType.name] = walletBalanceConfiguration({\n          connectedWallets: connectedWallets.filter(\n            (wallet): wallet is Types.ConnectedWalletFragmentFragment =>\n              !!wallet,\n          ),\n        });\n        break;\n      }\n      case 'priceChange': {\n        configs[eventType.name] = priceChangeConfiguration({\n          tokenIds: eventType.tokenIds,\n        });\n        break;\n      }\n      case 'fusionToggle': // fusionToggle is deprecated (use 'fusion' type with 'selectedUIType = TOGGLE' instead )\n        configs[eventType.name] = fusionToggleConfiguration({\n          maintainSourceGroup: eventType.maintainSourceGroup,\n          fusionId: resolveStringRef(\n            eventType.name,\n            eventType.fusionEventId,\n            inputs,\n          ),\n          fusionSourceAddress: resolveStringRef(\n            eventType.name,\n            eventType.sourceAddress,\n            inputs,\n          ),\n          alertFrequency: eventType.alertFrequency,\n        });\n        break;\n      case 'fusion': {\n        switch (eventType.selectedUIType) {\n          case 'TOGGLE':\n            configs[eventType.name] = fusionToggleConfiguration({\n              maintainSourceGroup: eventType.maintainSourceGroup,\n              fusionId: resolveStringRef(\n                eventType.name,\n                eventType.fusionEventId,\n                inputs,\n              ),\n              fusionSourceAddress: resolveStringRef(\n                eventType.name,\n                eventType.sourceAddress,\n                inputs,\n              ),\n              alertFrequency: eventType.alertFrequency,\n            });\n            break;\n          case 'HEALTH_CHECK':\n            configs[eventType.name] = fusionHealthCheckConfiguration({\n              maintainSourceGroup: eventType.maintainSourceGroup,\n              fusionId: resolveStringRef(\n                eventType.name,\n                eventType.fusionEventId,\n                inputs,\n              ),\n              fusionSourceAddress: resolveStringRef(\n                eventType.name,\n                eventType.sourceAddress,\n                inputs,\n              ),\n              alertFrequency: eventType.alertFrequency,\n              thresholdDirection: eventType.checkRatios[0].type ?? 'below',\n              threshold:\n                eventType.numberType === 'percentage'\n                  ? eventType.checkRatios[1].ratio / 100\n                  : eventType.checkRatios[1].ratio,\n            });\n        }\n      }\n    }\n  });\n\n  return configs;\n};\n", "import { Types } from '@notifi-network/notifi-graphql';\nimport React from 'react';\n\nimport { AnnouncementIcon } from '../assets/AnnouncementIcon';\nimport { ChatAlertIcon } from '../assets/ChatAlertIcon';\nimport { RatioCheckIcon } from '../assets/RatioCheckIcon';\nimport { SwapIcon } from '../assets/SwapIcon';\nimport { AlertIcon } from '../components/AlertHistory/AlertIcon';\nimport { AlertNotificationViewProps } from '../components/AlertHistory/AlertNotificationRow';\nimport { NotificationHistoryEntry } from '../components/subscription';\nimport { formatAmount } from './AlertHistoryUtils';\n\ntype AccountBalanceChangedEventDetails = Extract<\n  Types.NotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'AccountBalanceChangedEventDetails' }\n>;\n\ntype DirectTenantMessageEventDetails = Extract<\n  Types.NotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'DirectTenantMessageEventDetails' }\n>;\n\ntype BroadcastMessageEventDetails = Extract<\n  | Types.NotificationHistoryEntryFragmentFragment['detail']\n  | Types.FusionNotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'BroadcastMessageEventDetails' }\n>;\n\ntype ChatMessageReceivedEventDetails = Extract<\n  Types.NotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'ChatMessageReceivedEventDetails' }\n>;\n\ntype HealthValueOverThresholdEventDetails = Extract<\n  Types.NotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'HealthValueOverThresholdEventDetails' }\n>;\n\ntype GenericEventDetails = Extract<\n  Types.NotificationHistoryEntryFragmentFragment['detail'],\n  { __typename: 'GenericEventDetails' }\n>;\n\ntype AlertDetailsContents = {\n  topContent: string;\n  bottomContent: string;\n  bottomContentHtml?: string;\n  otherContent?: string;\n};\n\ntype SupportedEventDetailPropsMap = Map<\n  string,\n  {\n    getViewProps: (\n      notification: NotificationHistoryEntry,\n    ) => AlertNotificationViewProps;\n    getAlertDetailsContents: (\n      notification: NotificationHistoryEntry,\n    ) => AlertDetailsContents;\n  }\n>;\n\nconst supportedEventDetails: SupportedEventDetailPropsMap = new Map();\n\nsupportedEventDetails.set('DirectTenantMessageEventDetails', {\n  getViewProps: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as DirectTenantMessageEventDetails;\n    const templateVariablesJson: Record<string, string> = JSON.parse(\n      detail.templateVariablesJson || '{}',\n    );\n    return {\n      notificationTitle: templateVariablesJson.title ?? 'Announcement',\n      notificationImage: <AnnouncementIcon />,\n      notificationSubject: templateVariablesJson.subject ?? '',\n      notificationDate: notification.createdDate,\n      notificationMessage: templateVariablesJson.message ?? '',\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as DirectTenantMessageEventDetails;\n    const templateVariablesJson: Record<string, string> = JSON.parse(\n      detail.templateVariablesJson || '{}',\n    );\n    return {\n      topContent: templateVariablesJson.subject ?? '',\n      bottomContent: templateVariablesJson.message ?? '',\n    };\n  },\n});\n\nsupportedEventDetails.set('BroadcastMessageEventDetails', {\n  getViewProps: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as BroadcastMessageEventDetails;\n    return {\n      notificationTitle: 'Announcement',\n      notificationImage: <AnnouncementIcon />,\n      notificationSubject: detail.subject ?? '',\n      notificationDate: notification.createdDate,\n      notificationMessage: detail.message ?? '',\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as BroadcastMessageEventDetails;\n    return {\n      topContent: detail.subject ?? '',\n      bottomContent: detail.message ?? '',\n      bottomContentHtml: detail.messageHtml ?? '',\n    };\n  },\n});\n\nsupportedEventDetails.set('HealthValueOverThresholdEventDetails', {\n  getViewProps: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as HealthValueOverThresholdEventDetails;\n    const threshold = detail.threshold ?? '';\n    const name = detail.name ?? '';\n    const value = detail.value ?? '';\n    let thresholdDirection = '';\n    if (parseFloat(value) > parseFloat(threshold)) {\n      thresholdDirection = 'under';\n    } else {\n      thresholdDirection = 'over';\n    }\n    return {\n      notificationTitle: 'Health Check',\n      notificationImage: <RatioCheckIcon />,\n      notificationSubject: `${name} ${thresholdDirection} ${threshold}`,\n      notificationDate: notification.createdDate,\n      notificationMessage: undefined,\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as HealthValueOverThresholdEventDetails;\n    return {\n      topContent: detail.name,\n      bottomContent: `value: ${detail.value}`,\n      otherContent: `threshold: ${detail.threshold}`,\n    };\n  },\n});\n\nsupportedEventDetails.set('GenericEventDetails', {\n  getViewProps: (notification) => {\n    const detail = notification.detail as GenericEventDetails;\n    return {\n      notificationTitle: detail.sourceName,\n      notificationImage: <AlertIcon icon={detail.icon} />,\n      notificationSubject: detail.notificationTypeName,\n      notificationDate: notification.createdDate,\n      notificationMessage: detail.genericMessage,\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as GenericEventDetails;\n    return {\n      topContent: detail.notificationTypeName,\n      bottomContent: detail.genericMessage,\n      bottomContentHtml: detail.genericMessageHtml ?? '',\n    };\n  },\n});\n\nsupportedEventDetails.set('ChatMessageReceivedEventDetails', {\n  getViewProps: (notification) => {\n    const detail = notification.detail as ChatMessageReceivedEventDetails;\n    return {\n      notificationTitle: `New Message from ${detail.senderName}`,\n      notificationSubject: `New Message from ${detail.senderName}`,\n      notificationDate: notification.createdDate,\n      notificationMessage: detail.messageBody,\n      notificationImage: <ChatAlertIcon width={17} height={17} />,\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as ChatMessageReceivedEventDetails;\n    return {\n      topContent: `New Message from ${detail.senderName}`,\n      bottomContent: detail.messageBody,\n    };\n  },\n});\n\nsupportedEventDetails.set('AccountBalanceChangedEventDetails', {\n  getViewProps: (notification) => {\n    const detail = notification.detail as AccountBalanceChangedEventDetails;\n    const changeAmount = formatAmount(\n      Math.abs(detail.previousValue - detail.newValue),\n    );\n\n    const getTitle = () => {\n      return detail.direction === 'INCOMING'\n        ? `Incoming Transaction: ${changeAmount} ${detail.tokenSymbol}`\n        : `Outgoing Transaction: -${changeAmount} ${detail.tokenSymbol}`;\n    };\n\n    const walletBlockchain = detail.walletBlockchain;\n    const direction = detail.direction === 'INCOMING' ? '' : '-';\n    const message = `${walletBlockchain} Wallet account balance changed by ${direction}${changeAmount} ${detail.tokenSymbol}`;\n    return {\n      notificationImage: <SwapIcon />,\n      notificationTitle: 'Wallet Balance Change',\n      notificationSubject: getTitle(),\n      notificationDate: notification.createdDate,\n      notificationMessage: message,\n    };\n  },\n  getAlertDetailsContents: (notification: NotificationHistoryEntry) => {\n    const detail = notification.detail as AccountBalanceChangedEventDetails;\n    const changeAmount = `${formatAmount(\n      Math.abs(detail.previousValue - detail.newValue),\n    )}`;\n\n    const topContent =\n      detail.direction === 'INCOMING'\n        ? `Incoming Transaction: ${changeAmount}  ${detail.tokenSymbol}`\n        : `Outgoing Transaction: -${changeAmount}  ${detail.tokenSymbol}`;\n\n    const direction = detail.direction === 'INCOMING' ? '' : '-';\n    const bottomContent = ` ${detail.walletBlockchain} wallet account balance changed by ${direction}${changeAmount} ${detail.tokenSymbol}`;\n    return {\n      topContent,\n      bottomContent: bottomContent,\n    };\n  },\n});\n\nconst validateIsSupported = (entry?: NotificationHistoryEntry): boolean => {\n  if (supportedEventDetails.get(entry?.detail?.__typename ?? '')) return true;\n  return false;\n};\n\nconst getAlertNotificationViewBaseProps = (\n  notification: NotificationHistoryEntry,\n): AlertNotificationViewProps => {\n  const genProps = supportedEventDetails.get(\n    notification.detail?.__typename ?? '',\n  )?.getViewProps;\n  return !!notification.detail && !!genProps\n    ? genProps(notification)\n    : // It should never come here: exception should be filtered out before. https://virtuoso.dev/troubleshooting\n      {\n        notificationTitle: 'Unsupported notification',\n        notificationImage: <AlertIcon icon={'INFO'} />,\n        notificationSubject: 'Alert not supported yet',\n        notificationDate: notification.createdDate,\n        notificationMessage: 'Unsupported notification',\n      };\n};\n\nconst getAlertDetailsContents = (\n  notification: NotificationHistoryEntry,\n): AlertDetailsContents => {\n  const getContents = supportedEventDetails.get(\n    notification.detail?.__typename ?? '',\n  )?.getAlertDetailsContents;\n  return !!notification && !!getContents\n    ? getContents(notification)\n    : // It should never come here: exception should be filtered out before. https://virtuoso.dev/troubleshooting\n      {\n        topContent: 'Unsupported notification',\n        bottomContent: 'Alert not supported yet',\n      };\n};\n\nexport {\n  getAlertDetailsContents,\n  getAlertNotificationViewBaseProps,\n  validateIsSupported,\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const AnnouncementIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M16.7498 10.7917V12.2084H19.5832V10.7917H16.7498ZM15.3332 15.4738C16.0132 15.9767 16.8986 16.6425 17.5998 17.1667C17.8832 16.7913 18.1665 16.4088 18.4498 16.0334C17.7486 15.5092 16.8632 14.8434 16.1832 14.3334C15.8998 14.7159 15.6165 15.0984 15.3332 15.4738ZM18.4498 6.96671C18.1665 6.59129 17.8832 6.20879 17.5998 5.83337C16.8986 6.35754 16.0132 7.02337 15.3332 7.53337C15.6165 7.90879 15.8998 8.29129 16.1832 8.66671C16.8632 8.15671 17.7486 7.49796 18.4498 6.96671ZM6.83317 9.37504C6.054 9.37504 5.4165 10.0125 5.4165 10.7917V12.2084C5.4165 12.9875 6.054 13.625 6.83317 13.625H7.5415V16.4584H8.95817V13.625H9.6665L13.2082 15.75V7.25004L9.6665 9.37504H6.83317ZM14.979 11.5C14.979 10.558 14.5682 9.70796 13.9165 9.12712V13.8659C14.5682 13.2921 14.979 12.4421 14.979 11.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const ChatAlertIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 22 22\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <g clipPath=\"url(#chat_alert_icon_clip0_13256_1794)\">\n        <path\n          d=\"M18.332 1.83203H3.66536C2.65703 1.83203 1.83203 2.65703 1.83203 3.66536V20.1654L5.4987 16.4987H18.332C19.3404 16.4987 20.1654 15.6737 20.1654 14.6654V3.66536C20.1654 2.65703 19.3404 1.83203 18.332 1.83203ZM18.332 14.6654H5.4987L3.66536 16.4987V3.66536H18.332V14.6654Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"chat_alert_icon_clip0_13256_1794\">\n          <rect width=\"22\" height=\"22\" fill=\"currentColor\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const RatioCheckIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle cx=\"8\" cy=\"9\" r=\"1.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <circle\n        cx=\"16\"\n        cy=\"14\"\n        r=\"1.75\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <line\n        x1=\"9.22548\"\n        y1=\"16.4982\"\n        x2=\"14.8394\"\n        y2=\"6.77452\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const SwapIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M7.32357 17.9999L4.50007 14.7999M4.50007 14.7999L7.32357 11.5999M4.50007 14.7999H12.5\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16.6764 12.4L19.4999 9.20003M19.4999 9.20003L16.6764 6.00004M19.4999 9.20003H11.5\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const BellIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"-6 -6 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M5.49013 11.1875C6.12122 11.1875 6.63757 10.6712 6.63757 10.0401H4.3427C4.3427 10.6712 4.85331 11.1875 5.49013 11.1875ZM8.93244 7.74519V4.8766C8.93244 3.11529 7.99154 1.64083 6.35071 1.25071V0.860577C6.35071 0.384391 5.96632 0 5.49013 0C5.01395 0 4.62956 0.384391 4.62956 0.860577V1.25071C2.98299 1.64083 2.04783 3.10955 2.04783 4.8766V7.74519L0.900391 8.89263V9.46635H10.0799V8.89263L8.93244 7.74519Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import { BellIcon } from 'notifi-react-card/lib/assets/BellIcon';\nimport React from 'react';\n\nimport { AnnouncementIcon } from '../../assets/AnnouncementIcon';\nimport { ChartIcon } from '../../assets/ChartIcon';\nimport { CheckIcon } from '../../assets/CheckIcon';\nimport { ClockIcon } from '../../assets/ClockIcon';\nimport { DaoIcon } from '../../assets/DaoIcon';\nimport { DownArrowIcon } from '../../assets/DownArrowIcon';\nimport { FlagIcon } from '../../assets/FlagIcon';\nimport { GraphIcon } from '../../assets/GraphIcon';\nimport { InfoIcon } from '../../assets/InfoIcon';\nimport { RatioCheckIcon } from '../../assets/RatioCheckIcon';\nimport { StarIcon } from '../../assets/StarIcon';\nimport { SwapIcon } from '../../assets/SwapIcon';\nimport { UpArrowIcon } from '../../assets/UpArrowIcon';\nimport { UrgentIcon } from '../../assets/UrgentIcon';\nimport { WatchIcon } from '../../assets/WatchIcon';\n\nconst icons: Record<string, React.FC<React.SVGProps<SVGSVGElement>>> = {\n  UP_ARROW: UpArrowIcon,\n  DOWN_ARROW: DownArrowIcon,\n  PERCENT: RatioCheckIcon,\n  CLOCK: ClockIcon,\n  CHECKMARK: CheckIcon,\n  STAR: StarIcon,\n  MEGAPHONE: AnnouncementIcon,\n  CHART: ChartIcon,\n  DAO: DaoIcon,\n  FLAG: FlagIcon,\n  GRAPH: GraphIcon,\n  INFO: InfoIcon,\n  SWAP: SwapIcon,\n  URGENT: UrgentIcon,\n  WATCH: WatchIcon,\n  BELL: BellIcon,\n};\n\nexport type Props = React.SVGProps<SVGSVGElement> & Readonly<{ icon: string }>;\n\nexport const AlertIcon: React.FC<Props> = ({ icon, ...props }: Props) => {\n  const Renderer = icons[icon] ?? AnnouncementIcon;\n  return <Renderer {...props} />;\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const ChartIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M17.0556 5.5H6.94444C6.15 5.5 5.5 6.15 5.5 6.94444V17.0556C5.5 17.85 6.15 18.5 6.94444 18.5H17.0556C17.85 18.5 18.5 17.85 18.5 17.0556V6.94444C18.5 6.15 17.85 5.5 17.0556 5.5ZM9.83333 15.6111H8.38889V10.5556H9.83333V15.6111ZM12.7222 15.6111H11.2778V8.38889H12.7222V15.6111ZM15.6111 15.6111H14.1667V12.7222H15.6111V15.6111Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = Readonly<\n  {\n    className?: string;\n  } & React.SVGProps<SVGSVGElement>\n>;\n\nexport const CheckIcon: React.FC<Props> = ({ className, ...svgProps }) => {\n  return (\n    <svg\n      className={className}\n      {...svgProps}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6 12.5L9.84 16L18 8\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const ClockIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18ZM12.75 8C12.75 7.58579 12.4142 7.25 12 7.25C11.5858 7.25 11.25 7.58579 11.25 8V12.5V12.8107L11.4697 13.0303L13.9697 15.5303C14.2626 15.8232 14.7374 15.8232 15.0303 15.5303C15.3232 15.2374 15.3232 14.7626 15.0303 14.4697L12.75 12.1893V8Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const DaoIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.0623 7.92265L12.0002 5L6.93799 7.92265L12.0002 10.8453L17.0623 7.92265ZM12.0002 12L5.93799 8.5V15.5L12.0002 19L18.0623 15.5V8.5L12.0002 12Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const DownArrowIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M8 13.4705L12 16.9999M12 16.9999L16 13.4705M12 16.9999V7\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const FlagIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M14.1882 7.52941L13.8824 6H7V19H8.52941V13.6471H12.8118L13.1176 15.1765H18.4706V7.52941H14.1882Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const GraphIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M7 16.5L10.5 11L13 14L17 8\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const InfoIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M11.3335 8.66671H12.6668V10H11.3335V8.66671ZM11.3335 11.3334H12.6668V15.3334H11.3335V11.3334ZM12.0002 5.33337C8.32016 5.33337 5.3335 8.32004 5.3335 12C5.3335 15.68 8.32016 18.6667 12.0002 18.6667C15.6802 18.6667 18.6668 15.68 18.6668 12C18.6668 8.32004 15.6802 5.33337 12.0002 5.33337ZM12.0002 17.3334C9.06016 17.3334 6.66683 14.94 6.66683 12C6.66683 9.06004 9.06016 6.66671 12.0002 6.66671C14.9402 6.66671 17.3335 9.06004 17.3335 12C17.3335 14.94 14.9402 17.3334 12.0002 17.3334Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const StarIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12 5L13.5716 9.83688H18.6574L14.5429 12.8262L16.1145 17.6631L12 14.6738L7.8855 17.6631L9.4571 12.8262L5.3426 9.83688H10.4284L12 5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const UpArrowIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M8 10.5293L12 6.99995M12 6.99995L16 10.5293M12 6.99995V16.9999\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const UrgentIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18ZM11.25 9.25C11.25 8.83579 11.5858 8.5 12 8.5C12.4142 8.5 12.75 8.83579 12.75 9.25V13.25C12.75 13.6642 12.4142 14 12 14C11.5858 14 11.25 13.6642 11.25 13.25V9.25ZM11.25 15.25C11.25 14.8358 11.5858 14.5 12 14.5C12.4142 14.5 12.75 14.8358 12.75 15.25C12.75 15.6642 12.4142 16 12 16C11.5858 16 11.25 15.6642 11.25 15.25Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const WatchIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M11.9998 7C8.6665 7 5.81984 9.07333 4.6665 12C5.81984 14.9267 8.6665 17 11.9998 17C15.3332 17 18.1798 14.9267 19.3332 12C18.1798 9.07333 15.3332 7 11.9998 7ZM11.9998 15.3333C10.1598 15.3333 8.6665 13.84 8.6665 12C8.6665 10.16 10.1598 8.66667 11.9998 8.66667C13.8398 8.66667 15.3332 10.16 15.3332 12C15.3332 13.84 13.8398 15.3333 11.9998 15.3333ZM11.9998 10C10.8932 10 9.99984 10.8933 9.99984 12C9.99984 13.1067 10.8932 14 11.9998 14C13.1065 14 13.9998 13.1067 13.9998 12C13.9998 10.8933 13.1065 10 11.9998 10Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import { format, parseISO } from 'date-fns';\n\nexport const isDateInThisWeek = (date: string) => {\n  const passedInDate = new Date(date);\n  const todayObj = new Date();\n  const todayDate = todayObj.getDate();\n\n  const firstDayOfWeek = new Date(todayObj.setDate(todayDate - 6));\n\n  return passedInDate >= firstDayOfWeek;\n};\n\nexport const getDayName = (date: string) => {\n  const weekday = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][\n    new Date(date).getDay()\n  ];\n  return weekday;\n};\n\nexport const formatAmount = (amount: number): string =>\n  parseFloat(amount.toFixed(9)).toString();\n\nexport const isToday = (date: Date) => {\n  const today = new Date();\n\n  return (\n    date.getDate() == today.getDate() &&\n    date.getMonth() == today.getMonth() &&\n    date.getFullYear() == today.getFullYear()\n  );\n};\nexport const formatAlertDetailsTimestamp = (date: string) => {\n  try {\n    const parsedDate = parseISO(date);\n\n    const month = parsedDate.toLocaleString('default', { month: 'short' });\n    const clockTime = format(parsedDate, 'HH:mm');\n    const dateTime = format(parsedDate, 'dd');\n    const finalDate = `${month} ${dateTime} at ${clockTime} `;\n\n    return finalDate;\n  } catch {\n    return '-';\n  }\n};\n\nexport const formatTimestamp = (date: string): string => {\n  try {\n    const parsedDate = parseISO(date);\n\n    const month = parsedDate.toLocaleString('default', { month: 'short' });\n    const clockTime = format(parsedDate, 'HH:mm');\n    const dateTime = format(parsedDate, 'dd');\n    const finalDate = `${month} ${dateTime}`;\n\n    if (isToday(parsedDate)) {\n      return clockTime;\n    }\n\n    if (isDateInThisWeek(date)) {\n      return getDayName(date);\n    }\n    return finalDate;\n  } catch {\n    return '-';\n  }\n};\n", "import {\n  EventTypeConfig,\n  EventTypeItem,\n  NotifiFrontendClient,\n} from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\n\nimport { SubscriptionData } from '../hooks';\n\nexport const subscribeAlertByFrontendClient = async (\n  frontendClient: NotifiFrontendClient,\n  alertDetail: Readonly<{\n    eventType: EventTypeItem;\n    inputs: Record<string, unknown>;\n  }>,\n): Promise<SubscriptionData> => {\n  await frontendClient.ensureAlert(alertDetail);\n  const updatedData = await frontendClient.fetchData();\n  const updatedTgs = updatedData.targetGroup;\n  if (!(updatedTgs && updatedTgs.length > 0)) {\n    throw new Error('No target groups found');\n  }\n  const updatedTg = {\n    // adopt the first target group\n    ...updatedTgs[0],\n    name: updatedTgs[0]?.name ?? '',\n  };\n\n  const alerts: Record<string, Types.AlertFragmentFragment> = {};\n\n  updatedData.alert?.forEach((alert) => {\n    if (alert && alert.name) {\n      alerts[alert.name] = alert;\n    }\n  });\n\n  return {\n    alerts,\n    email: updatedTg.emailTargets?.[0]?.emailAddress ?? '',\n    phoneNumber: updatedTg.smsTargets?.[0]?.phoneNumber ?? '',\n    isPhoneNumberConfirmed: updatedTg.smsTargets?.[0]?.isConfirmed ?? false,\n    telegramId: updatedTg.telegramTargets?.[0]?.telegramId ?? '',\n    telegramConfirmationUrl:\n      updatedTg.telegramTargets?.[0]?.confirmationUrl ?? '',\n    discordId: updatedTg.discordTargets?.[0]?.id ?? '',\n  };\n};\n\nexport const unsubscribeAlertByFrontendClient = async (\n  frontendClient: NotifiFrontendClient,\n  alertDetail: Readonly<{\n    eventType: EventTypeItem;\n    inputs: Record<string, unknown>;\n  }>,\n): Promise<void> => {\n  const alerts = await frontendClient.getAlerts();\n  const existing = alerts.find(\n    (alert) => alert.name === alertDetail.eventType.name,\n  );\n  if (!existing || !existing?.id) throw new Error('Alert not found');\n  await frontendClient.deleteAlert({ id: existing.id });\n};\n\nexport const subscribeAlertsByFrontendClient = async (\n  frontendClient: NotifiFrontendClient,\n  eventTypes: EventTypeConfig,\n  inputs: Record<string, unknown>,\n): Promise<SubscriptionData> => {\n  for (const eventType of eventTypes) {\n    try {\n      await frontendClient.ensureAlert({ eventType, inputs });\n    } catch (e) {\n      console.log(\n        `EventType ${eventType.type} does not support default subscribe: ${e}`,\n      );\n    }\n  }\n\n  const updatedData = await frontendClient.fetchData();\n  const updatedTgs = updatedData.targetGroup;\n  if (!(updatedTgs && updatedTgs.length > 0)) {\n    throw new Error('No target groups found');\n  }\n  const updatedTg = {\n    // adopt the first target group\n    ...updatedTgs[0],\n    name: updatedTgs[0]?.name ?? '',\n  };\n\n  const alerts: Record<string, Types.AlertFragmentFragment> = {};\n\n  updatedData.alert?.forEach((alert) => {\n    if (alert && alert.name) {\n      alerts[alert.name] = alert;\n    }\n  });\n\n  return {\n    alerts,\n    email: updatedTg.emailTargets?.[0]?.emailAddress ?? '',\n    phoneNumber: updatedTg.smsTargets?.[0]?.phoneNumber ?? '',\n    isPhoneNumberConfirmed: updatedTg.smsTargets?.[0]?.isConfirmed ?? false,\n    telegramId: updatedTg.telegramTargets?.[0]?.telegramId ?? '',\n    telegramConfirmationUrl:\n      updatedTg.telegramTargets?.[0]?.confirmationUrl ?? '',\n    discordId: updatedTg.discordTargets?.[0]?.id ?? '',\n  };\n};\n", "/**\n * @description Returns an array of the object's keys with the correct type.\n * @example\n * const destinations: Record<FormField, string> = { email: 'email', phoneNumber: 'phoneNumber' };\n * const keys = objectKeys(destinations); // type of Keys is FormField[] instead of string[] (which is the default type of Object.keys)\n */\nexport const objectKeys = <T extends Record<keyof T, unknown>>(\n  object: T,\n): (keyof T)[] => {\n  return Object?.keys(object) as (keyof T)[];\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nexport type NotifiToggleProps = Readonly<{\n  classNames?: Readonly<{\n    container?: string;\n    input?: string;\n    slider?: string;\n  }>;\n  disabled: boolean;\n  checked: boolean;\n  setChecked: React.Dispatch<React.SetStateAction<boolean>>;\n  intercomToggleStyle?: string;\n}>;\n\nexport const NotifiToggle: React.FC<NotifiToggleProps> = ({\n  classNames,\n  disabled,\n  checked,\n  setChecked,\n  intercomToggleStyle,\n}: NotifiToggleProps) => {\n  return (\n    <label className={clsx('NotifiToggle__container', classNames?.container)}>\n      <input\n        className={clsx(\n          'NotifiToggle__input',\n          intercomToggleStyle,\n          classNames?.input,\n        )}\n        disabled={disabled}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={(e) => {\n          setChecked(e.target.checked);\n        }}\n      />\n      <span\n        className={clsx('NotifiToggle__slider', classNames?.slider, {\n          'NotifiToggleSlider--disabled': disabled,\n        })}\n      ></span>\n    </label>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nexport type NotifiTooltipProps = Readonly<{\n  classNames?: Readonly<{\n    container?: string;\n    icon?: string;\n    tooltip?: string;\n    tooltipLabel?: string;\n  }>;\n  content: string;\n}>;\n\nexport const NotifiTooltip: React.FC<NotifiTooltipProps> = ({\n  classNames,\n  content,\n}: NotifiTooltipProps) => {\n  return (\n    <div className={clsx('NotifiTooltip__container', classNames?.container)}>\n      <svg\n        className={clsx('NotifiTooltip__infoIcon', classNames?.icon)}\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M9 7H11V5H9V7ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM10 0C8.68678 0 7.38642 0.258658 6.17317 0.761205C4.95991 1.26375 3.85752 2.00035 2.92893 2.92893C1.05357 4.8043 0 7.34784 0 10C0 12.6522 1.05357 15.1957 2.92893 17.0711C3.85752 17.9997 4.95991 18.7362 6.17317 19.2388C7.38642 19.7413 8.68678 20 10 20C12.6522 20 15.1957 18.9464 17.0711 17.0711C18.9464 15.1957 20 12.6522 20 10C20 8.68678 19.7413 7.38642 19.2388 6.17317C18.7362 4.95991 17.9997 3.85752 17.0711 2.92893C16.1425 2.00035 15.0401 1.26375 13.8268 0.761205C12.6136 0.258658 11.3132 0 10 0ZM9 15H11V9H9V15Z\"\n          fill=\"inherit\"\n        />\n      </svg>\n      <div className={clsx('NotifiTooltip__body', classNames?.tooltip)}>\n        <div className={clsx('NotifiTooltip__label', classNames?.tooltipLabel)}>\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import { ThresholdDirection } from '@notifi-network/notifi-frontend-client';\nimport {\n  CustomTopicTypeItem,\n  EventTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  customThresholdConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeCustomHealthCheckRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    content: string;\n    button: string;\n    toggle: NotifiToggleProps['classNames'];\n    buttonContainer: string;\n    errorMessage: string;\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: CustomTopicTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nconst getParsedPercentage = (input: string): number | null => {\n  if (input.indexOf('%') === input.length - 1) {\n    return parseFloat(input.slice(0, -1)) ?? null;\n  }\n  return null;\n};\n\nconst getParsedPrice = (input: string): number | null => {\n  if (input.indexOf('$') === 0) {\n    return parseFloat(input.slice(1)) ?? null;\n  }\n  return null;\n};\n\nexport const EventTypeCustomHealthCheckRow: React.FC<\n  EventTypeCustomHealthCheckRowProps\n> = ({\n  classNames,\n  config,\n  disabled,\n  inputs,\n}: EventTypeCustomHealthCheckRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const handleSuffixPercentage = (value: string) => {\n    value = value.replace('%', '');\n    setCustomValue(value + '%');\n  };\n\n  const handlePrefixDollar = (value: string) => {\n    value = value.replace('$', '');\n    setCustomValue('$' + value);\n  };\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  // This indicates which box to select\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const [customValue, setCustomValue] = useState<string>('');\n  const customInputRef = useRef<HTMLInputElement>(null);\n  const thresholdDirection: ThresholdDirection = 'below';\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n\n  const tooltipContent = config.tooltipContent;\n\n  const UNABLE_TO_SUBSCRIBE = 'Unable to subscribe, please try again';\n  const UNABLE_TO_UNSUBSCRIBE = 'Unable to unsubscribe, please try again';\n  const INVALID_NUMBER = 'Please enter a valid number';\n\n  if (config.selectedUIType !== 'HEALTH_CHECK') {\n    return null;\n  }\n\n  const subscribingRatioValue = useMemo(() => {\n    const alert = alerts[alertName];\n    if (!alert || !alert.filterOptions) return null;\n    let alertRatioValue: number | null = null;\n    switch (config.numberType) {\n      case 'percentage':\n        alertRatioValue = JSON.parse(alert.filterOptions).threshold * 100;\n        break;\n      default: // 'integer' | 'price'\n        alertRatioValue = JSON.parse(alert.filterOptions).threshold;\n    }\n    return alertRatioValue;\n  }, [alerts]);\n\n  const defaultRatios = useMemo(() => {\n    const ratios = config.checkRatios ?? [];\n    return ratios.map((ratio) => ratio.ratio);\n  }, [config]);\n\n  useEffect(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n\n    if (!subscribingRatioValue) {\n      setEnabled(false);\n      setSelectedIndex(defaultRatios.length - 1);\n      return;\n    }\n    setEnabled(true);\n\n    const selectedRatioIndex = defaultRatios.findIndex(\n      (ratio) => ratio === subscribingRatioValue,\n    );\n\n    if (selectedRatioIndex !== -1 && customValue === '') {\n      setSelectedIndex(selectedRatioIndex);\n    }\n\n    if (!defaultRatios.includes(subscribingRatioValue) && customValue === '') {\n      setSelectedIndex(3);\n      setCustomValue(() => {\n        switch (config.numberType) {\n          case 'percentage':\n            return subscribingRatioValue + '%';\n          case 'price':\n            return '$' + subscribingRatioValue;\n          default: // 'integer'\n            return subscribingRatioValue.toString();\n        }\n      });\n    }\n  }, [alertName, alerts, loading, enabled, setEnabled, isNotificationLoading]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n      ratioNumber: number,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        alertDetail.inputs[`${alertDetail.eventType.name}__healthRatio`] =\n          ratioNumber;\n        alertDetail.inputs[\n          `${alertDetail.eventType.name}__healthThresholdDirection`\n        ] = config.checkRatios[0].type ?? thresholdDirection;\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: customThresholdConfiguration({\n            sourceType: config.sourceType,\n            filterType: config.filterType,\n            alertFrequency: config.alertFrequency,\n            sourceAddress: resolveStringRef(\n              alertName,\n              config.sourceAddress,\n              inputs,\n            ),\n            thresholdDirection:\n              config.checkRatios[0].type ?? thresholdDirection,\n            threshold:\n              config.numberType === 'percentage'\n                ? ratioNumber / 100\n                : ratioNumber,\n          }),\n          alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleCustomRatioButtonNewSubscription = () => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n\n    let regex = new RegExp(/^[0-9.]+$/);\n    switch (config.numberType) {\n      case 'percentage':\n        regex = new RegExp(/^[0-9.%]+$/);\n        break;\n      case 'price':\n        regex = new RegExp(/^[0-9.$]+$/);\n        break;\n    }\n\n    if (!customInputRef.current || !regex.test(customInputRef.current.value)) {\n      return setErrorMessage(INVALID_NUMBER);\n    }\n\n    setErrorMessage('');\n    setIsNotificationLoading(true);\n\n    customInputRef.current.placeholder = 'Custom';\n    let ratioNumber = null;\n    switch (config.numberType) {\n      case 'percentage':\n        ratioNumber = getParsedPercentage(customInputRef.current.value);\n        break;\n      case 'price':\n        ratioNumber = getParsedPrice(customInputRef.current.value);\n        break;\n      default: // 'integer'\n        ratioNumber = parseFloat(customInputRef.current.value);\n    }\n\n    if (ratioNumber && customValue) {\n      subscribeAlert({ eventType: config, inputs }, ratioNumber)\n        .then(() => {\n          setSelectedIndex(3);\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_UNSUBSCRIBE))\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setErrorMessage(INVALID_NUMBER);\n      setSelectedIndex(defaultRatios[defaultRatios.length - 1]);\n      setIsNotificationLoading(false);\n    }\n  };\n\n  const handleKeypressUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (customInputRef.current) {\n        customInputRef.current.blur();\n        event.preventDefault();\n      }\n    }\n  };\n  const handleRatioButtonNewSubscription = (value: number, index: number) => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    setErrorMessage('');\n    if (value) {\n      subscribeAlert({ eventType: config, inputs }, value)\n        .then(() => {\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n          setSelectedIndex(index);\n          setCustomValue('');\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE))\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setErrorMessage(INVALID_NUMBER);\n      setIsNotificationLoading(false);\n    }\n  };\n\n  const handleHealthCheckSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n    setErrorMessage('');\n    if (!enabled && !subscribingRatioValue) {\n      setEnabled(true);\n      subscribeAlert(\n        { eventType: config, inputs },\n        defaultRatios[defaultRatios.length - 1],\n      )\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch((e) => {\n          setErrorMessage(UNABLE_TO_SUBSCRIBE);\n          setEnabled(false);\n          throw e;\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({ eventType: config, inputs })\n        .then((res) => {\n          setCustomValue('');\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch((e) => {\n          setErrorMessage(UNABLE_TO_SUBSCRIBE);\n          setEnabled(true);\n          throw e;\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    subscribingRatioValue,\n    enabled,\n    isNotificationLoading,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div>\n      <div\n        className={clsx(\n          'EventTypeCustomHealthCheckRow__container',\n          classNames?.container,\n        )}\n      >\n        <div\n          className={clsx('EventTypeHealthCheckRow__label', classNames?.label)}\n        >\n          {config.name}\n          {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n            <NotifiTooltip\n              classNames={classNames?.tooltip}\n              content={tooltipContent}\n            />\n          ) : null}\n        </div>\n        <NotifiToggle\n          checked={enabled}\n          classNames={classNames?.toggle}\n          disabled={disabled || isNotificationLoading}\n          setChecked={handleHealthCheckSubscription}\n        />\n      </div>\n      {enabled && config.checkRatios?.length ? (\n        <>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__content',\n              classNames?.content,\n            )}\n          >\n            {config.healthCheckSubtitle\n              ? config.healthCheckSubtitle\n              : `Alert me when my margin ratio is ${config.checkRatios[0]?.type}`}\n          </div>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__buttonContainer',\n              classNames?.buttonContainer,\n            )}\n          >\n            {config.checkRatios.map((value, index) => {\n              const numberType = config.numberType;\n\n              let valueToShow = null;\n              switch (numberType) {\n                case 'percentage':\n                  valueToShow = value.ratio + '%';\n                  break;\n                case 'price':\n                  valueToShow = '$' + value.ratio;\n                  break;\n                default: // 'integer'\n                  valueToShow = value.ratio;\n              }\n              return (\n                <div\n                  key={index}\n                  className={clsx(\n                    'EventTypeHealthCheckRow__button',\n                    `${\n                      index === selectedIndex\n                        ? ' EventTypeHealthCheckRow__buttonSelected'\n                        : undefined\n                    }`,\n                    isNotificationLoading ? 'buttonDisabled' : undefined,\n                    classNames?.button,\n                  )}\n                  onClick={() => {\n                    if (\n                      isNotificationLoading === true ||\n                      selectedIndex === index\n                    ) {\n                      return;\n                    }\n\n                    handleRatioButtonNewSubscription(value.ratio, index);\n                  }}\n                >\n                  {valueToShow}\n                </div>\n              );\n            })}\n\n            <input\n              ref={customInputRef}\n              onKeyUp={(e) => handleKeypressUp(e)}\n              onFocus={(e) =>\n                (e.target.placeholder =\n                  config.numberType === 'percentage' ? '0.00' : '0')\n              }\n              onClick={() => {\n                setErrorMessage('');\n                setSelectedIndex(null);\n              }}\n              disabled={isNotificationLoading}\n              onBlur={handleCustomRatioButtonNewSubscription}\n              value={customValue}\n              placeholder=\"Custom\"\n              className={clsx(\n                'EventTypeHealthCheckRow__button',\n                'EventTypeHealthCheckRow__customButton',\n                `${\n                  selectedIndex === 3\n                    ? ' EventTypeHealthCheckRow__buttonSelected'\n                    : undefined\n                }`,\n                classNames?.button,\n              )}\n              onChange={(e) => {\n                if (config.numberType === 'percentage') {\n                  handleSuffixPercentage(e.target.value);\n                } else if (config.numberType === 'price') {\n                  handlePrefixDollar(e.target.value);\n                } else {\n                  setCustomValue(e.target.value ?? '');\n                }\n              }}\n            />\n          </div>\n          <label\n            className={clsx(\n              'NotifiEmailInput__errorMessage',\n              classNames?.errorMessage,\n            )}\n          >\n            {errorMessage}\n          </label>\n        </>\n      ) : null}\n    </div>\n  );\n};\n", "import {\n  CustomTopicTypeItem,\n  EventTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  customToggleConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeCustomToggleRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: CustomTopicTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeCustomToggleRow: React.FC<\n  EventTypeCustomToggleRowProps\n> = ({\n  classNames,\n  disabled,\n  config,\n  inputs,\n}: EventTypeCustomToggleRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n\n  if (config.selectedUIType !== 'TOGGLE') {\n    return null;\n  }\n\n  const tooltipContent = config.tooltipContent;\n  const didFetch = useRef(false);\n\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: customToggleConfiguration({\n            sourceType: config.sourceType,\n            filterType: config.filterType,\n            filterOptions: config.filterOptions,\n            sourceAddress: resolveStringRef(\n              alertName,\n              config.sourceAddress,\n              inputs,\n            ),\n          }),\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, config],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    if (!enabled) {\n      setEnabled(true);\n      subscribeAlert({\n        eventType: config,\n        inputs: inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n\n      unSubscribeAlert({\n        eventType: config,\n        inputs: inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(true);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    enabled,\n    alerts,\n    instantSubscribe,\n    alertName,\n    isNotificationLoading,\n    setEnabled,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeCustomToggleRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypeCustomToggleRow__label', classNames?.label)}\n      >\n        {config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        checked={enabled}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import { EventTypeItem } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  DirectPushEventTypeItem,\n  SubscriptionData,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport {\n  AlertConfiguration,\n  DeepPartialReadonly,\n  directMessageConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeDirectPushRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: DirectPushEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeDirectPushRow: React.FC<EventTypeDirectPushRowProps> = ({\n  classNames,\n  disabled,\n  config,\n  inputs,\n}: EventTypeDirectPushRowProps) => {\n  const { alerts, loading, setLoading, render } =\n    useNotifiSubscriptionContext();\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n  const [enabled, setEnabled] = useState(false);\n\n  const pushId = useMemo(\n    () => resolveStringRef(config.name, config.directPushId, inputs),\n    [config, inputs],\n  );\n  const alertName = useMemo<string>(() => {\n    if (config.directPushId.type === 'value') {\n      return config.name;\n    }\n\n    return `${config.name}:${pushId}`;\n  }, [config, pushId]);\n  const alertConfiguration = useMemo<AlertConfiguration>(() => {\n    return directMessageConfiguration({\n      type: pushId,\n    });\n  }, [alertName, config, inputs]);\n  const tooltipContent = config.tooltipContent;\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: alertConfiguration,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n  }, [alertName, alerts]);\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    if (!enabled) {\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then(() => {\n          setEnabled(true);\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setEnabled(false))\n        .finally(() => setLoading(false));\n    } else {\n      unSubscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then(() => {\n          setEnabled(false);\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setEnabled(true))\n        .finally(() => setLoading(false));\n    }\n  }, [enabled, instantSubscribe, alertConfiguration, alertName]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeDirectPushRow__container',\n        classNames?.container,\n      )}\n    >\n      <div className={clsx('EventTypeDirectPushRow__label', classNames?.label)}>\n        {config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled}\n        checked={enabled}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import { ThresholdDirection } from '@notifi-network/notifi-frontend-client';\nimport {\n  EventTypeItem,\n  HealthCheckEventInputsWithCustomPercentage,\n  HealthCheckEventInputsWithIndex,\n  HealthCheckInputs,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  CheckRatio,\n  HealthCheckEventTypeItem,\n  SubscriptionData,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  healthThresholdConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\n\nconst getParsedInputNumber = (input: string): number | null => {\n  if (input.indexOf('%') === input.length - 1) {\n    return parseFloat(input.slice(0, -1)) ?? null;\n  }\n  return null;\n};\n\nconst UNABLE_TO_SUBSCRIBE = 'Unable to subscribe, please try again';\nconst INVALID_NUMBER = 'Please enter a valid number';\n\nexport type EventTypeHealthCheckRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    content: string;\n    button: string;\n    buttonContainer: string;\n    errorMessage: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: HealthCheckEventTypeItem;\n}>;\n\nconst inputsValidator = (\n  inputs: HealthCheckInputs,\n): inputs is HealthCheckEventInputsWithIndex => {\n  return 'index' in inputs;\n};\n\nexport const EventTypeHealthCheckRow: React.FC<\n  EventTypeHealthCheckRowProps\n> = ({ classNames, config, disabled }: EventTypeHealthCheckRowProps) => {\n  const customInputRef = useRef<HTMLInputElement>(null);\n  const { alerts, loading, setLoading, render } =\n    useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const handleSuffixPercentage = (value: string) => {\n    value = value.replace('%', '');\n    setCustomValue(value + '%');\n  };\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [initialRatio, setInitialRatio] = useState<number | null>(null);\n  const [customValue, setCustomValue] = useState<string>('');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n  const tooltipContent = config.tooltipContent;\n\n  const isValueType = config && config.checkRatios.type === 'value';\n  let ratios: CheckRatio[] = [];\n  let thresholdDirection: ThresholdDirection = 'below';\n  if (isValueType) {\n    ratios = config.checkRatios.value;\n    thresholdDirection = ratios[0].type;\n  }\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    const alert = alerts[alertName];\n    const checkRatios = ratios.map((ratio) => ratio.ratio);\n    if (alert) {\n      let alertRatioValue: number | null = null;\n      if (alert.filterOptions) {\n        alertRatioValue = JSON.parse(alert.filterOptions).threshold;\n      }\n      setEnabled(true);\n      if (alertRatioValue) {\n        ratios.forEach((ratio, index) => {\n          if (ratio.ratio === alertRatioValue && customValue === '') {\n            setSelectedIndex(index);\n          }\n        });\n        setInitialRatio(alertRatioValue);\n        if (!checkRatios.includes(alertRatioValue) && customValue === '') {\n          setSelectedIndex(3);\n          setCustomValue(alertRatioValue * 100 + '%');\n        }\n      }\n    } else {\n      setEnabled(false);\n      setSelectedIndex(ratios.length - 1);\n      setInitialRatio(ratios[ratios.length - 1]?.ratio);\n    }\n  }, [\n    alertName,\n    alerts,\n    loading,\n    ratios,\n    setEnabled,\n    setCustomValue,\n    setSelectedIndex,\n  ]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs:\n          | HealthCheckEventInputsWithIndex\n          | HealthCheckEventInputsWithCustomPercentage;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: healthThresholdConfiguration({\n            alertFrequency: config.alertFrequency,\n            percentage: inputsValidator(alertDetail.inputs)\n              ? ratios[alertDetail.inputs.index].ratio\n              : alertDetail.inputs.customPercentage,\n            thresholdDirection: inputsValidator(alertDetail.inputs)\n              ? thresholdDirection\n              : alertDetail.inputs.thresholdDirection,\n          }),\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, config],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleToggleNewSubscription = useCallback(() => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    setErrorMessage('');\n    if (!enabled && initialRatio !== null) {\n      subscribeAlert({\n        eventType: config,\n        inputs: {\n          index: 0,\n        },\n      })\n        .then(() => {\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE))\n        .finally(() => setLoading(false));\n    } else {\n      unSubscribeAlert({\n        eventType: config,\n        inputs: {},\n      })\n        .then(() => {\n          setCustomValue('');\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE))\n        .finally(() => setLoading(false));\n    }\n  }, [initialRatio, enabled, isValueType]);\n\n  const handleRatioButtonNewSubscription = (value: number, index: number) => {\n    if (loading) {\n      return;\n    }\n    setErrorMessage('');\n    if (value) {\n      subscribeAlert({\n        eventType: config,\n        inputs: {\n          index: index,\n        },\n      })\n        .then(() => {\n          setSelectedIndex(index);\n          setCustomValue('');\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE));\n    } else {\n      setErrorMessage(INVALID_NUMBER);\n    }\n  };\n\n  const handleCustomRatioButtonNewSubscription = () => {\n    if (loading) {\n      return;\n    }\n    setErrorMessage('');\n    if (customInputRef.current) {\n      customInputRef.current.placeholder = 'Custom';\n      const ratioNumber = getParsedInputNumber(customInputRef.current.value);\n      if (\n        ratioNumber &&\n        ratioNumber >= 0 &&\n        ratioNumber <= 100 &&\n        customValue\n      ) {\n        subscribeAlert({\n          eventType: config,\n          inputs: {\n            customPercentage: ratioNumber / 100,\n            thresholdDirection,\n          },\n        })\n          .then(() => {\n            setSelectedIndex(3);\n            isUsingFrontendClient && frontendClient.fetchData().then(render);\n          })\n          .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE));\n      } else {\n        setErrorMessage(INVALID_NUMBER);\n      }\n    }\n  };\n\n  const handleKeypressUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (customInputRef.current) {\n        customInputRef.current.blur();\n        event.preventDefault();\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className={clsx(\n          'EventTypeHealthCheckRow__container',\n          classNames?.container,\n        )}\n      >\n        <div\n          className={clsx('EventTypeHealthCheckRow__label', classNames?.label)}\n        >\n          {config.name}\n          {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n            <NotifiTooltip\n              classNames={classNames?.tooltip}\n              content={tooltipContent}\n            />\n          ) : null}\n        </div>\n        <NotifiToggle\n          checked={enabled}\n          classNames={classNames?.toggle}\n          disabled={disabled}\n          setChecked={handleToggleNewSubscription}\n        />\n      </div>\n      {enabled ? (\n        <>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__content',\n              classNames?.content,\n            )}\n          >\n            Alert me when my margin ratio is {ratios[0]?.type}\n          </div>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__buttonContainer',\n              classNames?.buttonContainer,\n            )}\n          >\n            {ratios.map((value, index) => {\n              const percentage = value.ratio * 100 + '%';\n              return (\n                <div\n                  key={index}\n                  className={clsx(\n                    'EventTypeHealthCheckRow__button',\n                    `${\n                      index === selectedIndex\n                        ? ' EventTypeHealthCheckRow__buttonSelected'\n                        : undefined\n                    }`,\n                    classNames?.button,\n                  )}\n                  onClick={() => {\n                    handleRatioButtonNewSubscription(value.ratio, index);\n                  }}\n                >\n                  {percentage}\n                </div>\n              );\n            })}\n            <input\n              ref={customInputRef}\n              onKeyUp={(e) => handleKeypressUp(e)}\n              onFocus={(e) => (e.target.placeholder = '0.00%')}\n              onClick={() => {\n                setErrorMessage('');\n                setSelectedIndex(null);\n              }}\n              onBlur={handleCustomRatioButtonNewSubscription}\n              value={customValue}\n              placeholder=\"Custom\"\n              className={clsx(\n                'EventTypeHealthCheckRow__button',\n                'EventTypeHealthCheckRow__customButton',\n                `${\n                  selectedIndex === 3\n                    ? ' EventTypeHealthCheckRow__buttonSelected'\n                    : undefined\n                }`,\n                classNames?.button,\n              )}\n              onChange={(e) => {\n                handleSuffixPercentage(e.target.value ?? '');\n              }}\n            />\n          </div>\n          <label\n            className={clsx(\n              'NotifiEmailInput__errorMessage',\n              classNames?.errorMessage,\n            )}\n          >\n            {errorMessage}\n          </label>\n        </>\n      ) : null}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { LabelEventTypeItem } from '../../hooks';\nimport { DeepPartialReadonly } from '../../utils';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\n\nexport type EventTypeLabelRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  config: LabelEventTypeItem;\n}>;\n\nexport const EventTypeLabelRow: React.FC<EventTypeLabelRowProps> = ({\n  classNames,\n  config,\n}: EventTypeLabelRowProps) => {\n  const { name, tooltipContent } = config;\n\n  return (\n    <div\n      className={clsx('EventTypeLabelRow__container', classNames?.container)}\n    >\n      <div className={clsx('EventTypeLabelRow__label', classNames?.label)}>\n        {name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n", "import { EventTypeItem } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  PriceChangeEventTypeItem,\n  SubscriptionData,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport {\n  AlertConfiguration,\n  DeepPartialReadonly,\n  priceChangeConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\n\nexport type EventTypePriceChangeRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: PriceChangeEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypePriceChangeRow: React.FC<\n  EventTypePriceChangeRowProps\n> = ({\n  classNames,\n  disabled,\n  config,\n  inputs,\n}: EventTypePriceChangeRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n  const alertConfiguration = useMemo<AlertConfiguration>(() => {\n    return priceChangeConfiguration({\n      tokenIds: config.tokenIds,\n    });\n  }, [alertName, config]);\n  const tooltipContent = config.tooltipContent;\n\n  const didFetch = useRef(false);\n\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: alertConfiguration,\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, config],\n  );\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    if (!enabled) {\n      setEnabled(true);\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    loading,\n    enabled,\n    instantSubscribe,\n    alertConfiguration,\n    alertName,\n    isNotificationLoading,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypePriceChangeRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypePriceChangeRow__label', classNames?.label)}\n      >\n        {config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        checked={enabled}\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import {\n  EventTypeItem,\n  TradingPairInputs,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { DeleteIcon } from '../../assets/DeleteIcon';\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  SubscriptionData,\n  TradingPairEventTypeItem,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  subscribeAlertByFrontendClient,\n  tradingPairConfiguration,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringArrayRef } from './resolveRef';\n\nexport type EventTypeTradingPairsRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    addPair: string;\n    tooltip: NotifiTooltipProps['classNames'];\n    tradingPairAlertRow: TradingPairAlertRowProps['classNames'];\n    tradingPairSettingsRow: TradingPairSettingsRowProps['classNames'];\n  }>;\n  config: TradingPairEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeTradingPairsRow: React.FC<\n  EventTypeTradingPairsRowProps\n> = ({ classNames, config, inputs }: EventTypeTradingPairsRowProps) => {\n  const { name, tooltipContent } = config;\n  const { alerts } = useNotifiSubscriptionContext();\n\n  const tradingPairAlertNames = useMemo(() => {\n    if (alerts === undefined) {\n      return [];\n    }\n\n    return Object.keys(alerts)\n      .filter((alertName) => alertName.indexOf(config.name) >= 0)\n      .sort((a, b) => {\n        const getTime = (alertName: string) => {\n          const [, time] = alertName.split(':;:');\n          const date = new Date(time);\n          return date.getTime();\n        };\n\n        return getTime(a) - getTime(b);\n      });\n  }, [alerts, config.name]);\n\n  const [showInput, setShowInput] = useState(false);\n  const hasSetInput = useRef(false);\n  useEffect(() => {\n    if (!hasSetInput.current && alerts !== undefined) {\n      hasSetInput.current = true;\n      setShowInput(tradingPairAlertNames.length === 0);\n    }\n  }, [alerts, tradingPairAlertNames]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeTradingPairsRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypeTradingPairsRow__label', classNames?.label)}\n      >\n        {name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      {tradingPairAlertNames.map((alertName) => {\n        return (\n          <TradingPairAlertRow\n            key={alertName}\n            classNames={classNames?.tradingPairAlertRow}\n            alertName={alertName}\n            inputs={inputs}\n          />\n        );\n      })}\n      {showInput ? (\n        <TradingPairSettingsRow\n          classNames={classNames?.tradingPairSettingsRow}\n          config={config}\n          inputs={inputs}\n          onSave={() => {\n            setShowInput(false);\n          }}\n        />\n      ) : null}\n      <button\n        className={clsx(\n          'EventTypeTradingPairsRow__addPair',\n          classNames?.addPair,\n        )}\n        disabled={showInput}\n        onClick={() => {\n          setShowInput(true);\n        }}\n      >\n        Add pair\n      </button>\n    </div>\n  );\n};\n\nexport type TradingPairAlertRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    textContainer: string;\n    name: string;\n    description: string;\n    deleteIcon: string;\n  }>;\n  alertName: string;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const TradingPairAlertRow: React.FC<TradingPairAlertRowProps> = ({\n  classNames,\n  alertName,\n  inputs,\n}: TradingPairAlertRowProps) => {\n  const { render } = useNotifiSubscriptionContext();\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const { name, description } = useMemo(() => {\n    // const alertName = `${config.name}:;:${now}:;:${selectedPair}:;:${\n    //   above ? 'above' : 'below'\n    // }:;:${price}`;\n    const [, , name, above, price] = alertName.split(':;:');\n    const description = `Alert me when trade price is ${above}: ${price}`;\n    return {\n      name,\n      description,\n    };\n  }, [alertName]);\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  return (\n    <div\n      className={clsx('TradingPairAlertRow__container', classNames?.container)}\n    >\n      <div\n        className={clsx(\n          'TradingPairAlertRow__textContainer',\n          classNames?.textContainer,\n        )}\n      >\n        <span className={clsx('TradingPairAlertRow__name', classNames?.name)}>\n          {name}\n        </span>\n        <span\n          className={clsx(\n            'TradingPairAlertRow__description',\n            classNames?.description,\n          )}\n        >\n          {description}\n        </span>\n      </div>\n      <div\n        className={clsx(\n          'TradingPairAlertRow__deleteIcon',\n          classNames?.deleteIcon,\n        )}\n        onClick={() => {\n          unSubscribeAlert({\n            eventType: {\n              name: alertName,\n            } as EventTypeItem, // We only need alertName to unsubscribe\n            inputs,\n          }).then(() => {\n            isUsingFrontendClient && frontendClient.fetchData().then(render);\n          });\n        }}\n      >\n        <DeleteIcon />\n      </div>\n    </div>\n  );\n};\nexport type TradingPairSettingsRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    buttonContainer: string;\n    radioButton: string;\n    container: string;\n    dropdown: string;\n    dropdownContainer: string;\n    label: string;\n    option: string;\n    priceInput: string;\n    priceInputContainer: string;\n    saveButton: string;\n  }>;\n  config: TradingPairEventTypeItem;\n  inputs: Record<string, unknown>;\n  onSave: () => void;\n}>;\n\nexport const TradingPairSettingsRow: React.FC<TradingPairSettingsRowProps> = ({\n  classNames,\n  config,\n  inputs,\n  onSave,\n}: TradingPairSettingsRowProps) => {\n  const tradingPairs = resolveStringArrayRef(\n    config.name,\n    config.tradingPairs,\n    inputs,\n  );\n\n  const [selectedPair, setSelectedPair] = useState<string | undefined>(\n    undefined,\n  );\n  const [above, setAbove] = useState<boolean>(true);\n  const [price, setPrice] = useState<number>(0.0);\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { render } = useNotifiSubscriptionContext();\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const alertConfiguration = useMemo(() => {\n    return selectedPair\n      ? tradingPairConfiguration({\n          tradingPair: selectedPair,\n          above,\n          price,\n        })\n      : undefined;\n  }, [selectedPair, above, price]);\n\n  const alertName = useMemo(() => {\n    const now = new Date().toISOString();\n\n    return `${config.name}:;:${now}:;:${selectedPair}:;:${\n      above ? 'above' : 'below'\n    }:;:${price}`;\n  }, [config, selectedPair, above, price]);\n\n  const subscribeAlert = async (\n    alertDetail: Readonly<{\n      eventType: EventTypeItem;\n      inputs: TradingPairInputs;\n    }>,\n  ): Promise<SubscriptionData> => {\n    if (isUsingFrontendClient) {\n      return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n    }\n    if (!alertConfiguration)\n      throw new Error('alertConfiguration is undefinded');\n\n    return instantSubscribe({\n      alertName,\n      alertConfiguration,\n    });\n  };\n\n  return (\n    <div\n      className={clsx(\n        'TradingPairSettingsRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx(\n          'TradingPairSettingsRow__dropdownContainer',\n          classNames?.dropdownContainer,\n        )}\n      >\n        <select\n          className={clsx(\n            'TradingPairSettingsRow__dropdown',\n            classNames?.dropdown,\n          )}\n          onChange={(e) => setSelectedPair(e.target.value)}\n          value={selectedPair}\n        >\n          <option\n            className={clsx(\n              'TradingPairSettingsRow__option',\n              classNames?.option,\n            )}\n            key=\"unselected\"\n            value={undefined}\n          >\n            Select a trading pair\n          </option>\n          {tradingPairs.map((pair) => (\n            <option\n              className={clsx(\n                'TradingPairSettingsRow__option',\n                classNames?.option,\n              )}\n              key={pair}\n              value={pair}\n            >\n              {pair}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div\n        className={clsx(\n          'TradingPairSettingsRow__buttonContainer',\n          classNames?.buttonContainer,\n        )}\n      >\n        <button\n          className={clsx(\n            'TradingPairSettingsRow__radioButton',\n            classNames?.radioButton,\n            { TradingPairSettingsRow__radioSelected: above },\n          )}\n          onClick={() => setAbove(true)}\n        >\n          Above\n        </button>\n        <button\n          className={clsx(\n            'TradingPairSettingsRow__radioButton',\n            classNames?.radioButton,\n            { TradingPairSettingsRow__radioSelected: !above },\n          )}\n          onClick={() => setAbove(false)}\n        >\n          Below\n        </button>\n      </div>\n      <div\n        className={clsx(\n          'TradingPairSettingsRow__priceInputContainer',\n          classNames?.priceInputContainer,\n        )}\n      >\n        <input\n          className={clsx(\n            'TradingPairSettingsRow__priceInput',\n            classNames?.priceInput,\n          )}\n          name=\"notifi-tradingpair-price\"\n          type=\"number\"\n          inputMode=\"decimal\"\n          value={price}\n          onChange={(e) => {\n            setPrice(e.target.valueAsNumber);\n          }}\n        />\n      </div>\n      <button\n        className={clsx(\n          'TradingPairSettingsRow__saveButton',\n          classNames?.saveButton,\n        )}\n        disabled={selectedPair === undefined}\n        onClick={async () => {\n          if (selectedPair !== undefined) {\n            await subscribeAlert({\n              eventType: { ...config, name: alertName },\n              inputs: {\n                price,\n                direction: above ? 'above' : 'below',\n                pair: selectedPair,\n                ...inputs,\n              },\n            });\n            frontendClient.fetchData().then(render);\n            setSelectedPair(undefined);\n            setAbove(true);\n            setPrice(0.0);\n            onSave();\n          }\n        }}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const DeleteIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"inherit\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.5 17.4444C7.5 18.3 8.175 19 9 19H15C15.825 19 16.5 18.3 16.5 17.4444V8.11111H7.5V17.4444ZM17.25 5.77778H14.625L13.875 5H10.125L9.375 5.77778H6.75V7.33333H17.25V5.77778Z\"\n        fill=\"#inherit\"\n      />\n    </svg>\n  );\n};\n", "import {\n  EventTypeItem,\n  FusionEventTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { DeleteIcon } from '../../assets/DeleteIcon';\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  FusionMultiThresholdEventTypeItem,\n  SubscriptionData,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  fusionHealthCheckConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeFusionMultiThresholdRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    content: string;\n    label: string;\n    addThreshold: string;\n    tooltip: NotifiTooltipProps['classNames'];\n    fusionMultiThresholdAlertRow: FusionMultiThresholdAlertRowProps['classNames'];\n    fusionMultiThresholdSettingsRow: FusionMultiThresholdSettingsRowProps['classNames'];\n  }>;\n  config: FusionMultiThresholdEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeFusionMultiThresholdRow: React.FC<\n  EventTypeFusionMultiThresholdRowProps\n> = ({ classNames, config, inputs }: EventTypeFusionMultiThresholdRowProps) => {\n  const { displayNameOverride, name, tooltipContent } = config;\n  const { alerts } = useNotifiSubscriptionContext();\n\n  const fusionMultiThresholdAlertNames = useMemo(() => {\n    if (alerts === undefined) {\n      return [];\n    }\n\n    return Object.keys(alerts)\n      .filter((alertName) => alertName.indexOf(config.name) >= 0)\n      .sort((a, b) => {\n        const getTime = (alertName: string) => {\n          const [, time] = alertName.split(':;:');\n          const date = new Date(time);\n          return date.getTime();\n        };\n\n        return getTime(a) - getTime(b);\n      });\n  }, [alerts, config.name]);\n\n  const [showInput, setShowInput] = useState(false);\n  const hasSetInput = useRef(false);\n  useEffect(() => {\n    if (!hasSetInput.current && alerts !== undefined) {\n      hasSetInput.current = true;\n      setShowInput(fusionMultiThresholdAlertNames.length === 0);\n    }\n  }, [alerts, fusionMultiThresholdAlertNames]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeFusionMultiThresholdRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx(\n          'EventTypeFusionMultiThresholdRow__label',\n          classNames?.label,\n        )}\n      >\n        {displayNameOverride ?? name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <div\n        className={clsx(\n          'EventTypeFusionMultiThresholdRow__content',\n          classNames?.content,\n        )}\n      >\n        {config.subtitle\n          ? config.subtitle\n          : `Alert me when my margin ratio is:`}\n      </div>\n      {fusionMultiThresholdAlertNames.map((alertName) => {\n        return (\n          <FusionMultiThresholdAlertRow\n            key={alertName}\n            classNames={classNames?.fusionMultiThresholdAlertRow}\n            alertName={alertName}\n            inputs={inputs}\n          />\n        );\n      })}\n      {showInput ? (\n        <FusionMultiThresholdSettingsRow\n          classNames={classNames?.fusionMultiThresholdSettingsRow}\n          config={config}\n          inputs={inputs}\n          onSave={() => {\n            setShowInput(false);\n          }}\n        />\n      ) : null}\n      <button\n        className={clsx(\n          'EventTypeFusionMultiThresholdRow__addThreshold',\n          classNames?.addThreshold,\n        )}\n        disabled={showInput}\n        onClick={() => {\n          setShowInput(true);\n        }}\n      >\n        {config.addThresholdTitle ? config.addThresholdTitle : 'Add alert'}\n      </button>\n    </div>\n  );\n};\n\nexport type FusionMultiThresholdAlertRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    textContainer: string;\n    name: string;\n    description: string;\n    deleteIcon: string;\n  }>;\n  alertName: string;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const FusionMultiThresholdAlertRow: React.FC<\n  FusionMultiThresholdAlertRowProps\n> = ({ classNames, alertName, inputs }: FusionMultiThresholdAlertRowProps) => {\n  const { render } = useNotifiSubscriptionContext();\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const name = useMemo(() => {\n    const [, , above, threshold] = alertName.split(':;:');\n    return above + ' ' + threshold;\n  }, [alertName]);\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  return (\n    <div\n      className={clsx(\n        'FusionMultiThresholdAlertRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx(\n          'FusionMultiThresholdAlertRow__textContainer',\n          classNames?.textContainer,\n        )}\n      >\n        <span\n          className={clsx(\n            'FusionMultiThresholdAlertRow__name',\n            classNames?.name,\n          )}\n        >\n          {name}\n        </span>\n      </div>\n      <div\n        className={clsx(\n          'FusionMultiThresholdAlertRow__deleteIcon',\n          classNames?.deleteIcon,\n        )}\n        onClick={() => {\n          unSubscribeAlert({\n            eventType: {\n              name: alertName,\n            } as EventTypeItem, // We only need alertName to unsubscribe\n            inputs,\n          }).then(() => {\n            isUsingFrontendClient && frontendClient.fetchData().then(render);\n          });\n        }}\n      >\n        <DeleteIcon />\n      </div>\n    </div>\n  );\n};\nexport type FusionMultiThresholdSettingsRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    buttonContainer: string;\n    radioButton: string;\n    container: string;\n    label: string;\n    option: string;\n    thresholdInput: string;\n    thresholdInputContainer: string;\n    saveButton: string;\n  }>;\n  config: FusionMultiThresholdEventTypeItem;\n  inputs: Record<string, unknown>;\n  onSave: () => void;\n}>;\n\nexport const FusionMultiThresholdSettingsRow: React.FC<\n  FusionMultiThresholdSettingsRowProps\n> = ({\n  classNames,\n  config,\n  inputs,\n  onSave,\n}: FusionMultiThresholdSettingsRowProps) => {\n  const [above, setAbove] = useState<boolean>(true);\n  const [threshold, setThreshold] = useState<number>(0.0);\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { render } = useNotifiSubscriptionContext();\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const fusionEventId = useMemo(\n    () => resolveStringRef(config.name, config.fusionEventId, inputs),\n    [config, inputs],\n  );\n\n  const fusionSourceAddress = useMemo(\n    () => resolveStringRef(config.name, config.sourceAddress, inputs),\n    [config, inputs],\n  );\n\n  const alertConfiguration = useMemo(() => {\n    return fusionHealthCheckConfiguration({\n      maintainSourceGroup: config?.maintainSourceGroup,\n      fusionId: fusionEventId,\n      fusionSourceAddress,\n      alertFrequency: config.alertFrequency,\n      thresholdDirection: above ? 'above' : 'below',\n      threshold:\n        config.numberType === 'percentage' ? threshold / 100 : threshold,\n    });\n  }, [above, threshold]);\n\n  const alertName = useMemo(() => {\n    const now = new Date().toISOString();\n\n    return `${config.name}:;:${now}:;:${\n      above ? 'Above' : 'Below'\n    }:;:${threshold.toFixed(2)}${\n      config.numberType === 'percentage' ? '%' : ''\n    }`;\n  }, [config, above, threshold]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: FusionMultiThresholdEventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n      threshold: number,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        const fusionEventType: FusionEventTypeItem = {\n          name: alertDetail.eventType.name,\n          type: 'fusion',\n          fusionEventId: alertDetail.eventType.fusionEventId,\n          sourceAddress: alertDetail.eventType.sourceAddress,\n          maintainSourceGroup: alertDetail.eventType.maintainSourceGroup,\n          alertFrequency: alertDetail.eventType.alertFrequency,\n          selectedUIType: 'HEALTH_CHECK',\n          numberType: alertDetail.eventType.numberType,\n          healthCheckSubtitle: '',\n          checkRatios: [{ type: above ? 'above' : 'below', ratio: threshold }],\n        };\n        alertDetail.inputs[`${alertDetail.eventType.name}__healthRatio`] =\n          threshold;\n        alertDetail.inputs[\n          `${alertDetail.eventType.name}__healthThresholdDirection`\n        ] = above ? 'above' : 'below';\n        return subscribeAlertByFrontendClient(frontendClient, {\n          eventType: fusionEventType,\n          inputs: alertDetail.inputs,\n        });\n      }\n      if (!alertConfiguration)\n        throw new Error('alertConfiguration is undefinded');\n\n      return instantSubscribe({\n        alertName,\n        alertConfiguration,\n      });\n    },\n    [isUsingFrontendClient, frontendClient, above, alertConfiguration],\n  );\n\n  return (\n    <div\n      className={clsx(\n        'FusionMultiThresholdSettingsRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx(\n          'FusionMultiThresholdSettingsRow__buttonContainer',\n          classNames?.buttonContainer,\n        )}\n      >\n        <button\n          className={clsx(\n            'FusionMultiThresholdSettingsRow__radioButton',\n            classNames?.radioButton,\n            { FusionMultiThresholdSettingsRow__radioSelected: above },\n          )}\n          onClick={() => setAbove(true)}\n        >\n          Above\n        </button>\n        <button\n          className={clsx(\n            'FusionMultiThresholdSettingsRow__radioButton',\n            classNames?.radioButton,\n            { FusionMultiThresholdSettingsRow__radioSelected: !above },\n          )}\n          onClick={() => setAbove(false)}\n        >\n          Below\n        </button>\n      </div>\n      <div\n        className={clsx(\n          'FusionMultiThresholdSettingsRow__thresholdInputContainer',\n          classNames?.thresholdInputContainer,\n        )}\n      >\n        <input\n          className={clsx(\n            'FusionMultiThresholdSettingsRow__thresholdInput',\n            classNames?.thresholdInput,\n          )}\n          name=\"notifi-fusionmultithreshold-threshold\"\n          type=\"number\"\n          inputMode=\"decimal\"\n          value={threshold}\n          onChange={(e) => {\n            setThreshold(e.target.valueAsNumber);\n          }}\n        />\n      </div>\n      <button\n        className={clsx(\n          'FusionMultiThresholdSettingsRow__saveButton',\n          classNames?.saveButton,\n        )}\n        disabled={threshold === undefined}\n        onClick={async () => {\n          await subscribeAlert(\n            {\n              eventType: { ...config, name: alertName },\n              inputs: inputs,\n            },\n            threshold,\n          );\n          frontendClient.fetchData().then(render);\n          setAbove(true);\n          setThreshold(0.0);\n          onSave();\n        }}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { DeepPartialReadonly } from '../../utils';\n\nexport type EventTypeUnsupportedRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n  }>;\n}>;\n\nexport const EventTypeUnsupportedRow: React.FC<\n  EventTypeUnsupportedRowProps\n> = ({ classNames }: EventTypeUnsupportedRowProps) => {\n  return (\n    <div\n      className={clsx(\n        'EventTypeUnsupportedRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypeUnsupportedRow__label', classNames?.label)}\n      >\n        Unsupported Event Type\n      </div>\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport {\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from 'notifi-react-card/lib/utils/frontendClient';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport {\n  EventTypeItem,\n  SubscriptionData,\n  WalletBalanceEventTypeItem,\n  useNotifiSubscribe,\n} from '../../hooks';\nimport { DeepPartialReadonly, walletBalanceConfiguration } from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\n\nexport type EventTypeWalletBalanceRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: WalletBalanceEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeWalletBalanceRow: React.FC<\n  EventTypeWalletBalanceRowProps\n> = ({\n  classNames,\n  disabled,\n  config,\n  inputs,\n}: EventTypeWalletBalanceRowProps) => {\n  const { alerts, loading, connectedWallets, render, setLoading } =\n    useNotifiSubscriptionContext();\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n\n  const tooltipContent = config.tooltipContent;\n  const didFetch = useRef(false);\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: walletBalanceConfiguration({ connectedWallets }),\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, config],\n  );\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setLoading(true);\n\n    if (!enabled) {\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then(() => {\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n          setEnabled(true);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n\n            if (responseHasAlert !== true) {\n              setEnabled(false);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(true);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n          setLoading(false);\n        });\n    }\n  }, [\n    enabled,\n    instantSubscribe,\n    alertName,\n    setIsNotificationLoading,\n    isNotificationLoading,\n    setEnabled,\n  ]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeWalletBalanceRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypeWalletBalanceRow__label', classNames?.label)}\n      >\n        {config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        checked={enabled}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import React from 'react';\n\nimport { FetchedState } from '../../hooks';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from './NotifiSubscriptionCard';\nimport { SubscriptionCardUnsupported } from './SubscriptionCardUnsupported';\nimport type { SubscriptionCardV1Props } from './SubscriptionCardV1';\nimport { SubscriptionCardV1 } from './SubscriptionCardV1';\n\nexport type FetchedStateCardProps = Readonly<{\n  classNames?: Readonly<{\n    SubscriptionCardV1?: SubscriptionCardV1Props['classNames'];\n  }>;\n  copy?: Readonly<{\n    SubscriptionCardV1?: SubscriptionCardV1Props['copy'];\n  }>;\n  card: FetchedState;\n  inputDisabled: boolean;\n  inputs: Record<string, unknown>;\n  inputLabels?: NotifiInputFieldsText;\n  inputSeparators?: NotifiInputSeparators;\n  onClose?: () => void;\n}>;\n\nexport const FetchedStateCard: React.FC<FetchedStateCardProps> = ({\n  inputDisabled,\n  classNames,\n  copy,\n  card,\n  inputs,\n  inputLabels,\n  inputSeparators,\n  onClose,\n}) => {\n  let contents: React.ReactNode = <SubscriptionCardUnsupported />;\n  switch (card.data.version) {\n    case 'v1':\n      contents = (\n        <SubscriptionCardV1\n          classNames={classNames?.SubscriptionCardV1}\n          copy={copy?.SubscriptionCardV1}\n          data={card.data}\n          inputs={inputs}\n          inputDisabled={inputDisabled}\n          inputLabels={inputLabels}\n          inputSeparators={inputSeparators}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return <>{contents}</>;\n};\n", "import React from 'react';\n\nexport const SubscriptionCardUnsupported: React.FC = () => {\n  return (\n    <>\n      <div>Unsupported configuration</div>\n    </>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { useDestinationState } from 'notifi-react-card/lib/hooks/useDestinationState';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  FtuStage,\n  useNotifiClientContext,\n  useNotifiDemoPreviewContext,\n  useNotifiForm,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { useNotifiSubscribe } from '../../hooks';\nimport { DeepPartialReadonly } from '../../utils';\nimport {\n  AlertDetailsCard,\n  AlertDetailsProps,\n} from '../AlertHistory/AlertDetailsCard';\nimport { ConfigAlertModal, ConfigAlertModalProps } from '../ConfigAlertModal';\nimport {\n  ConfigDestinationModal,\n  ConfigDestinationModalProps,\n} from '../ConfigDestinationModal';\nimport NotifiAlertBox, {\n  NotifiAlertBoxButtonProps,\n  NotifiAlertBoxProps,\n} from '../NotifiAlertBox';\nimport { SignupBanner, SignupBannerProps } from '../SignupBanner';\nimport { VerifyBanner, VerifyBannerProps } from '../VerifyBanner';\nimport { ErrorStateCard, LoadingStateCard } from '../common';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from './NotifiSubscriptionCard';\nimport {\n  EditCardView,\n  EditCardViewProps,\n} from './subscription-card-views/EditCardView';\nimport {\n  ExpiredTokenView,\n  ExpiredTokenViewCardProps,\n} from './subscription-card-views/ExpiredTokenViewCard';\nimport {\n  AlertHistoryView,\n  AlertHistoryViewProps,\n  NotificationHistoryEntry,\n} from './subscription-card-views/HistoryCardView';\nimport {\n  PreviewCard,\n  PreviewCardProps,\n} from './subscription-card-views/PreviewCard';\nimport VerifyWalletView, {\n  VerifyWalletViewProps,\n} from './subscription-card-views/VerifyWalletView';\n\nexport type SubscriptionCardV1Props = Readonly<{\n  copy?: DeepPartialReadonly<{\n    EditCard: EditCardViewProps['copy'];\n    AlertHistory: AlertHistoryViewProps['copy'];\n    expiredHeader: string;\n    manageAlertsHeader: string;\n    signUpHeader: string;\n    editHeader: string;\n    verifyWalletsHeader: string;\n    historyHeader: string;\n    detailHeader: string;\n  }>;\n  classNames?: DeepPartialReadonly<{\n    alertContainer: string;\n    AlertHistoryView: AlertHistoryViewProps['classNames'];\n    AlertDetailsCard: AlertDetailsProps['classNames'];\n    PreviewCard: PreviewCardProps['classNames'];\n    HistoryCard?: AlertHistoryViewProps['classNames'];\n    EditCard: EditCardViewProps['classNames'];\n    ExpiredTokenView: ExpiredTokenViewCardProps['classNames'];\n    VerifyWalletView: VerifyWalletViewProps['classNames'];\n    NotifiAlertBox: NotifiAlertBoxProps['classNames'];\n    ErrorStateCard: string;\n    ConfigDestinationModal: ConfigDestinationModalProps['classNames'];\n    signupBanner: SignupBannerProps['classNames'];\n    ConfigAlertModal: ConfigAlertModalProps['classNames'];\n    dividerLine: string;\n    verifyBanner: VerifyBannerProps['classNames'];\n  }>;\n  inputDisabled: boolean;\n  data: CardConfigItemV1;\n  inputs: Record<string, unknown>;\n  inputLabels?: NotifiInputFieldsText;\n  inputSeparators?: NotifiInputSeparators;\n  onClose?: () => void;\n}>;\n\nexport const SubscriptionCardV1: React.FC<SubscriptionCardV1Props> = ({\n  classNames,\n  copy,\n  data,\n  inputDisabled,\n  inputs,\n  inputLabels,\n  inputSeparators,\n  onClose,\n}) => {\n  const allowedCountryCodes = [...data.contactInfo.sms.supportedCountryCodes];\n  const {\n    cardView,\n    email,\n    phoneNumber,\n    telegramId,\n    setCardView,\n    ftuStage,\n    syncFtuStage,\n    updateFtuStage,\n    loading,\n    setLoading,\n  } = useNotifiSubscriptionContext();\n  const { demoPreview } = useNotifiDemoPreviewContext();\n\n  const {\n    setEmail,\n    setTelegram,\n    setPhoneNumber,\n    setEmailErrorMessage,\n    setTelegramErrorMessage,\n    setPhoneNumberErrorMessage,\n  } = useNotifiForm();\n\n  const { isAuthenticated, isTokenExpired } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const { isClientTokenExpired, isClientAuthenticated } = useMemo(() => {\n    let isClientTokenExpired = false;\n    let isClientAuthenticated = false;\n    if (isUsingFrontendClient) {\n      isClientTokenExpired = frontendClient.userState?.status === 'expired';\n      isClientAuthenticated =\n        frontendClient.userState?.status === 'authenticated';\n    } else {\n      isClientTokenExpired = isTokenExpired;\n      isClientAuthenticated = isAuthenticated;\n    }\n    return { isClientTokenExpired, isClientAuthenticated };\n  }, [\n    frontendClient.userState?.status,\n    isTokenExpired,\n    isAuthenticated,\n    isUsingFrontendClient,\n  ]);\n\n  const { unverifiedDestinations, isTargetsExist } = useDestinationState();\n\n  const [selectedAlertEntry, setAlertEntry] = useState<\n    NotificationHistoryEntry | undefined\n  >(undefined);\n\n  let view = null;\n\n  const resetFormState = useCallback(() => {\n    setEmail(email);\n    setPhoneNumber(phoneNumber);\n    setTelegram(telegramId);\n    setEmailErrorMessage('');\n    setTelegramErrorMessage('');\n    setPhoneNumberErrorMessage('');\n  }, [email, phoneNumber, telegramId]);\n\n  useEffect(() => {\n    setCardView(() => {\n      if (demoPreview) {\n        return {\n          state: demoPreview.view,\n          reason:\n            demoPreview.view === 'error' ? 'test example reason' : undefined,\n        };\n      }\n      if (isClientTokenExpired) {\n        return { state: 'expired' };\n      }\n\n      if (!isClientAuthenticated) {\n        return { state: 'signup' };\n      }\n      setLoading(true);\n      syncFtuStage(data.isContactInfoRequired)\n        .catch((e) => {\n          console.log(`Failed to syncFtuStage: ${e}`);\n        })\n        .finally(() => setLoading(false));\n\n      return { state: 'history' };\n    });\n  }, []);\n\n  const rightIcon: NotifiAlertBoxButtonProps | undefined = useMemo(() => {\n    if (onClose === undefined) {\n      return undefined;\n    }\n\n    return {\n      name: 'close',\n      onClick: onClose,\n    };\n  }, [onClose]);\n\n  const useCustomTitles = data?.titles?.active === true;\n\n  const expiredHeader = () => {\n    return useCustomTitles && data?.titles.expiredView !== ''\n      ? data?.titles.expiredView\n      : copy?.expiredHeader ?? 'Welcome Back';\n  };\n\n  const previewHeader = () => {\n    return useCustomTitles && data?.titles.previewView !== ''\n      ? data?.titles.previewView\n      : copy?.manageAlertsHeader ?? 'Manage Alerts';\n  };\n\n  const signUpHeader = () => {\n    return useCustomTitles && data?.titles.signupView !== ''\n      ? data?.titles.signupView\n      : copy?.signUpHeader ?? 'Get Notified';\n  };\n\n  const editHeader = () => {\n    return useCustomTitles && data?.titles.editView !== ''\n      ? data?.titles.editView\n      : copy?.editHeader ?? 'Update Settings';\n  };\n\n  const verifyOnboardingHeader = () => {\n    return useCustomTitles && data?.titles.verifyWalletsView !== ''\n      ? data?.titles.verifyWalletsView\n      : copy?.verifyWalletsHeader ?? 'Verify Wallets';\n  };\n\n  const historyView = () => {\n    if (!useCustomTitles) {\n      return selectedAlertEntry ? 'Alert Details' : 'Alert History';\n    }\n\n    return selectedAlertEntry\n      ? data?.titles.alertDetailsView || 'Alert Details'\n      : data?.titles.historyView || 'Alert History';\n  };\n  switch (cardView.state) {\n    case 'expired':\n      view = (\n        <>\n          <NotifiAlertBox\n            classNames={classNames?.NotifiAlertBox}\n            rightIcon={rightIcon}\n          >\n            <h2>{expiredHeader()}</h2>\n          </NotifiAlertBox>\n          <div\n            className={clsx('DividerLine expired', classNames?.dividerLine)}\n          />\n          <ExpiredTokenView classNames={classNames?.ExpiredTokenView} />\n        </>\n      );\n      break;\n    case 'preview':\n      view = (\n        <>\n          <NotifiAlertBox\n            classNames={classNames?.NotifiAlertBox}\n            leftIcon={{\n              name: 'back',\n              onClick: () => setCardView({ state: 'history' }),\n            }}\n            rightIcon={rightIcon}\n          >\n            <h2>{previewHeader()}</h2>\n          </NotifiAlertBox>\n          <div\n            className={clsx('DividerLine preview', classNames?.dividerLine)}\n          />\n\n          {!isTargetsExist ? (\n            <SignupBanner data={data} classNames={classNames?.signupBanner} />\n          ) : null}\n          <PreviewCard\n            data={data}\n            inputs={inputs}\n            inputDisabled={inputDisabled}\n            classNames={classNames?.PreviewCard}\n          />\n        </>\n      );\n      break;\n    case 'edit':\n    case 'signup':\n      view = (\n        <>\n          <NotifiAlertBox\n            classNames={classNames?.NotifiAlertBox}\n            leftIcon={\n              cardView.state === 'signup'\n                ? undefined\n                : {\n                    name: 'back',\n                    onClick: () => {\n                      resetFormState();\n                      setCardView({ state: 'preview' });\n                    },\n                  }\n            }\n            rightIcon={rightIcon}\n          >\n            {cardView.state === 'signup' ? (\n              <h2>{signUpHeader()}</h2>\n            ) : (\n              <h2>{editHeader()}</h2>\n            )}\n          </NotifiAlertBox>\n          <div\n            className={clsx('DividerLine signup', classNames?.dividerLine)}\n          />\n          <EditCardView\n            buttonText={cardView.state === 'signup' ? 'Next' : 'Update'}\n            data={data}\n            copy={copy?.EditCard}\n            classNames={classNames?.EditCard}\n            inputDisabled={inputDisabled}\n            inputTextFields={inputLabels}\n            inputSeparators={inputSeparators}\n            allowedCountryCodes={allowedCountryCodes}\n            showPreview={cardView.state === 'signup'}\n            inputs={inputs}\n          />\n        </>\n      );\n      break;\n    case 'verifyonboarding':\n    case 'verify':\n      view = (\n        <>\n          <NotifiAlertBox\n            classNames={classNames?.NotifiAlertBox}\n            leftIcon={{\n              name: 'back',\n              onClick: () =>\n                setCardView({\n                  state:\n                    cardView.state === 'verifyonboarding'\n                      ? 'signup'\n                      : 'preview',\n                }),\n            }}\n            rightIcon={rightIcon}\n          >\n            <h2>{verifyOnboardingHeader()}</h2>\n          </NotifiAlertBox>\n          <div\n            className={clsx('DividerLine verify', classNames?.dividerLine)}\n          />\n          <VerifyWalletView\n            classNames={classNames?.VerifyWalletView}\n            data={data}\n            inputs={inputs}\n            buttonText={\n              cardView.state === 'verifyonboarding' ? 'Next' : 'Confirm'\n            }\n          />\n        </>\n      );\n      break;\n    case 'history':\n      view = (\n        <>\n          {ftuStage === FtuStage.Alerts ? (\n            <ConfigAlertModal\n              classNames={classNames?.ConfigAlertModal}\n              updateFtuStage={updateFtuStage}\n              data={data}\n              inputDisabled={inputDisabled}\n              inputs={inputs}\n            />\n          ) : null}\n          {ftuStage === FtuStage.Destination ? (\n            <ConfigDestinationModal\n              classNames={classNames?.ConfigDestinationModal}\n              updateFtuStage={updateFtuStage}\n              contactInfo={data.contactInfo}\n            />\n          ) : null}\n          <NotifiAlertBox\n            classNames={classNames?.NotifiAlertBox}\n            leftIcon={\n              selectedAlertEntry === undefined\n                ? {\n                    name: 'settings',\n                    onClick: () => setCardView({ state: 'preview' }),\n                  }\n                : {\n                    name: 'back',\n                    onClick: () => setAlertEntry(undefined),\n                  }\n            }\n            rightIcon={rightIcon}\n          >\n            <h2>{historyView()}</h2>\n          </NotifiAlertBox>\n          <div\n            className={clsx(\n              'NotifiSubscriptionCardV1__alertContainer',\n              classNames?.alertContainer,\n            )}\n          >\n            <div\n              className={clsx('DividerLine history', classNames?.dividerLine)}\n            />\n\n            {/* TODO: Consolidate banners (when it grows) */}\n            {unverifiedDestinations.length > 0 ? (\n              <VerifyBanner\n                classNames={classNames?.verifyBanner}\n                unVerifiedDestinations={unverifiedDestinations}\n              />\n            ) : null}\n            {!isTargetsExist ? (\n              <SignupBanner data={data} classNames={classNames?.signupBanner} />\n            ) : null}\n\n            {selectedAlertEntry === undefined ? null : (\n              <AlertDetailsCard\n                notificationEntry={selectedAlertEntry}\n                classNames={classNames?.AlertDetailsCard}\n              />\n            )}\n            <AlertHistoryView\n              classNames={classNames?.AlertHistoryView}\n              copy={copy?.AlertHistory}\n              isHidden={selectedAlertEntry !== undefined}\n              setAlertEntry={setAlertEntry}\n              data={data}\n            />\n          </div>\n        </>\n      );\n      break;\n    case 'error':\n      view = <ErrorStateCard reason={cardView.reason as string} />;\n      break;\n    default:\n      view = <div>Not supported view</div>;\n  }\n  return <> {loading ? <LoadingStateCard /> : view}</>;\n};\n", "import { FormField } from 'notifi-react-card/dist';\nimport { useMemo } from 'react';\n\nimport { useNotifiSubscriptionContext } from '../context';\nimport { objectKeys } from '../utils';\n\nexport const useDestinationState = () => {\n  const {\n    useDiscord,\n    email,\n    phoneNumber,\n    telegramId,\n    discordTargetData,\n    destinationErrorMessages,\n  } = useNotifiSubscriptionContext();\n\n  const isTargetsExist = useMemo(() => {\n    return (\n      !!email ||\n      !!phoneNumber ||\n      !!telegramId ||\n      (useDiscord && !!discordTargetData?.id)\n    );\n  }, [email, phoneNumber, telegramId, discordTargetData, useDiscord]);\n\n  const unverifiedDestinations = useMemo(() => {\n    const {\n      email: emailError,\n      phoneNumber: phoneNumberError,\n      telegram: telegramError,\n      discord: discordError,\n    } = destinationErrorMessages;\n\n    const unConfirmedTargets = {\n      email: emailError?.type === 'recoverableError',\n      phoneNumber: phoneNumberError?.type == 'recoverableError',\n      telegram: telegramError?.type === 'recoverableError',\n      discord:\n        useDiscord &&\n        discordError?.type === 'recoverableError' &&\n        /**\n         * @TODO Improve type safety\n         * discordError.message === 'Join Server' also counted as verified (discordError.message now either 'Join Server' or 'Enable Bot' as values).\n         */\n        discordError.message === 'Enable Bot',\n    };\n    return objectKeys(unConfirmedTargets)\n      .map((key) => {\n        if (unConfirmedTargets[key]) {\n          return key;\n        }\n      })\n      .filter((item): item is FormField => !!item);\n  }, [destinationErrorMessages]);\n\n  return { isTargetsExist, unverifiedDestinations };\n};\n", "import clsx from 'clsx';\nimport DOMPurify from 'dompurify';\nimport { getAlertDetailsContents } from 'notifi-react-card/lib/utils';\nimport React, { useMemo } from 'react';\n\nimport { formatAlertDetailsTimestamp } from '../../utils/AlertHistoryUtils';\nimport { NotificationHistoryEntry } from '../subscription';\n\nexport type AlertDetailsProps = Readonly<{\n  notificationEntry: NotificationHistoryEntry;\n  classNames?: Readonly<{\n    detailsContainer?: string;\n    BackArrowIcon?: string;\n  }>;\n}>;\nexport const AlertDetailsCard: React.FC<AlertDetailsProps> = ({\n  notificationEntry,\n  classNames,\n}) => {\n  const { bottomContent, otherContent, topContent, bottomContentHtml } =\n    useMemo(\n      () => getAlertDetailsContents(notificationEntry),\n      [notificationEntry],\n    );\n\n  const sanitizedBottomContentHtml = useMemo(() => {\n    const sanitizedBottomContentHtml =\n      bottomContentHtml && DOMPurify.sanitize(bottomContentHtml);\n    return sanitizedBottomContentHtml;\n  }, [bottomContentHtml]);\n\n  return (\n    <div\n      className={clsx(\n        'NotifiAlertDetails__container',\n        classNames?.detailsContainer,\n      )}\n    >\n      <div className={clsx('NotifiAlertDetails__topContentContainer')}>\n        <div className={clsx('NotifiAlertDetails__topContent')}>\n          {topContent}\n        </div>\n        <div className={clsx('NotifiAlertDetails__timestamp')}>\n          {formatAlertDetailsTimestamp(notificationEntry.createdDate)}\n        </div>\n      </div>\n      <div className={clsx('NotifiAlertDetails__bottomContent')}>\n        {sanitizedBottomContentHtml ? (\n          // If `messageHtml` exists just use it, otherwise use `message` (which is plain text)\n          <div\n            dangerouslySetInnerHTML={{ __html: sanitizedBottomContentHtml }}\n          />\n        ) : (\n          <div>{bottomContent}</div>\n        )}\n        <div>{otherContent}</div>\n      </div>\n    </div>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { FtuStage } from '../context';\nimport AlertActionIcon from './AlertBox/AlertActionIcon';\nimport { AlertsPanel, AlertsPanelProps } from './subscription';\n\nexport type ConfigAlertModalProps = Readonly<{\n  classNames?: {\n    container?: string;\n    overlay?: string;\n    alertsPanel?: AlertsPanelProps['classNames'];\n    headerContainer?: string;\n    backIcon?: string;\n    headerTitle?: string;\n    footerContainer?: string;\n    ctaIcon?: string;\n  };\n  updateFtuStage: (step: FtuStage) => void;\n  data: CardConfigItemV1;\n  inputDisabled: boolean;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const ConfigAlertModal: React.FC<ConfigAlertModalProps> = ({\n  classNames,\n  updateFtuStage,\n  data,\n  inputDisabled,\n  inputs,\n}) => {\n  return (\n    <>\n      <div\n        className={clsx('configAlertModal__overlay', classNames?.overlay)}\n      ></div>\n      <div\n        data-cy=\"configAlertModal\"\n        className={clsx('configAlertModal__container', classNames?.container)}\n      >\n        <div\n          className={clsx(\n            'configAlertModal__headerContainer',\n            classNames?.headerContainer,\n          )}\n        >\n          {data.isContactInfoRequired ? (\n            <div\n              className={clsx(\n                'configAlertModal__backIcon',\n                classNames?.backIcon,\n              )}\n              onClick={() => {\n                updateFtuStage(FtuStage.Destination);\n              }}\n            >\n              <AlertActionIcon\n                name=\"back\"\n                className={clsx(\n                  'configAlertModal__ctaIcon',\n                  classNames?.ctaIcon,\n                )}\n              />\n            </div>\n          ) : null}\n          <div\n            className={clsx(\n              'configAlertModal__headerTitle',\n              classNames?.headerTitle,\n            )}\n          >\n            <div>Select alerts</div>\n          </div>\n        </div>\n        <AlertsPanel\n          classNames={\n            classNames?.alertsPanel ?? {\n              EventTypeContainer: 'configAlertModal__EventTypeContainer',\n              EventTypeBroadcastRow: {\n                container: 'configAlertModal__EventTypeBroadcastRow',\n              },\n              EventTypeCustomHealthCheckRow: {\n                container: 'configAlertModal__EventTypeCustomHealthCheckRow',\n                content:\n                  'configAlertModal__EventTypeCustomHealthCheckRow__Subtitle',\n                buttonContainer:\n                  'configAlertModal__EventTypeCustomHealthCheckRow__ButtonContainer',\n              },\n              EventTypeDirectPushRow: {\n                container: 'configAlertModal__EventTypeDirectPushRow',\n              },\n              EventTypeHealthCheckRow: {\n                container: 'configAlertModal__EventTypeHealthCheckRow',\n                content: 'configAlertModal__EventTypeHealthCheckRow__Subtitle',\n                buttonContainer:\n                  'configAlertModal__EventTypeHealthCheckRow__ButtonContainer',\n              },\n              EventTypePriceChangeRow: {\n                container: 'configAlertModal__EventTypePriceChangeRow',\n              },\n              EventTypeTradingPairsRow: {\n                container: 'configAlertModal__EventTypeTradingPairsRow',\n              },\n              EventTypeFusionMultiThresholdRow: {\n                container: 'configAlertModal__EventTypeFusionMultiThresholdRow',\n              },\n              EventTypeWalletBalanceRow: {\n                container: 'configAlertModal__EventTypeWalletBalanceRow',\n              },\n              EventTypeXMTPRow: {\n                container: 'configAlertModal__EventTypeXMTPRow',\n              },\n              EventTypeFusionToggleRow: {\n                container: 'configAlertModal__EventTypeFusionToggleRow',\n              },\n              EventTypeFusionHealthCheckRow: {\n                container: 'configAlertModal__EventTypeFusionHealthCheckRow',\n                content:\n                  'configAlertModal__EventTypeFusionHealthCheckRow__Subtitle',\n                buttonContainer:\n                  'configAlertModal__EventTypeFusionHealthCheckRow__ButtonContainer',\n              },\n            }\n          }\n          data={data}\n          inputDisabled={inputDisabled}\n          inputs={inputs}\n        />\n        <div\n          className={clsx(\n            'configAlertModal__footerContainer',\n            classNames?.footerContainer,\n          )}\n        >\n          <button\n            data-cy=\"configAlertModalDoneButton\"\n            onClick={() => {\n              updateFtuStage(FtuStage.Done);\n            }}\n          >\n            Done\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n", "import React from 'react';\n\nimport { BackArrowIcon } from '../../assets/BackArrowIcon';\nimport { CloseIcon } from '../../assets/CloseIcon';\nimport { SettingIcon } from '../../assets/SettingIcon';\n\nconst icons = {\n  back: BackArrowIcon,\n  close: CloseIcon,\n  settings: SettingIcon,\n} as const;\n\nexport type AlertActionIconProps = Readonly<{\n  name: keyof typeof icons;\n  className?: string;\n}>;\n\nconst AlertActionIcon: React.FC<AlertActionIconProps> = ({\n  name,\n  className,\n}) => {\n  const View = icons[name];\n  return <View className={className} />;\n};\n\nexport default AlertActionIcon;\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const BackArrowIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const CloseIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.71751 5.28249L5.3033 6.6967L10.6066 12L5.3033 17.3033L6.71751 18.7175L12.0208 13.4142L17.3241 18.7175L18.7383 17.3033L13.435 12L18.7383 6.6967L17.3241 5.28249L12.0208 10.5858L6.71751 5.28249Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const SettingIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M3 17V19H9V17H3ZM3 5V7H13V5H3ZM13 21V19H21V17H13V15H11V21H13ZM7 9V11H3V13H7V15H9V9H7ZM21 13V11H11V13H21ZM15 9H17V7H21V5H17V3H15V9Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, { useCallback, useState } from 'react';\n\nimport { DiscordIcon } from '../assets/DiscordIcon';\nimport { EmailIcon } from '../assets/EmailIcon';\nimport { SmsIcon } from '../assets/SmsIcon';\nimport { TelegramIcon } from '../assets/TelegramIcon';\nimport { FtuStage, useNotifiSubscriptionContext } from '../context';\nimport { DestinationErrorMessage } from './subscription/subscription-card-views/preview-panel/DestinationErrorMessage';\n\nexport type ConfigDestinationModalProps = Readonly<{\n  classNames?: {\n    container?: string;\n    overlay?: string;\n    headerContainer?: string;\n    headerTitle?: string;\n    footerContainer?: string;\n    emailContainer?: string;\n    emailLabel?: string;\n    emailLabelIcon?: string;\n    emailHelpPhrase?: string;\n    emailAddress?: string;\n    emailResendLink?: string;\n    smsContainer?: string;\n    smsLabel?: string;\n    smsLabelIcon?: string;\n    phoneNumber?: string;\n    telegramContainer?: string;\n    telegramLabel?: string;\n    telegramLabelIcon?: string;\n    telegramId?: string;\n    discordContainer?: string;\n    discordLabel?: string;\n    discordLabelIcon?: string;\n    verifiedButton?: string;\n    verifyButtonMessage?: string;\n    verifyButtonContainer?: string;\n  };\n  updateFtuStage: (step: FtuStage) => void;\n  contactInfo: CardConfigItemV1['contactInfo'];\n}>;\n\nexport const ConfigDestinationModal: React.FC<ConfigDestinationModalProps> = ({\n  classNames,\n  updateFtuStage,\n  contactInfo,\n}) => {\n  const {\n    destinationErrorMessages,\n    email,\n    phoneNumber,\n    telegramId,\n    useDiscord,\n  } = useNotifiSubscriptionContext();\n\n  const [isEmailConfirmationSent, setIsEmailConfirmationSent] =\n    useState<boolean>(false);\n\n  const {\n    telegram: telegramErrorMessage,\n    email: emailErrorMessage,\n    phoneNumber: phoneNumberErrorMessage,\n    discord: discordErrrorMessage,\n  } = destinationErrorMessages;\n\n  const handleResendEmailVerificationClick = useCallback(() => {\n    if (emailErrorMessage?.type !== 'recoverableError') return;\n    setIsEmailConfirmationSent(true);\n    emailErrorMessage.onClick();\n    setTimeout(() => {\n      setIsEmailConfirmationSent(false);\n    }, 3000);\n  }, [emailErrorMessage]);\n\n  return (\n    <div data-cy=\"configDestinationModal\">\n      <div\n        className={clsx('configDestinationModal__overlay', classNames?.overlay)}\n      ></div>\n      <div\n        className={clsx(\n          'configDestinationModal__container',\n          classNames?.container,\n        )}\n      >\n        <div\n          className={clsx(\n            'configDestinationModal__headerContainer',\n            classNames?.headerContainer,\n          )}\n        >\n          <div\n            className={clsx(\n              'configDestinationModal__headerTitle',\n              classNames?.headerTitle,\n            )}\n          >\n            <div>Verify your destinations</div>\n          </div>\n        </div>\n        <div\n          className={clsx(\n            'configDestinationModal__destinationsContainer',\n            classNames?.container,\n          )}\n        >\n          {contactInfo.email.active && email ? (\n            <div\n              className={clsx(\n                'configDestinationModal__email',\n                classNames?.emailContainer,\n              )}\n            >\n              <div\n                className={clsx(\n                  'configDestinationModal__emailLabel',\n                  classNames?.emailLabel,\n                )}\n              >\n                <div\n                  className={clsx(\n                    'configDestinationModal__emailLabelIcon',\n                    classNames?.emailLabelIcon,\n                  )}\n                >\n                  <EmailIcon />\n                </div>\n                <div>Email</div>\n              </div>\n              {emailErrorMessage?.type === 'recoverableError' ? (\n                <>\n                  <div\n                    className={clsx(\n                      'configDestinationModal__emailHelpPhrase',\n                      classNames?.emailHelpPhrase,\n                    )}\n                  >\n                    We’ve sent a verification email to:\n                  </div>\n                  <div\n                    className={clsx(\n                      'configDestinationModal__emailAddress',\n                      classNames?.emailAddress,\n                    )}\n                  >\n                    {email}\n                  </div>\n                  <DestinationErrorMessage\n                    classNames={{\n                      errorMessage: clsx(\n                        'configDestinationModal__emailResendLink',\n                        classNames?.emailResendLink,\n                      ),\n                    }}\n                    onClick={() => {\n                      handleResendEmailVerificationClick();\n                    }}\n                    errorMessage={\n                      isEmailConfirmationSent\n                        ? 'Sent'\n                        : emailErrorMessage.message\n                    }\n                    tooltipContent={emailErrorMessage?.tooltip}\n                  />\n                </>\n              ) : (\n                <VerifiedButton className={classNames?.verifiedButton} />\n              )}\n            </div>\n          ) : null}\n          {contactInfo.sms.active && phoneNumber ? (\n            <div\n              className={clsx(\n                'configDestinationModal__sms',\n                classNames?.smsContainer,\n              )}\n            >\n              <div\n                className={clsx(\n                  'configDestination__smsLabel',\n                  classNames?.smsLabel,\n                )}\n              >\n                <div\n                  className={clsx(\n                    'configDestination__smsLabelIcon',\n                    classNames?.smsLabelIcon,\n                  )}\n                >\n                  <SmsIcon />\n                </div>\n                <div\n                  className={clsx(\n                    'configDestinationModal__phoneNumber',\n                    classNames?.phoneNumber,\n                  )}\n                >\n                  Phone Number\n                </div>\n              </div>\n              <div>{phoneNumber}</div>\n              {phoneNumberErrorMessage?.type !== undefined ? (\n                <DestinationErrorMessage\n                  errorMessage={phoneNumberErrorMessage?.message}\n                  tooltipContent={phoneNumberErrorMessage?.tooltip}\n                />\n              ) : (\n                <VerifiedButton className={classNames?.verifiedButton} />\n              )}\n            </div>\n          ) : null}\n          {contactInfo.telegram.active && telegramId ? (\n            <div\n              className={clsx(\n                'configDestinationModal__telegram',\n                classNames?.telegramContainer,\n              )}\n            >\n              <div\n                className={clsx(\n                  'configDestinationModal__telegramLabel',\n                  classNames?.telegramLabel,\n                )}\n              >\n                <div\n                  className={clsx(\n                    'configDestinationModal__telegramLabelIcon',\n                    classNames?.telegramLabelIcon,\n                  )}\n                >\n                  <TelegramIcon />\n                </div>\n\n                <div>Telegram</div>\n              </div>\n\n              {telegramErrorMessage?.type === 'recoverableError' ? (\n                <>\n                  <div\n                    className={clsx(\n                      'configDestinationModal__telegramId',\n                      classNames?.telegramId,\n                    )}\n                  >\n                    {telegramId}\n                  </div>\n                  <div\n                    data-cy=\"configDestinationModalConfirmTelegramButton\"\n                    onClick={() => {\n                      telegramErrorMessage?.onClick();\n                    }}\n                  >\n                    <DestinationErrorMessage\n                      classNames={{\n                        errorMessage: clsx(\n                          'configDestinationModal__verifyButtonMessage',\n                          classNames?.verifyButtonMessage,\n                        ),\n                        errorMessageContainer: clsx(\n                          'configDestinationModal__verifyButtonContainer',\n                          classNames?.verifyButtonContainer,\n                        ),\n                      }}\n                      errorMessage={telegramErrorMessage?.message ?? ''}\n                      tooltipContent={\n                        destinationErrorMessages?.telegram?.tooltip\n                      }\n                    />\n                  </div>\n                </>\n              ) : (\n                <VerifiedButton className={classNames?.verifiedButton} />\n              )}\n            </div>\n          ) : null}\n          {contactInfo?.discord?.active && useDiscord ? (\n            <div\n              className={clsx(\n                'configDestinationModal__discord',\n                classNames?.discordContainer,\n              )}\n            >\n              <label\n                className={clsx(\n                  'configDestinationModal__discordLabel',\n                  classNames?.discordLabel,\n                )}\n              >\n                <div\n                  className={clsx(\n                    'configDestinationModal__discordLabelIcon',\n                    classNames?.discordLabelIcon,\n                  )}\n                >\n                  <DiscordIcon />\n                </div>\n\n                <div>Discord</div>\n              </label>\n              {discordErrrorMessage?.type === 'recoverableError' ? (\n                <>\n                  <DestinationErrorMessage\n                    classNames={{\n                      errorMessage: clsx(\n                        'configDestinationModal__verifyButtonMessage',\n                        classNames?.verifyButtonMessage,\n                      ),\n                      errorMessageContainer: clsx(\n                        'configDestinationModal__verifyButtonContainer',\n                        classNames?.verifyButtonContainer,\n                      ),\n                    }}\n                    onClick={() => {\n                      discordErrrorMessage?.onClick();\n                    }}\n                    errorMessage={discordErrrorMessage?.message ?? ''}\n                    tooltipContent={destinationErrorMessages?.discord?.tooltip}\n                  />\n                </>\n              ) : (\n                <VerifiedButton className={classNames?.verifiedButton} />\n              )}\n            </div>\n          ) : null}\n        </div>\n        <div\n          data-cy=\"configDestinationModalNextButton\"\n          className={clsx(\n            'configDestinationModal__footerContainer',\n            classNames?.footerContainer,\n          )}\n        >\n          <button\n            onClick={() => {\n              updateFtuStage(FtuStage.Alerts);\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype VerifiedButtonProps = Readonly<{\n  className?: string;\n}>;\nconst VerifiedButton: React.FC<VerifiedButtonProps> = ({ className }) => {\n  return (\n    <div\n      data-cy=\"configDestinationModalVerifyLabel\"\n      className={clsx('configDestinationModal__verifiedButton', className)}\n    >\n      <div>Verified</div>\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = Readonly<{\n  className?: string;\n}>;\n\nexport const DiscordIcon: React.FC<Props> = ({ className }: Props) => {\n  return (\n    <svg\n      width=\"17\"\n      height=\"13\"\n      viewBox=\"0 0 17 13\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M14.0728 1.05036C13.0133 0.564196 11.8771 0.206009 10.6891 0.000860571C10.6675 -0.00309873 10.6459 0.00679578 10.6347 0.0265853C10.4886 0.286483 10.3267 0.62554 10.2134 0.892038C8.93563 0.700746 7.66444 0.700746 6.4129 0.892038C6.29953 0.619617 6.13179 0.286483 5.98501 0.0265853C5.97386 0.00745605 5.95225 -0.00243846 5.93062 0.000860571C4.74329 0.205353 3.60709 0.56354 2.54688 1.05036C2.5377 1.05432 2.52983 1.06092 2.52461 1.06949C0.369461 4.28924 -0.220925 7.42985 0.0686984 10.5315C0.0700089 10.5467 0.0785271 10.5612 0.0903219 10.5704C1.51223 11.6146 2.88959 12.2486 4.24137 12.6688C4.263 12.6754 4.28593 12.6675 4.29969 12.6496C4.61946 12.213 4.9045 11.7525 5.14889 11.2683C5.16332 11.24 5.14955 11.2063 5.12007 11.1951C4.66795 11.0236 4.23744 10.8145 3.82331 10.577C3.79056 10.5579 3.78793 10.5111 3.81807 10.4886C3.90522 10.4233 3.99239 10.3554 4.0756 10.2868C4.09065 10.2742 4.11163 10.2716 4.12933 10.2795C6.84994 11.5217 9.79533 11.5217 12.4838 10.2795C12.5015 10.2709 12.5225 10.2736 12.5382 10.2861C12.6215 10.3547 12.7086 10.4233 12.7964 10.4886C12.8265 10.5111 12.8246 10.5579 12.7918 10.577C12.3777 10.8191 11.9472 11.0236 11.4944 11.1945C11.4649 11.2057 11.4518 11.24 11.4662 11.2683C11.7159 11.7519 12.0009 12.2123 12.3148 12.649C12.3279 12.6675 12.3515 12.6754 12.3731 12.6688C13.7314 12.2486 15.1088 11.6146 16.5307 10.5704C16.5432 10.5612 16.551 10.5473 16.5523 10.5322C16.899 6.9463 15.9718 3.83145 14.0945 1.07015C14.0899 1.06092 14.082 1.05432 14.0728 1.05036ZM5.55517 8.64293C4.73608 8.64293 4.06118 7.89094 4.06118 6.96742C4.06118 6.04391 4.72299 5.29192 5.55517 5.29192C6.39389 5.29192 7.06226 6.05051 7.04915 6.96742C7.04915 7.89094 6.38733 8.64293 5.55517 8.64293ZM11.079 8.64293C10.2599 8.64293 9.585 7.89094 9.585 6.96742C9.585 6.04391 10.2468 5.29192 11.079 5.29192C11.9177 5.29192 12.5861 6.05051 12.573 6.96742C12.573 7.89094 11.9177 8.64293 11.079 8.64293Z\"\n        fill=\"#B6B8D5\"\n      />\n    </svg>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { NotifiTooltip } from '../../NotifiTooltip';\n\ntype Props = {\n  classNames?: {\n    errorMessageContainer?: string;\n    tooltipContent?: string;\n    errorMessage?: string;\n  };\n  errorMessage: string;\n  tooltipContent?: string;\n  onClick?: () => void;\n};\n\nexport const DestinationErrorMessage: React.FC<Props> = ({\n  classNames,\n  tooltipContent,\n  errorMessage,\n  onClick,\n}) => {\n  return (\n    <div\n      className={clsx(\n        'DestinationErrorMessage__ErrorMessageContainer',\n        classNames?.errorMessageContainer,\n      )}\n    >\n      {onClick !== undefined ? (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={() => onClick()}\n          className={clsx('DestinationErrorMessage__emailConfirmationLink')}\n        >\n          <label\n            className={clsx(\n              'DestinationErrorMessage__confirmationLinkLabel',\n              classNames?.errorMessage,\n            )}\n          >\n            {errorMessage}\n          </label>\n        </a>\n      ) : (\n        <label\n          className={clsx(\n            'DestinationErrorMessage__ErrorMessageLabel',\n            classNames?.errorMessage,\n            {\n              DestinationErrorMessage__errorMessage: errorMessage !== '',\n            },\n          )}\n        >\n          {errorMessage}\n        </label>\n      )}\n      {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n        <NotifiTooltip\n          classNames={{\n            icon: clsx(\n              'DestinationErrorMessage__tooltipIcon',\n              classNames?.tooltipContent,\n            ),\n          }}\n          content={tooltipContent}\n        />\n      ) : null}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport type { DeepPartialReadonly } from '../utils';\nimport AlertActionIcon, {\n  AlertActionIconProps,\n} from './AlertBox/AlertActionIcon';\n\nexport type NotifiAlertBoxButtonProps = Readonly<{\n  name: AlertActionIconProps['name'];\n  onClick: () => void;\n}>;\n\nexport type NotifiAlertBoxProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    btnLeft: string;\n    content: string;\n    btnRight: string;\n    iconSvg: string;\n    spacer: string;\n  }>;\n  leftIcon?: NotifiAlertBoxButtonProps;\n  rightIcon?: NotifiAlertBoxButtonProps;\n}>;\n\nconst NotifiAlertBox: React.FC<\n  React.PropsWithChildren<NotifiAlertBoxProps>\n> = ({ classNames, children, leftIcon, rightIcon }) => {\n  return (\n    <div className={clsx('NotifiAlertBox__container', classNames?.container)}>\n      {leftIcon !== undefined ? (\n        <div\n          className={clsx('NotifiAlertBox__btn--left', classNames?.btnLeft)}\n          onClick={leftIcon.onClick}\n        >\n          <AlertActionIcon\n            name={leftIcon.name}\n            className={clsx('NotifiAlertBox__iconSvg', classNames?.iconSvg)}\n          />\n        </div>\n      ) : (\n        <div\n          className={clsx('NotifiAlertBox__btn--spacer', classNames?.spacer)}\n        />\n      )}\n      <div className={clsx('NotifiAlertBox__content', classNames?.content)}>\n        {children}\n      </div>\n      {rightIcon !== undefined ? (\n        <div\n          className={clsx('NotifiAlertBox__btn--right', classNames?.btnRight)}\n          onClick={rightIcon.onClick}\n        >\n          <AlertActionIcon\n            name={rightIcon.name}\n            className={clsx('NotifiAlertBox__iconSvg', classNames?.iconSvg)}\n          />\n        </div>\n      ) : (\n        <div\n          className={clsx('NotifiAlertBox__btn--spacer', classNames?.spacer)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NotifiAlertBox;\n", "import {\n  CardConfigItemV1,\n  ContactInfoConfig,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, { useMemo } from 'react';\n\nimport { CircleBellIcon } from '../assets/CircleBellIcon';\nimport { useNotifiSubscriptionContext } from '../context';\nimport { DeepPartialReadonly } from '../utils';\n\nexport type SignupBannerProps = Readonly<{\n  data: CardConfigItemV1;\n  classNames?: DeepPartialReadonly<{\n    banner: string;\n    bannerImage: string;\n    bannerLabel: string;\n    bannerContent: string;\n    bannerTitle: string;\n    bannerSubject: string;\n    bannerButton: string;\n  }>;\n}>;\n\nexport const SignupBanner: React.FC<SignupBannerProps> = ({\n  classNames,\n  data,\n}) => {\n  const { cardView, setCardView } = useNotifiSubscriptionContext();\n\n  const targets = useMemo(() => {\n    const supportedTargets = Object.keys(data.contactInfo)\n      .filter((target) => {\n        return data.contactInfo[target as keyof ContactInfoConfig].active;\n      })\n      .map((target) => target.charAt(0).toLocaleUpperCase() + target.slice(1));\n    return supportedTargets.length > 1\n      ? supportedTargets.join(', ')\n      : supportedTargets[0];\n  }, []);\n  const onClick = () => {\n    setCardView({\n      state: 'edit',\n    });\n  };\n  return (\n    <>\n      <div\n        className={clsx(\n          classNames?.banner ? classNames.banner : 'SignupBanner',\n          cardView.state === 'preview' && 'SignupBanner__Column',\n        )}\n      >\n        <div className={clsx('SignupBanner__Label', classNames?.bannerLabel)}>\n          <div\n            className={clsx(\n              classNames?.bannerImage\n                ? classNames?.bannerImage\n                : 'SignupBanner__Image',\n            )}\n          >\n            <CircleBellIcon />\n          </div>\n          <div\n            className={clsx(\n              classNames?.bannerContent\n                ? classNames.bannerContent\n                : 'SignupBanner__Content',\n            )}\n          >\n            <div\n              className={clsx(\n                classNames?.bannerTitle\n                  ? classNames.bannerTitle\n                  : 'SignupBanner__Title',\n              )}\n            >\n              Get alerts via\n            </div>\n            <div\n              className={clsx(\n                classNames?.bannerSubject\n                  ? classNames.bannerSubject\n                  : 'SignupBanner__Subject',\n              )}\n            >\n              {targets}\n            </div>\n          </div>\n        </div>\n        <button\n          data-cy=\"signupBannerButton\"\n          className={clsx(\n            classNames?.bannerButton\n              ? classNames.bannerButton\n              : 'SignupBanner__Button',\n          )}\n          onClick={onClick}\n        >\n          Sign Up\n        </button>\n      </div>\n    </>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const CircleBellIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      width=\"21\"\n      height=\"21\"\n      viewBox=\"0 0 21 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle\n        cx=\"10.5\"\n        cy=\"10.5\"\n        r=\"9.5\"\n        fill=\"white\"\n        stroke=\"url(#paint0_linear_1316_3580)\"\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M10.4901 16.1875C11.1212 16.1875 11.6376 15.6712 11.6376 15.0401H9.3427C9.3427 15.6712 9.85331 16.1875 10.4901 16.1875ZM13.9324 12.7452V9.8766C13.9324 8.11529 12.9915 6.64083 11.3507 6.25071V5.86058C11.3507 5.38439 10.9663 5 10.4901 5C10.0139 5 9.62956 5.38439 9.62956 5.86058V6.25071C7.98299 6.64083 7.04783 8.10955 7.04783 9.8766V12.7452L5.90039 13.8926V14.4663H15.0799V13.8926L13.9324 12.7452Z\"\n        fill=\"#262949\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_1316_3580\"\n          x1=\"15.6331\"\n          y1=\"3.32468\"\n          x2=\"7.46429\"\n          y2=\"19\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#FE7970\" />\n          <stop offset=\"1\" stopColor=\"#FEB776\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n", "import clsx from 'clsx';\nimport React, { useMemo } from 'react';\n\nimport { CheckIcon } from '../assets/CheckIcon';\nimport { FormField, useNotifiSubscriptionContext } from '../context';\nimport { DeepPartialReadonly } from '../utils';\n\nexport type VerifyBannerProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    bannerContainer?: string;\n    bannerImage?: string;\n    bannerImageContainer?: string;\n    bannerLabel?: string;\n    bannerContent?: string;\n    bannerTitle?: string;\n    bannerSubject?: string;\n    bannerButton?: string;\n  }>;\n  unVerifiedDestinations: ReadonlyArray<FormField>;\n}>;\n\nexport const VerifyBanner: React.FC<VerifyBannerProps> = ({\n  classNames,\n  unVerifiedDestinations,\n}) => {\n  const { setCardView } = useNotifiSubscriptionContext();\n\n  const unVerifiedDestinationsString = useMemo(() => {\n    const convertedUnVerifiedDestinations = unVerifiedDestinations.map(\n      (target) => {\n        switch (target) {\n          case 'telegram':\n            return 'Telegram ID';\n          case 'discord':\n            return 'Discord';\n          case 'phoneNumber':\n            return 'Phone Number';\n          default:\n            return target;\n        }\n      },\n    );\n    return convertedUnVerifiedDestinations.length > 1\n      ? convertedUnVerifiedDestinations.join(' and ')\n      : convertedUnVerifiedDestinations[0];\n  }, [unVerifiedDestinations]);\n\n  const onClick = () => {\n    setCardView({\n      state: 'preview',\n    });\n  };\n  return (\n    <div\n      className={clsx('verifyBanner__container', classNames?.bannerContainer)}\n    >\n      <div className={clsx('verifyBanner__label', classNames?.bannerLabel)}>\n        <div\n          className={clsx(\n            classNames?.bannerImage\n              ? classNames?.bannerImageContainer\n              : 'verifyBanner__imageContainer',\n          )}\n        >\n          <CheckIcon className=\"verifyBanner__image\" />\n        </div>\n        <div\n          className={clsx('verifyBanner__subject', classNames?.bannerSubject)}\n        >\n          Verify your {unVerifiedDestinationsString}\n        </div>\n      </div>\n      <button\n        data-cy=\"verifyBannerButton\"\n        className={clsx(\n          classNames?.bannerButton\n            ? classNames.bannerButton\n            : 'verifyBanner__button',\n        )}\n        onClick={onClick}\n      >\n        Verify\n      </button>\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { getErrorMessageKey } from 'notifi-react-card/lib/utils/errorUtils';\nimport React from 'react';\n\nimport { DeepPartialReadonly } from '../../utils';\nimport NotifiAlertBox, { NotifiAlertBoxProps } from '../NotifiAlertBox';\n\nexport type ErrorStateCardProps = Readonly<{\n  copy?: DeepPartialReadonly<{\n    header: string;\n  }>;\n  reason: unknown;\n  classNames?: Readonly<{\n    NotifiAlertBox?: NotifiAlertBoxProps['classNames'];\n    label?: string;\n    errorMessage?: string;\n  }>;\n  onClose?: () => void;\n}>;\n\nexport const ErrorStateCard: React.FC<ErrorStateCardProps> = ({\n  copy,\n  classNames,\n  onClose,\n  reason,\n}) => {\n  const message = getErrorMessageKey(reason);\n\n  return (\n    <>\n      <NotifiAlertBox\n        classNames={classNames?.NotifiAlertBox}\n        rightIcon={\n          onClose === undefined\n            ? undefined\n            : {\n                name: 'close',\n                onClick: onClose,\n              }\n        }\n      >\n        <h2>{copy?.header ?? 'Something went wrong'}</h2>\n      </NotifiAlertBox>\n      <div\n        className={clsx(\n          'ErrorStateCard__errorMessage',\n          classNames?.errorMessage,\n        )}\n      >\n        {message ?? 'Something went wrong'}\n      </div>\n    </>\n  );\n};\n", "export function getErrorMessageKey(err: unknown): string {\n  let errMsg: string;\n  if (err instanceof Error) {\n    errMsg = err.message;\n  } else if (typeof err === 'string') {\n    errMsg = err;\n  } else {\n    errMsg = 'unknown error';\n  }\n  return errMsg;\n}\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { DeepPartialReadonly } from '../../utils';\nimport NotifiAlertBox, { NotifiAlertBoxProps } from '../NotifiAlertBox';\nimport Spinner from './Spinner';\n\nexport type LoadingStateCardProps = Readonly<{\n  spinnerSize?: string;\n  ringColor?: string;\n  copy?: DeepPartialReadonly<{\n    header: string;\n    content: string;\n  }>;\n  classNames?: Readonly<{\n    container?: string;\n    label?: string;\n    NotifiAlertBox?: NotifiAlertBoxProps['classNames'];\n  }>;\n  onClose?: () => void;\n}>;\n\nexport const LoadingStateCard: React.FC<LoadingStateCardProps> = ({\n  copy,\n  classNames,\n  spinnerSize,\n  ringColor,\n  onClose,\n}) => {\n  return (\n    <>\n      <NotifiAlertBox\n        classNames={classNames?.NotifiAlertBox}\n        rightIcon={\n          onClose === undefined\n            ? undefined\n            : {\n                name: 'close',\n                onClick: onClose,\n              }\n        }\n      >\n        <h2>{copy?.header ?? 'Loading'}</h2>\n      </NotifiAlertBox>\n      <div\n        className={clsx(\n          'NotifiLoadingStateCard__container',\n          classNames?.container,\n        )}\n      >\n        <label\n          className={clsx('NotifiLoadingStateCard__label', classNames?.label)}\n        >\n          {copy?.content ?? 'Loading…'}\n        </label>\n        <Spinner size={spinnerSize} ringColor={ringColor} />\n      </div>\n    </>\n  );\n};\n", "import React from 'react';\n\ninterface SpinnerProps {\n  size?: string;\n  ringColor?: string;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ size, ringColor }) => {\n  return (\n    <div\n      className=\"NotifiSpinner\"\n      style={{ height: size, width: size, borderTopColor: ringColor }}\n    />\n  );\n};\n\nexport default Spinner;\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { DeepPartialReadonly } from 'notifi-react-card/lib/utils';\nimport React from 'react';\n\nimport { useNotifiSubscriptionContext } from '../../../context/NotifiSubscriptionContext';\nimport Spinner from '../../common/Spinner';\nimport {\n  NotifiSubscribeButton,\n  NotifiSubscribeButtonProps,\n} from '../NotifiSubscribeButton';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from '../NotifiSubscriptionCard';\nimport { AlertListPreview, AlertListPreviewProps } from './AlertListPreview';\nimport { InputFields, InputFieldsProps } from './InputFields';\n\nexport type EditCardViewProps = Readonly<{\n  buttonText: string;\n  data: CardConfigItemV1;\n  inputDisabled: boolean;\n  showPreview?: boolean;\n  copy?: Readonly<{\n    AlertListPreview?: AlertListPreviewProps['copy'];\n  }>;\n  classNames?: Readonly<{\n    AlertListPreview?: AlertListPreviewProps['classNames'];\n    NotifiInputContainer?: string;\n    InputFields?: DeepPartialReadonly<InputFieldsProps['classNames']>;\n    NotifiSubscribeButton?: NotifiSubscribeButtonProps['classNames'];\n    NotifiInputHeading?: string;\n  }>;\n  inputSeparators?: NotifiInputSeparators;\n  inputTextFields?: NotifiInputFieldsText;\n  allowedCountryCodes: string[];\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EditCardView: React.FC<EditCardViewProps> = ({\n  allowedCountryCodes,\n  buttonText,\n  copy,\n  classNames,\n  showPreview,\n  data,\n  inputDisabled,\n  inputSeparators,\n  inputTextFields,\n  inputs,\n}) => {\n  const { loading } = useNotifiSubscriptionContext();\n\n  return (\n    <div\n      className={clsx('NotifiInputContainer', classNames?.NotifiInputContainer)}\n    >\n      {showPreview ? (\n        <AlertListPreview\n          copy={copy?.AlertListPreview}\n          classNames={classNames?.AlertListPreview}\n          eventTypes={data.eventTypes}\n        />\n      ) : null}\n      {loading ? (\n        <div className=\"NotifiInputContainer__LoadingSpinner\">\n          <Spinner size=\"70px\" />\n        </div>\n      ) : (\n        <InputFields\n          hideContactInputs={showPreview && !data.isContactInfoRequired}\n          data={data}\n          allowedCountryCodes={allowedCountryCodes}\n          inputDisabled={inputDisabled}\n          inputSeparators={inputSeparators}\n          inputTextFields={inputTextFields}\n        />\n      )}\n      <NotifiSubscribeButton\n        buttonText={buttonText}\n        data={data}\n        classNames={classNames?.NotifiSubscribeButton}\n        inputs={inputs}\n      />\n    </div>\n  );\n};\n", "import {\n  CardConfigItemV1,\n  EventTypeConfig,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiForm,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { useNotifiSubscribe } from '../../hooks';\nimport { useFrontendClientLogin } from '../../hooks/useFrontendClientLogin';\nimport {\n  createConfigurations,\n  subscribeAlertsByFrontendClient,\n} from '../../utils';\nimport { formatTelegramForSubscription } from '../../utils/stringUtils';\n\nexport type NotifiSubscribeButtonProps = Readonly<{\n  classNames?: Readonly<{\n    button?: string;\n    label?: string;\n  }>;\n  buttonText: string;\n  data: CardConfigItemV1;\n  inputs: Record<string, unknown>;\n}>;\n\ntype TargetGroupData = {\n  name: string;\n  emailAddress?: string;\n  phoneNumber?: string;\n  telegramId?: string;\n  discordId?: string;\n};\n\nexport const NotifiSubscribeButton: React.FC<NotifiSubscribeButtonProps> = ({\n  buttonText,\n  classNames,\n  data,\n  inputs,\n}) => {\n  const eventTypes = data.eventTypes;\n  const { isInitialized, subscribe, updateTargetGroups } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const frontendClientLogin = useFrontendClientLogin();\n\n  const {\n    client,\n    params: { multiWallet },\n    isUsingFrontendClient,\n    frontendClient,\n  } = useNotifiClientContext();\n\n  const {\n    cardView,\n    connectedWallets,\n    loading,\n    setCardView,\n    useDiscord,\n    render,\n    setLoading,\n    syncFtuStage,\n  } = useNotifiSubscriptionContext();\n\n  const { formErrorMessages, formState } = useNotifiForm();\n\n  const { phoneNumber, telegram: telegramId, email } = formState;\n\n  const { email: emailErrorMessage, phoneNumber: smsErrorMessage } =\n    formErrorMessages;\n\n  const isMultiWallet = (multiWallet?.ownedWallets?.length ?? 0) > 0;\n\n  const targetGroup: TargetGroupData = useMemo(\n    () => ({\n      name: 'Default',\n      emailAddress: email === '' ? undefined : email,\n      phoneNumber: isValidPhoneNumber(phoneNumber) ? phoneNumber : undefined,\n      telegramId:\n        telegramId === ''\n          ? undefined\n          : formatTelegramForSubscription(telegramId),\n      discordId: useDiscord ? 'Default' : undefined,\n    }),\n    [email, phoneNumber, telegramId, useDiscord],\n  );\n\n  const renewTargetGroups = useCallback(\n    async (targetGroup: TargetGroupData) => {\n      if (isUsingFrontendClient) {\n        return frontendClient.ensureTargetGroup(targetGroup);\n      }\n      return updateTargetGroups();\n    },\n    [updateTargetGroups, frontendClient, isUsingFrontendClient],\n  );\n\n  const subscribeAlerts = useCallback(\n    async (eventTypes: EventTypeConfig, inputs: Record<string, unknown>) => {\n      if (isUsingFrontendClient) {\n        await renewTargetGroups(targetGroup);\n\n        return subscribeAlertsByFrontendClient(\n          frontendClient,\n          eventTypes,\n          inputs,\n        );\n      }\n      return subscribe(\n        createConfigurations(eventTypes, inputs, connectedWallets),\n      );\n    },\n    [\n      targetGroup,\n      isUsingFrontendClient,\n      frontendClient,\n      connectedWallets,\n      renewTargetGroups,\n      subscribeAlertsByFrontendClient,\n      subscribe,\n      createConfigurations,\n    ],\n  );\n\n  const onClick = useCallback(async () => {\n    let isFirstTimeUser = (client.data?.targetGroups?.length ?? 0) === 0;\n    if (\n      isUsingFrontendClient &&\n      frontendClient.userState?.status !== 'authenticated'\n    ) {\n      await frontendClientLogin();\n      const data = await frontendClient.fetchData();\n      isFirstTimeUser = (data.targetGroup?.length ?? 0) === 0;\n    }\n\n    setLoading(true);\n    try {\n      let success = false;\n      if (isFirstTimeUser && !isMultiWallet) {\n        const subEvents = eventTypes.filter((event) => {\n          return event.optOutAtSignup ? false : true;\n        });\n        const result = await subscribeAlerts(subEvents, inputs);\n        success = !!result;\n      } else {\n        const result = await renewTargetGroups(targetGroup);\n        success = !!result;\n      }\n\n      if (isUsingFrontendClient && success) {\n        const newData = await frontendClient.fetchData();\n        render(newData);\n      }\n\n      if (success === true) {\n        await syncFtuStage(data.isContactInfoRequired);\n        const nextState = !isMultiWallet\n          ? 'history'\n          : cardView.state === 'signup'\n          ? 'verifyonboarding'\n          : 'verify';\n        setCardView({\n          state: nextState,\n        });\n      }\n    } catch (e) {\n      setCardView({ state: 'error', reason: e });\n    }\n    setLoading(false);\n  }, [\n    isMultiWallet,\n    frontendClient,\n    isUsingFrontendClient,\n    client,\n    eventTypes,\n    frontendClientLogin,\n    subscribe,\n    updateTargetGroups,\n    setCardView,\n  ]);\n\n  const hasErrors = emailErrorMessage !== '' || smsErrorMessage !== '';\n  const isInputFieldsValid = useMemo(() => {\n    return data.isContactInfoRequired\n      ? email || phoneNumber || telegramId || useDiscord\n      : true;\n  }, [email, phoneNumber, telegramId, useDiscord, data.isContactInfoRequired]);\n\n  return (\n    <button\n      data-cy=\"notifiSubscribeButton\"\n      className={clsx('NotifiSubscribeButton__button', classNames?.button)}\n      disabled={!isInitialized || loading || hasErrors || !isInputFieldsValid}\n      onClick={onClick}\n    >\n      <span className={clsx('NotifiSubscribeButton__label', classNames?.label)}>\n        {loading ? 'Loading' : buttonText}\n      </span>\n    </button>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { DeepPartialReadonly } from 'notifi-react-card/lib/utils';\nimport React from 'react';\n\nimport { CheckIcon } from '../../../assets/CheckIcon';\n\nexport type AlertListPreviewProps = Readonly<{\n  alertList?: DeepPartialReadonly<{\n    container: string;\n    listItem: string;\n  }>;\n  eventTypes: CardConfigItemV1['eventTypes'];\n  copy?: DeepPartialReadonly<{\n    description: string;\n  }>;\n  classNames?: DeepPartialReadonly<{\n    checkmarkIcon: string;\n    container: string;\n    description: string;\n    eventListItem: string;\n  }>;\n}>;\n\nexport const AlertListPreview: React.FC<AlertListPreviewProps> = ({\n  eventTypes,\n  copy,\n  classNames,\n}: AlertListPreviewProps) => {\n  const alertNames = eventTypes.map((eventType) => {\n    // skip showing alert previews for labels\n    if (eventType.type === 'label') {\n      return;\n    }\n    return (\n      <div className=\"NotifiAlertList__listItem\" key={eventType.name}>\n        <CheckIcon\n          className={clsx(\n            'NotifiAlertListContainer__checkmarkIcon',\n            classNames?.checkmarkIcon,\n          )}\n        />\n        <label\n          className={clsx(\n            'NotifiAlertListContainer__listItemContent',\n            classNames?.eventListItem,\n          )}\n          key={eventType.name}\n        >\n          {eventType.type === 'fusion' ? (eventType.displayNameOverride ?? eventType.name) : eventType.name}\n        </label>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      className={clsx(\n        'NotifiAlertListContainer__container',\n        classNames?.container,\n      )}\n    >\n      <label\n        className={clsx(\n          'NotifiAlertListPreview__descriptionText',\n          classNames?.description,\n        )}\n      >\n        {copy?.description ?? 'Subscribe to any of these alerts'}\n      </label>\n      <div className={clsx('NotifiAlertLisPreview__checkmarkContainer')}>\n        {alertNames}\n      </div>\n    </div>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { NotifiInputFieldsText, NotifiInputSeparators } from '..';\nimport { useNotifiClientContext } from '../../../context';\nimport {\n  NotifiDiscordToggle,\n  NotifiDiscordToggleProps,\n} from '../../NotifiDiscordToggle';\nimport {\n  NotifiEmailInput,\n  NotifiEmailInputProps,\n} from '../../NotifiEmailInput';\nimport {\n  NotifiHwWalletToggle,\n  NotifiHwWalletToggleProps,\n} from '../../NotifiHwWalletToggle';\nimport { NotifiSmsInput, NotifiSmsInputProps } from '../../NotifiSmsInput';\nimport {\n  NotifiTelegramInput,\n  NotifiTelegramInputProps,\n} from '../../NotifiTelegramInput';\n\nexport type InputFieldsProps = {\n  data: CardConfigItemV1;\n  inputSeparators?: NotifiInputSeparators;\n  inputTextFields?: NotifiInputFieldsText;\n  allowedCountryCodes: string[];\n  inputDisabled: boolean;\n  hideContactInputs?: boolean;\n  classNames?: Readonly<{\n    NotifiEmailInput?: NotifiEmailInputProps['classNames'];\n    NotifiSmsInput?: NotifiSmsInputProps['classNames'];\n    NotifiTelegramInput?: NotifiTelegramInputProps['classNames'];\n    NotifiHwWalletToggle?: NotifiHwWalletToggleProps['classNames'];\n    NotifiDiscordToggle?: NotifiDiscordToggleProps['classNames'];\n  }>;\n};\nexport const InputFields: React.FC<InputFieldsProps> = ({\n  data,\n  classNames,\n  inputSeparators,\n  inputTextFields,\n  allowedCountryCodes,\n  inputDisabled,\n  hideContactInputs,\n}) => {\n  const { params } = useNotifiClientContext();\n\n  return (\n    <>\n      {!hideContactInputs ? (\n        <>\n          {data.contactInfo.email.active ? (\n            <NotifiEmailInput\n              disabled={inputDisabled}\n              classNames={classNames?.NotifiEmailInput}\n              copy={{\n                label: inputTextFields?.label?.email,\n                placeholder: inputTextFields?.placeholderText?.email,\n              }}\n            />\n          ) : null}\n          {inputSeparators?.emailSeparator?.content ? (\n            <div\n              className={clsx(\n                'NotifiInputSeparator__container',\n                inputSeparators?.emailSeparator?.classNames?.container,\n              )}\n            >\n              <div\n                className={clsx(\n                  'NotifiInputSeparator__content',\n                  inputSeparators.emailSeparator.classNames?.content,\n                )}\n              >\n                {inputSeparators?.emailSeparator?.content}\n              </div>\n            </div>\n          ) : null}\n          {data.contactInfo.sms.active ? (\n            <NotifiSmsInput\n              disabled={inputDisabled}\n              classNames={classNames?.NotifiSmsInput}\n              allowedCountryCodes={allowedCountryCodes}\n              copy={{\n                label: inputTextFields?.label?.sms,\n                placeholder: inputTextFields?.placeholderText?.sms,\n              }}\n            />\n          ) : null}\n          {inputSeparators?.smsSeparator?.content ? (\n            <div\n              className={clsx(\n                'NotifiInputSeparator__container',\n                inputSeparators?.smsSeparator?.classNames?.container,\n              )}\n            >\n              <div\n                className={clsx(\n                  'NotifiInputSeparator__content',\n                  inputSeparators.smsSeparator.classNames?.content,\n                )}\n              >\n                {inputSeparators?.smsSeparator?.content}\n              </div>\n            </div>\n          ) : null}\n          {data.contactInfo.telegram.active ? (\n            <NotifiTelegramInput\n              disabled={inputDisabled}\n              classNames={classNames?.NotifiTelegramInput}\n              copy={{\n                label: inputTextFields?.label?.telegram,\n                placeholder: inputTextFields?.placeholderText?.telegram,\n              }}\n            />\n          ) : null}\n          {inputSeparators?.telegramSeparator?.content ? (\n            <div\n              className={clsx(\n                'NotifiInputSeparator__container',\n                inputSeparators?.telegramSeparator?.classNames?.container,\n              )}\n            >\n              <div\n                className={clsx(\n                  'NotifiInputSeparator__content',\n                  inputSeparators.telegramSeparator.classNames?.content,\n                )}\n              >\n                {inputSeparators?.telegramSeparator?.content}\n              </div>\n            </div>\n          ) : null}\n\n          {data.contactInfo?.discord?.active ? (\n            <NotifiDiscordToggle\n              disabled={inputDisabled}\n              classNames={classNames?.NotifiDiscordToggle}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {params.walletBlockchain === 'SOLANA' ? (\n        <NotifiHwWalletToggle\n          disabled={inputDisabled}\n          classNames={classNames?.NotifiHwWalletToggle}\n        />\n      ) : null}\n    </>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { useNotifiSubscriptionContext } from '../context';\nimport { DeepPartialReadonly } from '../utils';\nimport { NotifiToggle, NotifiToggleProps } from './subscription';\n\nexport type NotifiDiscordToggleProps = Readonly<{\n  disabled: boolean;\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n  }>;\n}>;\n\nexport const NotifiDiscordToggle: React.FC<NotifiDiscordToggleProps> = ({\n  classNames,\n  disabled,\n}) => {\n  const { useDiscord, setUseDiscord } = useNotifiSubscriptionContext();\n\n  return (\n    <div\n      className={clsx('NotifiDiscordToggle__container', classNames?.container)}\n    >\n      <div className={clsx('NotifiDiscordToggle__label', classNames?.label)}>\n        Discord DM Bot\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled}\n        checked={useDiscord}\n        setChecked={setUseDiscord}\n      />\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { useNotifiSubscriptionContext } from '../context';\nimport { DeepPartialReadonly } from '../utils';\nimport { NotifiToggle, NotifiToggleProps } from './subscription';\n\nexport type NotifiHwWalletToggleProps = Readonly<{\n  disabled: boolean;\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n  }>;\n}>;\n\nexport const NotifiHwWalletToggle: React.FC<NotifiHwWalletToggleProps> = ({\n  classNames,\n  disabled,\n}) => {\n  const { useHardwareWallet, setUseHardwareWallet } =\n    useNotifiSubscriptionContext();\n\n  return (\n    <div\n      className={clsx('NotifiHwWalletToggle__container', classNames?.container)}\n    >\n      <div className={clsx('NotifiHwWalletToggle__label', classNames?.label)}>\n        Use hardware wallet\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled}\n        checked={useHardwareWallet}\n        setChecked={setUseHardwareWallet}\n      />\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from 'notifi-react-card/lib/context';\nimport React from 'react';\n\nimport { useNotifiSubscribe } from '../../../hooks';\nimport { useFrontendClientLogin } from '../../../hooks/useFrontendClientLogin';\n\nexport type ExpiredTokenViewCardProps = {\n  classNames?: {\n    container?: string;\n    title?: string;\n    subtitle?: string;\n    button?: string;\n    buttonLabel?: string;\n  };\n};\n\nexport const ExpiredTokenView: React.FC<ExpiredTokenViewCardProps> = ({\n  classNames,\n}) => {\n  const { logIn } = useNotifiSubscribe({ targetGroupName: 'Default' });\n  const { isUsingFrontendClient } = useNotifiClientContext();\n\n  const { setCardView } = useNotifiSubscriptionContext();\n\n  const frontendClientLogin = useFrontendClientLogin();\n\n  const handleClick = async () => {\n    let success = false;\n    const result = isUsingFrontendClient\n      ? await frontendClientLogin()\n      : await logIn();\n\n    success = !!result;\n\n    if (success === true) {\n      setCardView({ state: 'preview' });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(\n        'NotifiExpiredTokenCard__container',\n        classNames?.container,\n      )}\n    >\n      <div className={clsx('NotifiExpiredTokenCard__title', classNames?.title)}>\n        Connect to Notifi\n      </div>\n      <div\n        className={clsx(\n          'NotifiExpiredTokenCard__subtitle',\n          classNames?.subtitle,\n        )}\n      >\n        It's been a while! Connect to Notifi to load your <br />\n        notification details.\n      </div>\n      <button\n        className={clsx('NotifiExpiredTokenCard__button', classNames?.button)}\n        onClick={handleClick}\n      >\n        <span\n          className={clsx(\n            'NotifiExpiredTokenCard__buttonLabel',\n            classNames?.buttonLabel,\n          )}\n        >\n          Connect to Notifi\n        </span>\n      </button>\n    </div>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Virtuoso } from 'react-virtuoso';\n\nimport { NotificationEmptyBellIcon } from '../../../assets/NotificationEmptyBellIcon';\nimport { useNotifiClientContext } from '../../../context';\nimport {\n  DeepPartialReadonly,\n  getAlertNotificationViewBaseProps,\n  validateIsSupported,\n} from '../../../utils';\nimport { MESSAGES_PER_PAGE } from '../../../utils/constants';\nimport {\n  AlertNotificationRow,\n  AlertNotificationViewProps,\n} from '../../AlertHistory/AlertNotificationRow';\nimport { LoadingStateCard, LoadingStateCardProps } from '../../common';\n\nexport type NotificationHistoryEntry =\n  | Types.FusionNotificationHistoryEntryFragmentFragment\n  | Types.NotificationHistoryEntryFragmentFragment;\n\nexport type AlertHistoryViewProps = Readonly<{\n  noAlertDescription?: string;\n  isHidden: boolean;\n  data: CardConfigItemV1;\n  copy?: {\n    loadingHeader?: string;\n    loadingContent?: string;\n    loadingSpinnerSize?: string;\n    loadingRingColor?: string;\n  };\n  classNames?: DeepPartialReadonly<{\n    title: string;\n    header: string;\n    manageAlertLink: string;\n    noAlertDescription: string;\n    notificationDate: string;\n    notificationSubject: string;\n    notificationMessage: string;\n    notificationImage: string;\n    notificationList: string;\n    emptyAlertsBellIcon: string;\n    historyContainer: string;\n    virtuoso: string;\n    AlertCard: AlertNotificationViewProps['classNames'];\n    LoadingStateCard: LoadingStateCardProps['classNames'];\n  }>;\n  setAlertEntry: React.Dispatch<\n    React.SetStateAction<NotificationHistoryEntry | undefined>\n  >;\n}>;\n\nexport const AlertHistoryView: React.FC<AlertHistoryViewProps> = ({\n  classNames,\n  isHidden,\n  noAlertDescription,\n  setAlertEntry,\n  copy,\n}) => {\n  noAlertDescription = noAlertDescription\n    ? noAlertDescription\n    : 'You haven’t received any notifications yet';\n\n  const [endCursor, setEndCursor] = useState<string | undefined>();\n  const [hasNextPage, setHasNextPage] = useState<boolean>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const fetched = useRef<boolean>(false);\n\n  const { client, isUsingFrontendClient, frontendClient } =\n    useNotifiClientContext();\n\n  const [allNodes, setAllNodes] = useState<NotificationHistoryEntry[]>([]);\n  const { isClientInitialized, isClientAuthenticated } = useMemo(() => {\n    return {\n      isClientInitialized: isUsingFrontendClient\n        ? !!frontendClient.userState\n        : client.isInitialized,\n      isClientAuthenticated: isUsingFrontendClient\n        ? frontendClient.userState?.status === 'authenticated'\n        : client.isAuthenticated,\n    };\n  }, [isUsingFrontendClient, client, frontendClient]);\n\n  const getNotificationHistory = useCallback(\n    async ({ first, after }: Types.GetNotificationHistoryQueryVariables) => {\n      if (isLoading) {\n        return;\n      }\n\n      const result = isUsingFrontendClient\n        ? await frontendClient.getFusionNotificationHistory({\n            first,\n            after,\n            includeHidden: false,\n          })\n        : await client.getNotificationHistory({\n            first,\n            after,\n          });\n\n      const nodes: NotificationHistoryEntry[] = result?.nodes ?? [];\n      setAllNodes((existing) => existing.concat(nodes));\n\n      setEndCursor(result?.pageInfo.endCursor);\n      setHasNextPage(result?.pageInfo.hasNextPage);\n\n      setIsLoading(false);\n      return result;\n    },\n    [\n      client,\n      frontendClient,\n      isUsingFrontendClient,\n      setAllNodes,\n      setEndCursor,\n      setHasNextPage,\n    ],\n  );\n\n  useEffect(() => {\n    if (!isClientInitialized || !isClientAuthenticated) {\n      return;\n    }\n\n    if (!fetched.current) {\n      fetched.current = true;\n      setIsLoading(true);\n      getNotificationHistory({\n        first: MESSAGES_PER_PAGE,\n      }).finally(() => setIsLoading(false));\n    }\n  }, [client, frontendClient, isUsingFrontendClient]);\n\n  useEffect(() => {\n    if (isUsingFrontendClient && allNodes.length > 0) {\n      frontendClient\n        .markFusionNotificationHistoryAsRead({\n          ids: [],\n          beforeId: allNodes[0].id,\n        })\n        .catch((e) => console.log('Failed to mark as read', e));\n    }\n  }, [allNodes]);\n\n  if (isLoading) {\n    return (\n      <LoadingStateCard\n        copy={{\n          header: copy?.loadingHeader ?? '',\n          content: copy?.loadingContent,\n        }}\n        spinnerSize={copy?.loadingSpinnerSize}\n        ringColor={copy?.loadingRingColor}\n        classNames={classNames?.LoadingStateCard}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={clsx(\n        'NotifiAlertHistory__container',\n        classNames?.historyContainer,\n        { 'NotifiAlertHistory__container--hidden': isHidden },\n      )}\n    >\n      {allNodes.length > 0 ? (\n        <Virtuoso\n          className={clsx('NotifiAlertHistory__virtuoso', classNames?.virtuoso)}\n          style={{ flex: 1 }}\n          endReached={() => {\n            if (hasNextPage && endCursor) {\n              getNotificationHistory({\n                first: MESSAGES_PER_PAGE,\n                after: endCursor,\n              });\n            }\n          }}\n          data={allNodes.filter(validateIsSupported)}\n          itemContent={(_index, notification) => {\n            return (\n              <AlertNotificationRow\n                {...getAlertNotificationViewBaseProps(notification)}\n                handleAlertEntrySelection={() => setAlertEntry(notification)}\n                classNames={classNames?.AlertCard}\n              />\n            );\n          }}\n        />\n      ) : (\n        <div className=\"NotifiAlertHistory__noAlertContainer\">\n          <NotificationEmptyBellIcon\n            className={clsx(\n              'NotifiAlertHistory__emptyAlertsBellIcon',\n              classNames?.emptyAlertsBellIcon,\n            )}\n          />\n          <span\n            className={clsx(\n              'NotifiAlertHistory_noAlertDescription',\n              classNames?.noAlertDescription,\n            )}\n          >\n            {noAlertDescription}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const NotificationEmptyBellIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"25\"\n      height=\"30\"\n      viewBox=\"0 0 25 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.2179 29.7812C13.8979 29.7812 15.2724 28.4067 15.2724 26.7268H9.16346C9.16346 28.4067 10.5227 29.7812 12.2179 29.7812ZM21.3814 20.6178V12.9816C21.3814 8.29293 18.8767 4.36792 14.5088 3.32939V2.29087C14.5088 1.02325 13.4856 0 12.2179 0C10.9503 0 9.92708 1.02325 9.92708 2.29087V3.32939C5.54389 4.36792 3.05449 8.27766 3.05449 12.9816V20.6178L0 23.6723V25.1995H24.4359V23.6723L21.3814 20.6178Z\"\n        fill=\"#F5F6FB\"\n      />\n    </svg>\n  );\n};\n", "export const MESSAGES_PER_PAGE = 50;\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { formatTimestamp } from '../.././utils/AlertHistoryUtils';\n\nexport type AlertNotificationViewProps = Readonly<{\n  notificationTitle: string | undefined;\n  notificationImage?: JSX.Element;\n  notificationSubject: string | undefined;\n  notificationDate: string;\n  notificationMessage: string | undefined;\n  classNames?: Readonly<{\n    notificationContent?: string;\n    notificationDate?: string;\n    notificationImage?: string;\n    notificationMessage?: string;\n    notificationRow?: string;\n    notificationSubject?: string;\n    notificationTitle?: string;\n  }>;\n  handleAlertEntrySelection?: () => void;\n}>;\n\nexport const AlertNotificationRow: React.FC<AlertNotificationViewProps> = ({\n  notificationTitle,\n  classNames,\n  notificationImage,\n  notificationSubject,\n  notificationDate,\n  handleAlertEntrySelection,\n}) => {\n  return (\n    <div\n      className={clsx(\n        'NotifiAlertHistory__notificationRow',\n        classNames?.notificationRow,\n      )}\n      onClick={handleAlertEntrySelection}\n    >\n      <div\n        className={clsx(\n          'NotifiAlertHistory__notificationImage',\n          classNames?.notificationImage,\n        )}\n      >\n        {notificationImage}\n      </div>\n      <div\n        className={clsx(\n          'NotifiAlertHistory__content',\n          classNames?.notificationContent,\n        )}\n      >\n        <div\n          className={clsx(\n            'NotifiAlertHistory__notificationTitle',\n            classNames?.notificationTitle,\n          )}\n        >\n          {notificationTitle}\n        </div>\n        <div\n          className={clsx(\n            'NotifiAlertHistory__notificationSubject',\n            classNames?.notificationSubject,\n          )}\n        >\n          {notificationSubject}\n        </div>\n      </div>\n      <div\n        className={clsx(\n          'NotifiAlertHistory__notificationDate',\n          classNames?.notificationDate,\n        )}\n      >\n        {formatTimestamp(notificationDate)}\n      </div>\n    </div>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { useDestinationState } from 'notifi-react-card/lib/hooks/useDestinationState';\nimport React from 'react';\n\nimport { DeepPartialReadonly } from '../../../utils';\nimport { AlertsPanel, AlertsPanelProps } from './preview-panel/AlertsPanel';\nimport {\n  UserInfoPanel,\n  UserInfoPanelProps,\n} from './preview-panel/UserInfoPanel';\n\nexport type PreviewCardProps = Readonly<{\n  classNames?: {\n    NotifiPreviewCardSeparator?: string;\n    NotifiPreviewCardContainer?: string;\n    AlertsPanel?: DeepPartialReadonly<AlertsPanelProps['classNames']>;\n    backArrowContainer?: string;\n    UserInfoPanel?: DeepPartialReadonly<UserInfoPanelProps['classNames']>;\n    NotifiPreviewCardTitle?: string;\n    NotifiPreviewCardDividerLine?: string;\n  };\n  data: CardConfigItemV1;\n  inputDisabled: boolean;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const PreviewCard: React.FC<PreviewCardProps> = ({\n  classNames,\n  data,\n  inputDisabled,\n  inputs = {},\n}) => {\n  const { isTargetsExist } = useDestinationState();\n  return (\n    <div\n      data-cy=\"previewCard\"\n      className={clsx(\n        'NotifiPreviewCard__container',\n        classNames?.NotifiPreviewCardContainer,\n      )}\n    >\n      {isTargetsExist ? (\n        <UserInfoPanel\n          classNames={classNames?.UserInfoPanel}\n          contactInfo={data.contactInfo}\n        />\n      ) : null}\n\n      <div\n        className={clsx(\n          'NotifiPreviewCard__dividerLine',\n          classNames?.NotifiPreviewCardDividerLine,\n        )}\n      />\n\n      <div\n        className={clsx(\n          'NotifiPreviewCard__title',\n          classNames?.NotifiPreviewCardTitle,\n        )}\n      >\n        Select the alerts you want to receive:\n      </div>\n      <AlertsPanel\n        classNames={classNames?.AlertsPanel}\n        data={data}\n        inputDisabled={inputDisabled}\n        inputs={inputs}\n      />\n    </div>\n  );\n};\n", "import { CardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport {\n  EventTypeBroadcastRow,\n  EventTypeBroadcastRowProps,\n} from '../../EventTypeBroadcastRow';\nimport {\n  EventTypeCustomHealthCheckRow,\n  EventTypeCustomHealthCheckRowProps,\n} from '../../EventTypeCustomHealthCheckRow';\nimport { EventTypeCustomToggleRow } from '../../EventTypeCustomToggleRow';\nimport {\n  EventTypeDirectPushRow,\n  EventTypeDirectPushRowProps,\n} from '../../EventTypeDirectPushRow';\nimport {\n  EventTypeFusionHealthCheckRow,\n  EventTypeFusionHealthCheckRowProps,\n} from '../../EventTypeFusionHealthCheckRow';\nimport {\n  EventTypeFusionMultiThresholdRow,\n  EventTypeFusionMultiThresholdRowProps,\n} from '../../EventTypeFusionMultiThresholdRow';\nimport {\n  EventTypeFusionRowProps,\n  EventTypeFusionToggleRow,\n} from '../../EventTypeFusionToggleRow';\nimport {\n  EventTypeHealthCheckRow,\n  EventTypeHealthCheckRowProps,\n} from '../../EventTypeHealthCheckRow';\nimport {\n  EventTypeLabelRow,\n  EventTypeLabelRowProps,\n} from '../../EventTypeLabelRow';\nimport {\n  EventTypePriceChangeRow,\n  EventTypePriceChangeRowProps,\n} from '../../EventTypePriceChangeRow';\nimport {\n  EventTypeTradingPairsRow,\n  EventTypeTradingPairsRowProps,\n} from '../../EventTypeTradingPairsRow';\nimport {\n  EventTypeUnsupportedRow,\n  EventTypeUnsupportedRowProps,\n} from '../../EventTypeUnsupportedRow';\nimport {\n  EventTypeWalletBalanceRow,\n  EventTypeWalletBalanceRowProps,\n} from '../../EventTypeWalletBalanceRow';\nimport {\n  EventTypeXMPTRowProps,\n  EventTypeXMTPRow,\n} from '../../EventTypeXMTPRow';\n\nexport type AlertsPanelProps = Readonly<{\n  data: CardConfigItemV1;\n  inputDisabled: boolean;\n  classNames?: Readonly<{\n    EventTypeContainer?: string;\n    EventTypeBroadcastRow?: EventTypeBroadcastRowProps['classNames'];\n    EventTypeCustomHealthCheckRow?: EventTypeCustomHealthCheckRowProps['classNames'];\n    EventTypeDirectPushRow?: EventTypeDirectPushRowProps['classNames'];\n    EventTypeHealthCheckRow?: EventTypeHealthCheckRowProps['classNames'];\n    EventTypeLabelRow?: EventTypeLabelRowProps['classNames'];\n    EventTypePriceChangeRow?: EventTypePriceChangeRowProps['classNames'];\n    EventTypeTradingPairsRow?: EventTypeTradingPairsRowProps['classNames'];\n    EventTypeFusionMultiThresholdRow?: EventTypeFusionMultiThresholdRowProps['classNames'];\n    EventTypeUnsupportedRow?: EventTypeUnsupportedRowProps['classNames'];\n    EventTypeWalletBalanceRow?: EventTypeWalletBalanceRowProps['classNames'];\n    EventTypeXMTPRow?: EventTypeXMPTRowProps['classNames'];\n    EventTypeFusionToggleRow?: EventTypeFusionRowProps['classNames'];\n    EventTypeFusionHealthCheckRow?: EventTypeFusionHealthCheckRowProps['classNames'];\n  }>;\n  inputs: Record<string, unknown>;\n}>;\nexport const AlertsPanel: React.FC<AlertsPanelProps> = ({\n  data,\n  inputDisabled,\n  classNames,\n  inputs,\n}) => {\n  return (\n    <div\n      className={clsx(\n        'NotifiEventTypeContainer',\n        classNames?.EventTypeContainer,\n      )}\n    >\n      {data.eventTypes?.map((eventType) => {\n        switch (eventType.type) {\n          case 'broadcast':\n            return (\n              <EventTypeBroadcastRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeBroadcastRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n          case 'custom': {\n            return eventType.selectedUIType === 'HEALTH_CHECK' ? (\n              <EventTypeCustomHealthCheckRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeCustomHealthCheckRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            ) : (\n              <EventTypeCustomToggleRow\n                key={eventType.name}\n                disabled={inputDisabled}\n                config={eventType}\n                classNames={classNames?.EventTypeCustomHealthCheckRow}\n                inputs={inputs}\n              />\n            );\n          }\n          case 'directPush':\n            return (\n              <EventTypeDirectPushRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeDirectPushRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n\n          case 'XMTP':\n            return (\n              <EventTypeXMTPRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeXMTPRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n          case 'healthCheck':\n            return (\n              <EventTypeHealthCheckRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeHealthCheckRow}\n                disabled={inputDisabled}\n                config={eventType}\n              />\n            );\n          case 'label':\n            return (\n              <EventTypeLabelRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeLabelRow}\n                config={eventType}\n              />\n            );\n          case 'tradingPair':\n            return (\n              <EventTypeTradingPairsRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeTradingPairsRow}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n          case 'walletBalance':\n            return (\n              <EventTypeWalletBalanceRow\n                key={eventType.name}\n                classNames={classNames?.EventTypeWalletBalanceRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n          case 'fusionToggle': // fusionToggle is deprecated (use fusion with selectedUIType===TOGGLE instead )\n          case 'fusion':\n            switch (eventType.selectedUIType) {\n              case 'HEALTH_CHECK':\n                return (\n                  <EventTypeFusionHealthCheckRow\n                    key={eventType.name}\n                    disabled={inputDisabled}\n                    config={eventType}\n                    classNames={classNames?.EventTypeFusionHealthCheckRow}\n                    inputs={inputs}\n                  />\n                );\n              case 'TOGGLE':\n                return (\n                  <EventTypeFusionToggleRow\n                    key={eventType.name}\n                    classNames={classNames?.EventTypeFusionToggleRow}\n                    disabled={inputDisabled}\n                    config={eventType}\n                    inputs={inputs}\n                  />\n                );\n              case 'MULTI_THRESHOLD':\n                return (\n                  <EventTypeFusionMultiThresholdRow\n                    key={eventType.name}\n                    classNames={classNames?.EventTypeFusionMultiThresholdRow}\n                    config={eventType}\n                    inputs={inputs}\n                  />\n                );\n              default:\n                throw new Error(`Unknown fusion UI type`);\n            }\n          case 'priceChange':\n            return (\n              <EventTypePriceChangeRow\n                key={eventType.name}\n                classNames={classNames?.EventTypePriceChangeRow}\n                disabled={inputDisabled}\n                config={eventType}\n                inputs={inputs}\n              />\n            );\n          default:\n            return (\n              <EventTypeUnsupportedRow\n                key={JSON.stringify(eventType)}\n                classNames={classNames?.EventTypeUnsupportedRow}\n              />\n            );\n        }\n      })}\n    </div>\n  );\n};\n", "import {\n  EventTypeItem,\n  FusionHealthCheckEventTypeItem,\n  ThresholdDirection,\n  ValidInputRange,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  DeepPartialReadonly,\n  fusionHealthCheckConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeFusionHealthCheckRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    content: string;\n    button: string;\n    toggle: NotifiToggleProps['classNames'];\n    buttonContainer: string;\n    errorMessage: string;\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: FusionHealthCheckEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nconst getParsedPercentage = (input: string): number | null => {\n  if (input.indexOf('%') === input.length - 1) {\n    return parseFloat(input.slice(0, -1)) ?? null;\n  }\n  return null;\n};\n\nconst getParsedPrice = (input: string): number | null => {\n  if (input.indexOf('$') === 0) {\n    return parseFloat(input.slice(1)) ?? null;\n  }\n  return null;\n};\n\nexport const EventTypeFusionHealthCheckRow: React.FC<\n  EventTypeFusionHealthCheckRowProps\n> = ({ classNames, config, disabled, inputs }) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n\n  // This indicates which box to select\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n  const [customValue, setCustomValue] = useState<string>('');\n  const customInputRef = useRef<HTMLInputElement>(null);\n  const thresholdDirection: ThresholdDirection = 'below';\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const fusionEventId = useMemo(\n    () => resolveStringRef(config.name, config.fusionEventId, inputs),\n    [config, inputs],\n  );\n\n  const fusionSourceAddress = useMemo(\n    () => resolveStringRef(config.name, config.sourceAddress, inputs),\n    [config, inputs],\n  );\n\n  const alertName = useMemo<string>(() => {\n    if (config.fusionEventId.type === 'value') {\n      return config.name;\n    }\n    return `${config.name}:${fusionEventId}`;\n  }, [config, fusionEventId]);\n\n  const tooltipContent = config.tooltipContent;\n\n  const UNABLE_TO_SUBSCRIBE = 'Unable to subscribe, please try again';\n  const UNABLE_TO_UNSUBSCRIBE = 'Unable to unsubscribe, please try again';\n  const INVALID_NUMBER = 'Please enter a valid number';\n  const INVALID_RANGE = (validInputRange: ValidInputRange) => {\n    return `Please enter a number between ${validInputRange.min} and ${validInputRange.max}`;\n  };\n\n  const handleSuffixPercentage = (value: string) => {\n    value = value.replace('%', '');\n    setCustomValue(value + '%');\n  };\n  const handlePrefixDollar = (value: string) => {\n    value = value.replace('$', '');\n    setCustomValue('$' + value);\n  };\n\n  const subscribingRatioValue = useMemo(() => {\n    const alert = alerts[alertName];\n    if (!alert || !alert.filterOptions) return null;\n    let alertRatioValue: number | null = null;\n    switch (config.numberType) {\n      case 'percentage':\n        alertRatioValue = JSON.parse(alert.filterOptions).threshold * 100;\n        break;\n      default: // 'integer' | 'price'\n        alertRatioValue = JSON.parse(alert.filterOptions).threshold;\n    }\n    return alertRatioValue;\n  }, [alerts]);\n\n  const defaultRatios = useMemo(() => {\n    const ratios = config.checkRatios ?? [];\n    return ratios.map((ratio) => ratio.ratio);\n  }, [config]);\n\n  useEffect(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n\n    if (!subscribingRatioValue) {\n      setEnabled(false);\n      setSelectedIndex(defaultRatios.length - 1);\n      return;\n    }\n    setEnabled(true);\n\n    const selectedRatioIndex = defaultRatios.findIndex(\n      (ratio) => ratio === subscribingRatioValue,\n    );\n\n    if (selectedRatioIndex !== -1 && customValue === '') {\n      setSelectedIndex(selectedRatioIndex);\n    }\n\n    if (!defaultRatios.includes(subscribingRatioValue) && customValue === '') {\n      setSelectedIndex(3);\n      setCustomValue(() => {\n        switch (config.numberType) {\n          case 'percentage':\n            return subscribingRatioValue + '%';\n          case 'price':\n            return '$' + subscribingRatioValue;\n          default: // 'integer'\n            return subscribingRatioValue.toString();\n        }\n      });\n    }\n  }, [loading, enabled, setEnabled, defaultRatios, subscribingRatioValue]);\n\n  const validateInput = useCallback(\n    (inputValue: string, regex: RegExp, inputNumber: number | null) => {\n      if (!regex.test(inputValue)) {\n        return { isInputValid: false, inputInvalidWarning: INVALID_NUMBER };\n      }\n      if (!inputNumber) {\n        return { isInputValid: false, inputInvalidWarning: INVALID_NUMBER };\n      }\n      if (\n        config.validInputRange &&\n        (inputNumber > config.validInputRange.max ||\n          inputNumber < config.validInputRange.min)\n      ) {\n        return {\n          isInputValid: false,\n          inputInvalidWarning: INVALID_RANGE(config.validInputRange),\n        };\n      }\n      return { isInputValid: true, inputInvalidWarning: '' };\n    },\n    [config],\n  );\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n      ratioNumber: number,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        alertDetail.inputs[`${alertDetail.eventType.name}__healthRatio`] =\n          ratioNumber;\n        alertDetail.inputs[\n          `${alertDetail.eventType.name}__healthThresholdDirection`\n        ] = config.checkRatios[0].type ?? thresholdDirection;\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: fusionHealthCheckConfiguration({\n            maintainSourceGroup: config?.maintainSourceGroup,\n            fusionId: fusionEventId,\n            fusionSourceAddress,\n            alertFrequency: config.alertFrequency,\n            thresholdDirection:\n              config.checkRatios[0].type ?? thresholdDirection,\n            threshold:\n              config.numberType === 'percentage'\n                ? ratioNumber / 100\n                : ratioNumber,\n          }),\n          alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleCustomRatioButtonNewSubscription = () => {\n    if (loading || isNotificationLoading || !customInputRef.current) {\n      return;\n    }\n    const inputValue = customInputRef.current.value;\n    let regex = new RegExp(/^[0-9.]+$/);\n    let inputNumber = null;\n    switch (config.numberType) {\n      case 'percentage':\n        regex = new RegExp(/^[0-9.%]+$/);\n        inputNumber = getParsedPercentage(inputValue);\n        break;\n      case 'price':\n        regex = new RegExp(/^[0-9.$]+$/);\n        inputNumber = getParsedPrice(inputValue);\n        break;\n      default: // 'integer'\n        inputNumber = parseFloat(inputValue);\n    }\n\n    const { isInputValid, inputInvalidWarning } = validateInput(\n      inputValue,\n      regex,\n      inputNumber,\n    );\n\n    if (!isInputValid) {\n      return setErrorMessage(inputInvalidWarning);\n    }\n\n    setErrorMessage('');\n    setIsNotificationLoading(true);\n\n    customInputRef.current.placeholder = 'Custom';\n    if (inputNumber && customValue) {\n      subscribeAlert({ eventType: config, inputs }, inputNumber)\n        .then(() => {\n          setSelectedIndex(3);\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_UNSUBSCRIBE))\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setErrorMessage(INVALID_NUMBER);\n      setSelectedIndex(defaultRatios[defaultRatios.length - 1]);\n      setIsNotificationLoading(false);\n    }\n  };\n\n  const handleKeypressUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (customInputRef.current) {\n        customInputRef.current.blur();\n        event.preventDefault();\n      }\n    }\n  };\n  const handleRatioButtonNewSubscription = (value: number, index: number) => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    setErrorMessage('');\n    if (value) {\n      subscribeAlert({ eventType: config, inputs }, value)\n        .then(() => {\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n          setSelectedIndex(index);\n          setCustomValue('');\n        })\n        .catch(() => setErrorMessage(UNABLE_TO_SUBSCRIBE))\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setErrorMessage(INVALID_NUMBER);\n      setIsNotificationLoading(false);\n    }\n  };\n\n  const handleHealthCheckSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n    setErrorMessage('');\n    if (!enabled && !subscribingRatioValue) {\n      setEnabled(true);\n      subscribeAlert(\n        { eventType: config, inputs },\n        defaultRatios[defaultRatios.length - 1],\n      )\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch((e) => {\n          setErrorMessage(UNABLE_TO_SUBSCRIBE);\n          setEnabled(false);\n          throw e;\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({ eventType: config, inputs })\n        .then((res) => {\n          setCustomValue('');\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch((e) => {\n          setErrorMessage(UNABLE_TO_SUBSCRIBE);\n          setEnabled(true);\n          throw e;\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    subscribingRatioValue,\n    enabled,\n    isNotificationLoading,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div>\n      <div\n        className={clsx(\n          'EventTypeCustomHealthCheckRow__container',\n          classNames?.container,\n        )}\n      >\n        <div\n          className={clsx('EventTypeHealthCheckRow__label', classNames?.label)}\n        >\n          {config.displayNameOverride ?? config.name}\n          {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n            <NotifiTooltip\n              classNames={classNames?.tooltip}\n              content={tooltipContent}\n            />\n          ) : null}\n        </div>\n        <NotifiToggle\n          checked={enabled}\n          classNames={classNames?.toggle}\n          disabled={disabled || isNotificationLoading}\n          setChecked={handleHealthCheckSubscription}\n        />\n      </div>\n      {enabled && config.checkRatios?.length ? (\n        <>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__content',\n              classNames?.content,\n            )}\n          >\n            {config.healthCheckSubtitle\n              ? config.healthCheckSubtitle\n              : `Alert me when my margin ratio is ${config.checkRatios[0]?.type}`}\n          </div>\n          <div\n            className={clsx(\n              'EventTypeHealthCheckRow__buttonContainer',\n              classNames?.buttonContainer,\n            )}\n          >\n            {config.checkRatios.map((value, index) => {\n              const numberType = config.numberType;\n\n              let valueToShow = null;\n              switch (numberType) {\n                case 'percentage':\n                  valueToShow = value.ratio + '%';\n                  break;\n                case 'price':\n                  valueToShow = '$' + value.ratio;\n                  break;\n                default: // 'integer'\n                  valueToShow = value.ratio;\n              }\n              return (\n                <div\n                  key={index}\n                  className={clsx(\n                    'EventTypeHealthCheckRow__button',\n                    `${\n                      index === selectedIndex\n                        ? ' EventTypeHealthCheckRow__buttonSelected'\n                        : undefined\n                    }`,\n                    isNotificationLoading ? 'buttonDisabled' : undefined,\n                    classNames?.button,\n                  )}\n                  onClick={() => {\n                    if (\n                      isNotificationLoading === true ||\n                      selectedIndex === index\n                    ) {\n                      return;\n                    }\n\n                    handleRatioButtonNewSubscription(value.ratio, index);\n                  }}\n                >\n                  {valueToShow}\n                </div>\n              );\n            })}\n            <input\n              ref={customInputRef}\n              onKeyUp={(e) => handleKeypressUp(e)}\n              onFocus={(e) =>\n                (e.target.placeholder =\n                  config.numberType === 'percentage' ? '0.00%' : '0')\n              }\n              onClick={() => {\n                setErrorMessage('');\n                setSelectedIndex(null);\n              }}\n              disabled={isNotificationLoading}\n              onBlur={handleCustomRatioButtonNewSubscription}\n              value={customValue}\n              placeholder=\"Custom\"\n              className={clsx(\n                'EventTypeHealthCheckRow__button',\n                'EventTypeHealthCheckRow__customButton',\n                `${\n                  selectedIndex === 3\n                    ? ' EventTypeHealthCheckRow__buttonSelected'\n                    : undefined\n                }`,\n                classNames?.button,\n              )}\n              onChange={(e) => {\n                if (config.numberType === 'percentage') {\n                  handleSuffixPercentage(e.target.value);\n                } else if (config.numberType === 'price') {\n                  handlePrefixDollar(e.target.value);\n                } else {\n                  setCustomValue(e.target.value ?? '');\n                }\n              }}\n            />\n          </div>\n          <label\n            className={clsx(\n              'NotifiEmailInput__errorMessage',\n              classNames?.errorMessage,\n            )}\n          >\n            {errorMessage}\n          </label>\n        </>\n      ) : null}\n    </div>\n  );\n};\n", "import {\n  EventTypeItem,\n  FusionToggleEventTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  AlertConfiguration,\n  DeepPartialReadonly,\n  fusionToggleConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringRef } from './resolveRef';\n\nexport type EventTypeFusionRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: FusionToggleEventTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeFusionToggleRow: React.FC<EventTypeFusionRowProps> = ({\n  classNames,\n  config,\n  disabled,\n  inputs,\n}: EventTypeFusionRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const [enabled, setEnabled] = useState(false);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const fusionEventId = useMemo(\n    () => resolveStringRef(config.name, config.fusionEventId, inputs),\n    [config, inputs],\n  );\n\n  const fusionSourceAddress = useMemo(\n    () => resolveStringRef(config.name, config.sourceAddress, inputs),\n    [config, inputs],\n  );\n\n  const alertName = useMemo<string>(() => {\n    if (config.fusionEventId.type === 'value') {\n      return config.name;\n    }\n    return `${config.name}:${fusionEventId}`;\n  }, [config, fusionEventId]);\n\n  const alertConfiguration = useMemo<AlertConfiguration>(() => {\n    return fusionToggleConfiguration({\n      maintainSourceGroup: config?.maintainSourceGroup,\n      fusionId: fusionEventId,\n      fusionSourceAddress,\n      alertFrequency: config?.alertFrequency,\n    });\n  }, [alertName, config, inputs]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: alertConfiguration,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient, alertConfiguration],\n  );\n\n  const tooltipContent = config.tooltipContent;\n\n  const didFetch = useRef(false);\n\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    if (!enabled) {\n      setEnabled(true);\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n      unSubscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          if (res) {\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    loading,\n    enabled,\n    instantSubscribe,\n    alertConfiguration,\n    alertName,\n    isNotificationLoading,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div\n      className={clsx(\n        'EventTypeFusionToggleRow__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx('EventTypeFusionToggleRow__label', classNames?.label)}\n      >\n        {config.displayNameOverride ?? config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        checked={enabled}\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import {\n  EventTypeItem,\n  XMTPTopicTypeItem,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport {\n  AlertConfiguration,\n  DeepPartialReadonly,\n  XMTPToggleConfiguration,\n  subscribeAlertByFrontendClient,\n  unsubscribeAlertByFrontendClient,\n} from '../../utils';\nimport type { NotifiToggleProps } from './NotifiToggle';\nimport { NotifiToggle } from './NotifiToggle';\nimport { NotifiTooltip, NotifiTooltipProps } from './NotifiTooltip';\nimport { resolveStringArrayRef } from './resolveRef';\n\nexport type EventTypeXMPTRowProps = Readonly<{\n  classNames?: DeepPartialReadonly<{\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n    tooltip: NotifiTooltipProps['classNames'];\n  }>;\n  disabled: boolean;\n  config: XMTPTopicTypeItem;\n  inputs: Record<string, unknown>;\n}>;\n\nexport const EventTypeXMTPRow: React.FC<EventTypeXMPTRowProps> = ({\n  classNames,\n  disabled,\n  config,\n  inputs,\n}: EventTypeXMPTRowProps) => {\n  const { alerts, loading, render } = useNotifiSubscriptionContext();\n\n  const { instantSubscribe } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const alertName = useMemo<string>(() => config.name, [config]);\n\n  const alertConfiguration = useMemo<AlertConfiguration>(() => {\n    return XMTPToggleConfiguration({\n      XMTPTopics: resolveStringArrayRef(config.name, config.XMTPTopics, inputs),\n    });\n  }, [alertName, config]);\n\n  const [enabled, setEnabled] = useState(false);\n  const [isNotificationLoading, setIsNotificationLoading] =\n    useState<boolean>(false);\n\n  const tooltipContent = config.tooltipContent;\n  const didFetch = useRef(false);\n\n  useEffect(() => {\n    if (didFetch.current) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n    setEnabled(hasAlert);\n    didFetch.current = true;\n  }, [alertName, alerts]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: alertConfiguration,\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const unSubscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ) => {\n      if (isUsingFrontendClient) {\n        return unsubscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertName: alertDetail.eventType.name,\n          alertConfiguration: null,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  const handleNewSubscription = useCallback(() => {\n    if (loading || isNotificationLoading) {\n      return;\n    }\n    setIsNotificationLoading(true);\n\n    if (!enabled) {\n      setEnabled(true);\n\n      subscribeAlert({\n        eventType: config,\n        inputs,\n      })\n        .then((res) => {\n          // We update optimistically so we need to check if the alert exists.\n          const responseHasAlert = res.alerts[alertName] !== undefined;\n\n          if (responseHasAlert !== true) {\n            setEnabled(false);\n          }\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch((e) => {\n          console.log('Failed to subscribeAlert', e);\n          setEnabled(false);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    } else {\n      setEnabled(false);\n\n      unSubscribeAlert({\n        eventType: config,\n        inputs: inputs,\n      })\n        .then((res) => {\n          if (res) {\n            // We update optimistically so we need to check if the alert exists.\n            const responseHasAlert = res.alerts[alertName] !== undefined;\n            if (responseHasAlert !== false) {\n              setEnabled(true);\n            }\n          }\n          // Else, ensured by frontendClient\n          isUsingFrontendClient && frontendClient.fetchData().then(render);\n        })\n        .catch(() => {\n          setEnabled(true);\n        })\n        .finally(() => {\n          setIsNotificationLoading(false);\n        });\n    }\n  }, [\n    enabled,\n    alerts,\n    instantSubscribe,\n    alertName,\n    isNotificationLoading,\n    setEnabled,\n    setIsNotificationLoading,\n  ]);\n\n  return (\n    <div className={clsx('EventTypeXMTPRow__container', classNames?.container)}>\n      <div className={clsx('EventTypeXMTPRow__label', classNames?.label)}>\n        {config.name}\n        {tooltipContent !== undefined && tooltipContent.length > 0 ? (\n          <NotifiTooltip\n            classNames={classNames?.tooltip}\n            content={tooltipContent}\n          />\n        ) : null}\n      </div>\n      <NotifiToggle\n        classNames={classNames?.toggle}\n        disabled={disabled || isNotificationLoading}\n        checked={enabled}\n        setChecked={handleNewSubscription}\n      />\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { PenIcon } from 'notifi-react-card/lib/assets/PenIcon';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../../../context';\nimport { CardConfigItemV1 } from '../../../../hooks';\nimport { DeepPartialReadonly } from '../../../../utils';\nimport { DestinationErrorMessage } from './DestinationErrorMessage';\n\nexport type UserInfoSection = {\n  container: string;\n  label: string;\n  confirmationLink: string;\n  confirmationLabel: string;\n  errorMessageContainer: string;\n  errorMessage: string;\n  tooltipContent: string;\n};\n\nexport type UserInfoPanelProps = {\n  classNames?: DeepPartialReadonly<{\n    alertHistory: string;\n    container: string;\n    email?: UserInfoSection;\n    telegram?: UserInfoSection;\n    discord?: UserInfoSection;\n    sms?: UserInfoSection;\n    EditButton: string;\n    myWallet?: UserInfoSection;\n  }>;\n  contactInfo: CardConfigItemV1['contactInfo'];\n  confirmationLabels?: {\n    email?: string;\n    telegram?: string;\n  };\n};\nexport const UserInfoPanel: React.FC<UserInfoPanelProps> = ({\n  classNames,\n  contactInfo,\n  confirmationLabels,\n}) => {\n  const [isEmailConfirmationSent, setIsEmailConfirmationSent] =\n    useState<boolean>(false);\n\n  const {\n    phoneNumber,\n    email,\n    telegramId,\n    setCardView,\n    destinationErrorMessages,\n    useDiscord,\n    discordTargetData,\n  } = useNotifiSubscriptionContext();\n\n  const {\n    params: { multiWallet },\n  } = useNotifiClientContext();\n\n  const handleEditClick = useCallback(() => {\n    setCardView({ state: 'edit' });\n  }, [setCardView, phoneNumber, email, telegramId]);\n\n  const {\n    telegram: telegramErrorMessage,\n    email: emailErrorMessage,\n    phoneNumber: phoneNumberErrorMessage,\n    discord: discordErrrorMessage,\n  } = destinationErrorMessages;\n\n  const handleResendEmailVerificationClick = useCallback(() => {\n    if (emailErrorMessage?.type !== 'recoverableError') return;\n    setIsEmailConfirmationSent(true);\n    emailErrorMessage.onClick();\n    setTimeout(() => setIsEmailConfirmationSent(false), 3000);\n  }, [emailErrorMessage]);\n\n  const discordUserName = useMemo(() => {\n    const { username, discriminator } = discordTargetData || {};\n\n    return discriminator === '0' ? username : `${username}#${discriminator}`;\n  }, [discordTargetData]);\n\n  return (\n    <div\n      className={clsx('NotifiUserInfoPanelContainer', classNames?.container)}\n    >\n      {contactInfo.email.active && email ? (\n        <div\n          className={clsx(\n            'NotifiUserInfoPanel__email',\n            classNames?.email?.container,\n          )}\n        >\n          <label\n            className={clsx(\n              'NotifiUserInfoPanel__emailLabel',\n              classNames?.email?.label,\n            )}\n          >\n            {email}\n          </label>\n          {emailErrorMessage?.type === 'recoverableError' ? (\n            <DestinationErrorMessage\n              classNames={{\n                errorMessage: clsx(classNames?.email?.errorMessage, {\n                  DestinationError__emailConfirmationSent:\n                    isEmailConfirmationSent,\n                }),\n                errorMessageContainer: classNames?.email?.errorMessageContainer,\n                tooltipContent: classNames?.email?.tooltipContent,\n              }}\n              onClick={() => handleResendEmailVerificationClick()}\n              errorMessage={\n                isEmailConfirmationSent ? 'Sent' : emailErrorMessage.message\n              }\n              tooltipContent={emailErrorMessage?.tooltip}\n            />\n          ) : null}\n        </div>\n      ) : null}\n      {contactInfo.sms.active && phoneNumber ? (\n        <div\n          className={clsx(\n            'NotifiUserInfoPanel__sms',\n            classNames?.sms?.container,\n          )}\n        >\n          <label\n            className={clsx(\n              'NotifiUserInfoPanel__smsLabel',\n              classNames?.sms?.label,\n            )}\n          >\n            {phoneNumber}\n          </label>\n\n          {phoneNumberErrorMessage?.type !== undefined ? (\n            <DestinationErrorMessage\n              classNames={{\n                errorMessage: classNames?.sms?.errorMessage,\n                errorMessageContainer: classNames?.sms?.errorMessageContainer,\n                tooltipContent: classNames?.sms?.tooltipContent,\n              }}\n              errorMessage={phoneNumberErrorMessage?.message}\n              tooltipContent={phoneNumberErrorMessage?.tooltip}\n            />\n          ) : null}\n        </div>\n      ) : null}\n      {contactInfo.telegram.active && telegramId ? (\n        <div\n          className={clsx(\n            'NotifiUserInfoPanel__telegram',\n            classNames?.telegram?.container,\n          )}\n        >\n          <label\n            className={clsx(\n              'NotifiUserInfoPanel__telegramLabel',\n              classNames?.telegram?.label,\n            )}\n          >\n            {telegramId}\n          </label>\n          {telegramErrorMessage?.type === 'recoverableError' ? (\n            <DestinationErrorMessage\n              classNames={{\n                errorMessage: clsx(\n                  classNames?.telegram?.errorMessage,\n                  classNames?.telegram?.confirmationLink,\n                ),\n                errorMessageContainer:\n                  classNames?.telegram?.errorMessageContainer,\n                tooltipContent: classNames?.telegram?.tooltipContent,\n              }}\n              onClick={() => {\n                telegramErrorMessage?.onClick();\n              }}\n              errorMessage={\n                telegramErrorMessage?.message ??\n                confirmationLabels?.telegram ??\n                ''\n              }\n              tooltipContent={destinationErrorMessages?.telegram?.tooltip}\n            />\n          ) : null}\n        </div>\n      ) : null}\n      {contactInfo?.discord?.active && useDiscord ? (\n        <div\n          className={clsx(\n            'NotifiUserInfoPanel__discord',\n            classNames?.discord?.container,\n          )}\n        >\n          <label\n            className={clsx(\n              'NotifiUserInfoPanel__discordLabel',\n              classNames?.discord?.label,\n            )}\n          >\n            {discordTargetData?.isConfirmed === true\n              ? discordUserName\n              : 'Discord'}\n          </label>\n          {discordErrrorMessage?.type === 'recoverableError' ? (\n            <DestinationErrorMessage\n              classNames={{\n                errorMessage: clsx(\n                  classNames?.discord?.errorMessage,\n                  classNames?.discord?.confirmationLink,\n                ),\n                errorMessageContainer:\n                  classNames?.discord?.errorMessageContainer,\n                tooltipContent: classNames?.discord?.tooltipContent,\n              }}\n              onClick={() => {\n                discordErrrorMessage?.onClick();\n              }}\n              errorMessage={\n                discordErrrorMessage?.message ??\n                confirmationLabels?.telegram ??\n                ''\n              }\n              tooltipContent={destinationErrorMessages?.discord?.tooltip}\n            />\n          ) : null}\n        </div>\n      ) : null}\n      {multiWallet !== undefined && multiWallet.ownedWallets.length > 0 ? (\n        <div\n          className={clsx(\n            'NotifiUserInfoPanel__myWallet',\n            classNames?.myWallet?.container,\n          )}\n        >\n          <label\n            className={clsx(\n              'NotifiUserInfoPanel__myWalletLabel',\n              classNames?.myWallet?.label,\n            )}\n          >\n            My wallets\n          </label>\n          <button\n            className={clsx(\n              'NotifiUserInfoPanel__myWalletConfirmation',\n              classNames?.myWallet?.confirmationLink,\n            )}\n            onClick={() => {\n              setCardView({ state: 'verify' });\n            }}\n          >\n            Edit\n          </button>\n        </div>\n      ) : null}\n      <button\n        className={clsx(\n          'NotifiPreviewCard__editButton',\n          classNames?.EditButton,\n        )}\n        onClick={handleEditClick}\n      >\n        <PenIcon />\n        Edit\n      </button>\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const PenIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.293 15.619L15.619 5.29299C16.009 4.90299 16.642 4.90299 17.032 5.29299L18.708 6.96899C19.098 7.35899 19.098 7.99199 18.708 8.38199L8.381 18.707C8.194 18.895 7.94 19 7.675 19H5V16.325C5 16.06 5.105 15.806 5.293 15.619V15.619Z\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M13.75 7.16003L16.84 10.25\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n", "import {\n  CardConfigItemV1,\n  EventTypeConfig,\n} from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport { formatTelegramForSubscription } from 'notifi-react-card/lib/utils/stringUtils';\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiForm,\n  useNotifiSubscriptionContext,\n} from '../../../context';\nimport { useNotifiSubscribe } from '../../../hooks';\nimport {\n  createConfigurations,\n  subscribeAlertsByFrontendClient,\n} from '../../../utils';\nimport { WalletList } from '../../WalletList';\nimport NotifiCardButton, {\n  NotifiCardButtonProps,\n} from '../../common/NotifiCardButton';\n\nexport type VerifyWalletViewProps = Readonly<{\n  classNames?: Readonly<{\n    NotifiVerifyContainer?: string;\n    NotifiInputHeading?: string;\n    NotifiCardButtonProps?: NotifiCardButtonProps['classNames'];\n  }>;\n  buttonText: string;\n  data: CardConfigItemV1;\n  inputs: Record<string, unknown>;\n}>;\n\nconst VerifyWalletView: React.FC<VerifyWalletViewProps> = ({\n  classNames,\n  buttonText,\n  data,\n  inputs,\n}) => {\n  const {\n    cardView,\n    setCardView,\n    loading,\n    setLoading,\n    connectedWallets,\n    useDiscord,\n  } = useNotifiSubscriptionContext();\n\n  const {\n    formState: { phoneNumber, telegram: telegramId, email },\n  } = useNotifiForm();\n\n  const { subscribe, updateWallets } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const targetGroup = useMemo(\n    () => ({\n      name: 'Default',\n      emailAddress: email === '' ? undefined : email,\n      phoneNumber: isValidPhoneNumber(phoneNumber) ? phoneNumber : undefined,\n      telegramId:\n        telegramId === ''\n          ? undefined\n          : formatTelegramForSubscription(telegramId),\n      discordId: useDiscord ? 'Default' : undefined,\n    }),\n    [email, phoneNumber, telegramId, useDiscord],\n  );\n\n  const subscribeAlerts = useCallback(\n    async (eventTypes: EventTypeConfig, inputs: Record<string, unknown>) => {\n      if (isUsingFrontendClient) {\n        await frontendClient.ensureTargetGroup(targetGroup);\n        return subscribeAlertsByFrontendClient(\n          frontendClient,\n          eventTypes,\n          inputs,\n        );\n      }\n      return subscribe(\n        createConfigurations(data.eventTypes, inputs, connectedWallets),\n      );\n    },\n    [\n      isUsingFrontendClient,\n      frontendClient,\n      email,\n      phoneNumber,\n      telegramId,\n      useDiscord,\n      subscribe,\n    ],\n  );\n  const renewWallets = useCallback(async () => {\n    if (isUsingFrontendClient) {\n      return frontendClient.updateWallets();\n    }\n    return updateWallets();\n  }, [isUsingFrontendClient, frontendClient, updateWallets]);\n\n  const onClick = useCallback(async () => {\n    if (cardView.state === 'verifyonboarding') {\n      setLoading(true);\n\n      try {\n        const subEvents = data.eventTypes.filter((event) => {\n          return event.optOutAtSignup ? false : true;\n        });\n        await subscribeAlerts(subEvents, inputs);\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setLoading(true);\n\n      try {\n        await renewWallets();\n      } finally {\n        setLoading(false);\n      }\n    }\n    setCardView({ state: 'preview' });\n  }, [setLoading, data, inputs, connectedWallets, subscribe, renewWallets]);\n\n  return (\n    <div\n      className={clsx(\n        'NotifiVerifyContainer',\n        classNames?.NotifiVerifyContainer,\n      )}\n    >\n      <WalletList />\n      <NotifiCardButton\n        buttonText={buttonText}\n        disabled={loading}\n        onClick={onClick}\n      />\n    </div>\n  );\n};\n\nexport default VerifyWalletView;\n", "import { WalletWithSignParams } from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport { GqlError } from '@notifi-network/notifi-react-hooks';\nimport { addressEllipsis } from 'notifi-react-card/lib/utils/stringUtils';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { useNotifiSubscribe } from '../../hooks';\n\nexport type ConnectWalletRowProps = WalletWithSignParams &\n  Readonly<{\n    connectedWallets: ReadonlyArray<Types.ConnectedWalletFragmentFragment>;\n    disabled: boolean;\n  }>;\n\nconst hasKey = <K extends string>(\n  obj: object,\n  key: K,\n): obj is object & { [k in K]: unknown } => {\n  return typeof obj === 'object' && obj !== null && key in obj;\n};\n\nconst findError = <C extends string>(\n  errors: ReadonlyArray<unknown>,\n  code: C,\n): unknown | undefined => {\n  return errors.find(\n    (err) =>\n      typeof err === 'object' &&\n      err !== null &&\n      hasKey(err, 'extensions') &&\n      typeof err.extensions === 'object' &&\n      err.extensions !== null &&\n      hasKey(err.extensions, 'code') &&\n      code === err.extensions.code,\n  );\n};\n\nexport const ConnectWalletRow: React.FC<ConnectWalletRowProps> = ({\n  connectedWallets,\n  displayName,\n  disabled,\n  ...walletParams\n}: ConnectWalletRowProps) => {\n  const { subscribeWallet } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n\n  const isConnected = useMemo(() => {\n    const key = 'accountAddress';\n    const address = hasKey(walletParams, key)\n      ? walletParams[key]\n      : walletParams.walletPublicKey;\n    return connectedWallets.some(\n      (it) =>\n        it.address === address &&\n        it.walletBlockchain === walletParams.walletBlockchain,\n    );\n  }, [connectedWallets, walletParams]);\n\n  const shortenedAddress = useMemo(() => {\n    if (walletParams === null || walletParams.walletPublicKey === null) {\n      return null;\n    }\n    return addressEllipsis(walletParams.walletPublicKey);\n  }, [walletParams]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnectedElsewhere, setIsConnectedElsewhere] = useState(false);\n\n  const connectWallet = useCallback(\n    async (technique: 'FAIL' | 'DISCONNECT_AND_CLOSE_OLD_ACCOUNT') => {\n      setIsLoading(true);\n      try {\n        await subscribeWallet({\n          walletParams,\n          connectWalletConflictResolutionTechnique: technique,\n        });\n        setIsConnectedElsewhere(false);\n      } catch (e: unknown) {\n        if (e instanceof GqlError) {\n          const alreadyConnectedError =\n            findError(\n              e.errors,\n              'ERROR_WALLETCONNECT_ALREADY_CONNECTED_TO_ANOTHER_ACCOUNT_AND_LAST',\n            ) ??\n            findError(\n              e.errors,\n              'ERROR_WALLETCONNECT_ALREADY_CONNECTED_TO_ANOTHER_ACCOUNT',\n            );\n          if (alreadyConnectedError !== undefined) {\n            setIsConnectedElsewhere(true);\n          }\n        }\n\n        throw e;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [subscribeWallet, walletParams],\n  );\n\n  return (\n    <div className=\"ConnectWalletRow__container\">\n      <div className=\"ConnectWalletRow__topRow\">\n        <p className=\"ConnectWalletRow__publicKey\">\n          {displayName ?? shortenedAddress}\n        </p>\n        {isConnected || isConnectedElsewhere ? null : (\n          <button\n            disabled={disabled || isLoading || isConnectedElsewhere}\n            className=\"ConnectWalletRow__button\"\n            onClick={() => {\n              connectWallet('FAIL').catch((e) => {\n                console.log('Error connecting wallet', e);\n              });\n            }}\n          >\n            Verify\n          </button>\n        )}\n        {isConnected ? (\n          <p className=\"ConnectWalletRow__verified\">Verified</p>\n        ) : null}\n      </div>\n      {isConnectedElsewhere ? (\n        <>\n          <div className=\"ConnectWalletRow__messageRow\">\n            This wallet is already connected to another Notifi Hub account. If\n            you continue, this wallet can only be used to access this account.\n            You will lose access to the subscriptions in your other account.\n          </div>\n          <div className=\"ConnectWalletRow__bottomRow\">\n            <button\n              disabled={disabled || isLoading}\n              className=\"ConnectWalletRow__connectAnywayButton\"\n              onClick={() => {\n                connectWallet('DISCONNECT_AND_CLOSE_OLD_ACCOUNT').catch((e) => {\n                  console.log('Error connecting wallet', e);\n                });\n              }}\n            >\n              Verify anyway\n            </button>\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n", "import { WalletWithSignParams } from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport React from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { ConnectWalletRow } from './ConnectWalletRow';\n\nexport type WalletListInternalProps = Readonly<{\n  connectedWallets: ReadonlyArray<Types.ConnectedWalletFragmentFragment>;\n  ownedWallets: ReadonlyArray<WalletWithSignParams>;\n  disabled: boolean;\n}>;\n\nexport const WalletListInternal: React.FC<WalletListInternalProps> = ({\n  connectedWallets,\n  ownedWallets,\n  disabled,\n}: WalletListInternalProps) => {\n  return (\n    <ul>\n      {ownedWallets.map((wallet) => {\n        return (\n          <ConnectWalletRow\n            key={wallet.walletPublicKey}\n            {...wallet}\n            connectedWallets={connectedWallets}\n            disabled={disabled}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport const WalletList: React.FC = () => {\n  const {\n    params: { multiWallet },\n  } = useNotifiClientContext();\n  const { connectedWallets, loading } = useNotifiSubscriptionContext();\n  const owned = multiWallet?.ownedWallets;\n  if (owned === undefined || owned.length === 0) {\n    return null;\n  }\n\n  return (\n    <WalletListInternal\n      ownedWallets={owned}\n      connectedWallets={connectedWallets.filter(\n        (wallet): wallet is Types.ConnectedWalletFragmentFragment => !!wallet,\n      )}\n      disabled={loading}\n    />\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nexport type NotifiCardButtonProps = Readonly<{\n  classNames?: Readonly<{\n    button?: string;\n    label?: string;\n  }>;\n  buttonText: string;\n  disabled?: boolean;\n  onClick?: () => void;\n}>;\n\nconst NotifiCardButton: React.FC<NotifiCardButtonProps> = ({\n  buttonText,\n  classNames,\n  disabled,\n  onClick,\n}) => {\n  return (\n    <button\n      className={clsx('NotifiCardButton__button', classNames?.button)}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <span className={clsx('NotifiCardButtonn__label', classNames?.label)}>\n        {buttonText}\n      </span>\n    </button>\n  );\n};\n\nexport default NotifiCardButton;\n", "import clsx from 'clsx';\nimport {\n  useNotifiSubscribe,\n  useSubscriptionCard,\n} from 'notifi-react-card/lib/hooks';\nimport React, { useEffect, useMemo } from 'react';\n\nimport {\n  useNotifiClientContext,\n  useNotifiSubscriptionContext,\n} from '../../context';\nimport { DeepPartialReadonly } from '../../utils';\nimport { NotifiFooter, NotifiFooterProps } from '../NotifiFooter';\nimport { LoadingStateCard, LoadingStateCardProps } from '../common';\nimport { ErrorStateCard, ErrorStateCardProps } from '../common/ErrorStateCard';\nimport { FetchedStateCard, FetchedStateCardProps } from './FetchedStateCard';\nimport type { NotifiSubscribeButtonProps } from './NotifiSubscribeButton';\n\nexport type NotifiInputSeparators = {\n  emailSeparator?: {\n    classNames?: {\n      container: string;\n      content: string;\n    };\n    content: string;\n  };\n  smsSeparator?: {\n    classNames?: {\n      container: string;\n      content: string;\n    };\n    content: string;\n  };\n  telegramSeparator?: {\n    classNames?: {\n      container: string;\n      content: string;\n    };\n    content: string;\n  };\n};\n\nexport type NotifiInputFieldsText = {\n  label?: {\n    email?: string;\n    sms?: string;\n    telegram?: string;\n  };\n  placeholderText?: { email?: string; sms?: string; telegram?: string };\n};\n\nexport type NotifiSubscriptionCardProps = Readonly<{\n  copy?: DeepPartialReadonly<{\n    ErrorStateCard: ErrorStateCardProps['copy'];\n    FetchedStateCard: FetchedStateCardProps['copy'];\n    LoadingStateCard: LoadingStateCardProps['copy'];\n  }>;\n  classNames?: Readonly<{\n    container?: string;\n    ErrorStateCard?: ErrorStateCardProps['classNames'];\n    FetchedStateCard?: FetchedStateCardProps['classNames'];\n    LoadingStateCard?: LoadingStateCardProps['classNames'];\n    NotifiSubscribeButton?: NotifiSubscribeButtonProps['classNames'];\n    NotifiFooter?: NotifiFooterProps['classNames'];\n  }>;\n  loadingSpinnerSize?: string;\n  loadingRingColor?: string;\n  disclosureCopy?: string;\n  inputLabels?: NotifiInputFieldsText;\n  darkMode?: boolean;\n  cardId: string;\n  inputs?: Record<string, unknown>;\n  inputSeparators?: NotifiInputSeparators;\n  onClose?: () => void;\n}>;\n\nexport const NotifiSubscriptionCard: React.FC<\n  React.PropsWithChildren<NotifiSubscriptionCardProps>\n> = ({\n  classNames,\n  copy,\n  cardId,\n  darkMode,\n  inputLabels,\n  inputs = {},\n  inputSeparators,\n  disclosureCopy,\n  children,\n  loadingRingColor,\n  loadingSpinnerSize,\n  onClose,\n}) => {\n  const { isInitialized, reload, isAuthenticated } = useNotifiSubscribe({\n    targetGroupName: 'Default',\n  });\n  const { isUsingFrontendClient, frontendClient } = useNotifiClientContext();\n\n  const { isClientInitialized, isClientAuthenticated } = useMemo(() => {\n    return {\n      isClientInitialized: isUsingFrontendClient\n        ? !!frontendClient.userState\n        : isInitialized,\n      isClientAuthenticated: isUsingFrontendClient\n        ? frontendClient.userState?.status === 'authenticated'\n        : isAuthenticated,\n    };\n  }, [\n    isUsingFrontendClient,\n    isInitialized,\n    frontendClient.userState?.status,\n    isAuthenticated,\n  ]);\n\n  const { loading, render } = useNotifiSubscriptionContext();\n\n  const inputDisabled = loading || !isClientInitialized;\n\n  const card = useSubscriptionCard({\n    id: cardId,\n    type: 'SUBSCRIPTION_CARD',\n  });\n\n  let contents: React.ReactNode = null;\n\n  useEffect(() => {\n    const handler = () => {\n      // Ensure target is up-to-date after user returns to tab from 3rd party verification site\n      if (!isClientInitialized || !isClientAuthenticated) {\n        return;\n      }\n      if (isUsingFrontendClient) {\n        return frontendClient.fetchData().then(render);\n      }\n      reload();\n    };\n\n    window.addEventListener('focus', handler);\n    return () => {\n      window.removeEventListener('focus', handler);\n    };\n  }, [\n    isClientInitialized,\n    isAuthenticated,\n    isClientAuthenticated,\n    isUsingFrontendClient,\n    frontendClient,\n  ]);\n\n  switch (card.state) {\n    case 'loading':\n      contents = (\n        <LoadingStateCard\n          copy={copy?.LoadingStateCard}\n          spinnerSize={loadingSpinnerSize}\n          ringColor={loadingRingColor}\n          classNames={classNames?.LoadingStateCard}\n          onClose={onClose}\n        />\n      );\n      break;\n    case 'error':\n      contents = (\n        <ErrorStateCard\n          copy={copy?.ErrorStateCard}\n          classNames={classNames?.ErrorStateCard}\n          reason={card.reason}\n          onClose={onClose}\n        />\n      );\n      break;\n    case 'fetched':\n      contents = (\n        <FetchedStateCard\n          classNames={classNames?.FetchedStateCard}\n          copy={copy?.FetchedStateCard}\n          card={card}\n          inputs={inputs}\n          inputDisabled={inputDisabled}\n          inputLabels={inputLabels}\n          inputSeparators={inputSeparators}\n          onClose={onClose}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div\n      className={clsx(\n        darkMode ? 'notifi__dark' : 'notifi__light',\n        'NotifiSubscriptionCard__container',\n        classNames?.container,\n      )}\n      data-cy=\"notifiSubscriptionCardContainer\"\n    >\n      {children}\n      {contents}\n      <NotifiFooter\n        classNames={classNames?.NotifiFooter}\n        copy={{ disclosure: disclosureCopy }}\n      />\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport {\n  formatConversationDateTimestamp,\n  formatConversationStartTimestamp,\n} from '../../utils/datetimeUtils';\n\nexport type ChatMessageDateProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    content: string;\n    body: string;\n  }>;\n  createdDate: string;\n  isStartDate?: boolean;\n}>;\n\nexport const ChatMessageDate: React.FC<ChatMessageDateProps> = ({\n  classNames,\n  createdDate,\n  isStartDate = true,\n}) => {\n  return (\n    <div\n      className={clsx(\n        'NotifiIntercomChatMessageDate__container',\n        classNames?.container,\n      )}\n    >\n      <div\n        className={clsx(\n          'NotifiIntercomChatMessageDate__body',\n          classNames?.body,\n        )}\n      >\n        <div\n          className={clsx(\n            'NotifiIntercomChatMessageDate__content',\n            classNames?.content,\n          )}\n        >\n          {isStartDate\n            ? formatConversationStartTimestamp(createdDate)\n            : formatConversationDateTimestamp(createdDate)}\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import { format, parseISO } from 'date-fns';\n\nexport const sortByDate = <T>(\n  getDate: (item: T) => Date,\n  direction: 'ASC' | 'DESC',\n): ((a: T, b: T) => number) => {\n  return (a, b) => {\n    const aDate = getDate(a);\n    const bDate = getDate(b);\n\n    switch (direction) {\n      case 'ASC':\n        return aDate.getTime() - bDate.getTime();\n      case 'DESC':\n        return bDate.getTime() - aDate.getTime();\n    }\n  };\n};\n\nexport const formatConversationDateTimestamp = (date: string): string => {\n  try {\n    const parsedDate = parseISO(date);\n    const month = parsedDate.toLocaleString('default', { month: 'short' });\n    const day = format(parsedDate, 'd');\n\n    return `${month} ${day}`;\n  } catch {\n    return '';\n  }\n};\n\nexport const formatHourTimestamp = (date: string): string => {\n  const parsedDate = parseISO(date);\n  return format(parsedDate, 'H:mm');\n};\n\nexport const formatConversationStartTimestamp = (date: string): string => {\n  try {\n    const parsedDate = parseISO(date);\n    const month = parsedDate.toLocaleString('default', { month: 'short' });\n    const day = format(parsedDate, 'd');\n\n    const finalTimestamp = isToday(parsedDate) ? 'Today' : `${month} ${day}`;\n    return finalTimestamp;\n  } catch {\n    return '';\n  }\n};\n\nexport const isToday = (date: Date) => {\n  const today = new Date();\n\n  return (\n    date.getDate() == today.getDate() &&\n    date.getMonth() == today.getMonth() &&\n    date.getFullYear() == today.getFullYear()\n  );\n};\n", "import React from 'react';\nimport { Virtuoso } from 'react-virtuoso';\n\nimport { useNotifiSubscriptionContext } from '../../context';\nimport { useIntercomChat } from '../../hooks/useIntercomChat';\nimport { ChatMessageDate, ChatMessageDateProps } from './ChatMessageDate';\nimport {\n  ChatWindowIntroSection,\n  ChatWindowIntroSectionProps,\n} from './ChatWindowIntroSection';\nimport { MessageList, MessageListProps } from './MessageList';\nimport {\n  SendMessageSection,\n  SendMessageSectionProps,\n} from './SendMessageSection';\n\nexport type ChatMessageSectionProps = Readonly<{\n  classNames?: Readonly<{\n    chatWindowIntro: ChatWindowIntroSectionProps['classNames'];\n    messageList: MessageListProps['classNames'];\n    date: ChatMessageDateProps['classNames'];\n    sendMessageSection: SendMessageSectionProps['classNames'];\n  }>;\n  chatIntroQuestion: string;\n}>;\n\nexport const ChatMessageSection: React.FC<ChatMessageSectionProps> = ({\n  classNames,\n  chatIntroQuestion,\n}) => {\n  const { conversationId, userId } = useNotifiSubscriptionContext();\n  const {\n    conversation,\n    setIsScrolling,\n    setVisibleRange,\n    setAtTop,\n    isLoading,\n    hasNextPage,\n    sendConversationMessages,\n  } = useIntercomChat({\n    conversationId,\n    userId,\n  });\n\n  return (\n    <>\n      {conversation.feed.length === 0 ? (\n        <ChatWindowIntroSection\n          chatIntroQuestion={chatIntroQuestion}\n          classNames={classNames?.chatWindowIntro}\n          startDate={conversation.createdDate}\n        />\n      ) : (\n        <Virtuoso\n          //TODO: improvement to add the scrollSeekConfiguration property\n          atTopStateChange={setAtTop}\n          className=\"virtual-container\"\n          data={conversation.feed}\n          followOutput=\"auto\"\n          isScrolling={setIsScrolling}\n          rangeChanged={setVisibleRange}\n          itemContent={(index, feed) => {\n            const isFirstIndexOnLastPage = index === 0 && !hasNextPage;\n            return (\n              <div key={index}>\n                {isLoading ? (\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      padding: '10px',\n                    }}\n                  >\n                    Loading...\n                  </div>\n                ) : null}\n                {isFirstIndexOnLastPage && (\n                  <ChatWindowIntroSection\n                    classNames={classNames?.chatWindowIntro}\n                    startDate={conversation.createdDate}\n                    chatIntroQuestion={chatIntroQuestion}\n                    inVirtualContainerStyle={\n                      'ChatWindowIntro__virtualContainer'\n                    }\n                  />\n                )}\n                {index != 0 && !feed.isSameDate && (\n                  <ChatMessageDate\n                    classNames={classNames?.date}\n                    createdDate={feed.timestamp}\n                    isStartDate={false}\n                  />\n                )}\n                <MessageList classNames={classNames?.messageList} feed={feed} />\n              </div>\n            );\n          }}\n          style={{\n            flexGrow: 1,\n            scrollbarGutter: 'stable',\n            overflowY: 'scroll',\n          }}\n        />\n      )}\n      <SendMessageSection\n        classNames={classNames?.sendMessageSection}\n        sendConversationMessages={sendConversationMessages}\n      />\n    </>\n  );\n};\n", "import { Types } from '@notifi-network/notifi-graphql';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ListRange } from 'react-virtuoso';\n\nimport { useNotifiClientContext } from '../context';\nimport {\n  formatConversationDateTimestamp,\n  sortByDate,\n} from '../utils/datetimeUtils';\n\ntype MessageDirection = 'INCOMING' | 'OUTGOING';\n\ntype MessagesBlockFeedEntry = Readonly<{\n  type: 'MESSAGES_BLOCK';\n  direction: MessageDirection;\n  messages: Types.ConversationMessageFragment[];\n}>;\n\nexport type FeedEntry = {\n  id: string;\n  timestamp: string;\n  isSameDate: boolean | undefined;\n} & MessagesBlockFeedEntry;\n\ntype UseIntercomChatProps = Readonly<{\n  userId?: string;\n  conversationId: string;\n}>;\n\nconst MESSAGES_NUMBER = 5;\n\nexport const useIntercomChat = ({\n  conversationId,\n  userId,\n}: UseIntercomChatProps) => {\n  const [chatMessages, setChatMessages] = useState<\n    Types.ConversationMessageFragment[]\n  >([]);\n  const [endCursor, setEndCursor] = useState<string | undefined>();\n  const [hasNextPage, setHasNextPage] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [atTop, setAtTop] = useState<boolean>(false);\n  const [visibleRange, setVisibleRange] = useState<ListRange>({\n    startIndex: 0,\n    endIndex: 0,\n  });\n  const [isScrolling, setIsScrolling] = useState<boolean | null>();\n  const { client } = useNotifiClientContext();\n\n  useEffect(() => {\n    const intervalId = setInterval(function () {\n      client\n        .getConversationMessages({\n          first: 50,\n          getConversationMessagesInput: { conversationId },\n        })\n        .then((response) => {\n          if (Array.isArray(response.nodes)) {\n            const nodes = response.nodes;\n            const chatMessageIds = new Set(\n              chatMessages.map((message) => message.id),\n            );\n            const dedupeNewMessages = nodes.filter(\n              (node) => chatMessageIds.has(node.id) === false,\n            );\n            const dedupeMessages = [...dedupeNewMessages, ...chatMessages];\n            const sortedMessages = dedupeMessages.sort(\n              sortByDate((message) => new Date(message.createdDate), 'DESC'),\n            );\n            setChatMessages([...sortedMessages]);\n          }\n        });\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [chatMessages]);\n\n  const getConversationMessages = useCallback(\n    (first = MESSAGES_NUMBER) => {\n      setIsLoading(true);\n      if (conversationId) {\n        client\n          .getConversationMessages({\n            first,\n            after: endCursor,\n            getConversationMessagesInput: { conversationId },\n          })\n          .then((response) => {\n            if (Array.isArray(response.nodes)) {\n              setChatMessages([...chatMessages, ...response.nodes]);\n            }\n            if (response.pageInfo) {\n              setEndCursor(response.pageInfo.endCursor);\n              setHasNextPage(response.pageInfo.hasNextPage);\n            }\n            setIsLoading(false);\n          });\n      }\n    },\n    [conversationId, endCursor, chatMessages],\n  );\n\n  // initialization - load first batch of messages\n  useEffect(() => {\n    getConversationMessages();\n  }, []);\n\n  // load more messages when scrolling to the top\n  useEffect(() => {\n    if (hasNextPage && atTop && isScrolling && visibleRange.startIndex === 0) {\n      getConversationMessages();\n    }\n  }, [\n    getConversationMessages,\n    hasNextPage,\n    atTop,\n    isScrolling,\n    visibleRange.startIndex,\n  ]);\n\n  const conversation = useMemo(() => {\n    //put the conversation into message group\n    const messageGroups: Types.ConversationMessageFragment[][] = [];\n\n    let messages: Types.ConversationMessageFragment[] = [];\n\n    chatMessages?.forEach((message, index) => {\n      const nextMessage = chatMessages[index + 1];\n      const isSameUserId = message?.userId === nextMessage?.userId;\n      const isSameDate =\n        formatConversationDateTimestamp(message?.createdDate) ===\n        formatConversationDateTimestamp(nextMessage?.createdDate);\n      messages.unshift(message);\n      if (!isSameUserId || !isSameDate) {\n        messageGroups.unshift(messages);\n        messages = [];\n      }\n    });\n\n    const feed = messageGroups.map((messageGroup, index): FeedEntry => {\n      const firstMessage = messageGroup[0];\n\n      const isSameDate = () => {\n        if (messageGroups.length === 1 && index === 0) {\n          return false;\n        } else if (index >= 1) {\n          const prevMessageGroup = messageGroups[index - 1];\n          const prevGroupFirstMessage = prevMessageGroup[0];\n          return (\n            formatConversationDateTimestamp(firstMessage?.createdDate) ===\n            formatConversationDateTimestamp(prevGroupFirstMessage?.createdDate)\n          );\n        }\n      };\n\n      return {\n        isSameDate: isSameDate(),\n        direction: firstMessage?.userId === userId ? 'OUTGOING' : 'INCOMING',\n        id: firstMessage?.id,\n        messages: messageGroup,\n        timestamp: firstMessage?.createdDate,\n        type: 'MESSAGES_BLOCK',\n      };\n    });\n\n    return {\n      feed,\n      createdDate:\n        chatMessages?.[chatMessages.length - 1]?.createdDate ??\n        new Date().toISOString(),\n      lastMessage: chatMessages?.[0],\n    };\n  }, [chatMessages, conversationId]);\n\n  const sendConversationMessages = useCallback(\n    (message: string) => {\n      if (message === '') {\n        return;\n      } else {\n        client\n          .sendConversationMessages({\n            sendConversationMessageInput: {\n              conversationId,\n              message,\n            },\n          })\n          .then((response) => {\n            setChatMessages([response, ...chatMessages]);\n          });\n      }\n    },\n    [conversationId, chatMessages],\n  );\n\n  return {\n    conversation,\n    getConversationMessages,\n    setIsScrolling,\n    setVisibleRange,\n    setAtTop,\n    hasNextPage,\n    isLoading,\n    sendConversationMessages,\n  };\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { ChatMessageDate, ChatMessageDateProps } from './ChatMessageDate';\n\nexport type ChatWindowIntroSectionProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    content: string;\n    date: ChatMessageDateProps['classNames'];\n  }>;\n  startDate: string;\n  inVirtualContainerStyle?: string;\n  chatIntroQuestion: string;\n}>;\n\nexport const ChatWindowIntroSection: React.FC<\n  React.PropsWithChildren<ChatWindowIntroSectionProps>\n> = ({\n  classNames,\n  startDate,\n  children,\n  inVirtualContainerStyle,\n  chatIntroQuestion,\n}) => {\n  return (\n    <div\n      className={clsx(\n        'NotifiIntercomChatMessageSection__container',\n        inVirtualContainerStyle,\n        classNames?.container,\n      )}\n    >\n      <ChatMessageDate classNames={classNames?.date} createdDate={startDate} />\n      <div\n        className={clsx(\n          'NotifiIntercomChatMessageSectionIntro__content',\n          classNames?.content,\n        )}\n      >\n        {chatIntroQuestion}\n      </div>\n      {children}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { FeedEntry } from '../../hooks/useIntercomChat';\nimport { MessageGroup, MessageGroupProps } from './MessageGroup';\n\nexport type MessageListProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    messageGroup: MessageGroupProps['classNames'];\n    avatar: string;\n  }>;\n  feed: FeedEntry;\n}>;\n\nexport const MessageList: React.FC<MessageListProps> = ({\n  classNames,\n  feed,\n}) => {\n  const isIncoming = feed.direction === 'INCOMING';\n  const participantProfile = feed.messages[0].conversationParticipant?.profile;\n  return (\n    <div\n      className={clsx(\n        'NotifiIntercomChatMessageList__container',\n        classNames?.container,\n      )}\n    >\n      {isIncoming ? (\n        <div\n          className={clsx(\n            'NotifiIntercomChatMessageList__groupContainer',\n            classNames?.container,\n          )}\n        >\n          <img\n            src={\n              participantProfile?.avatarDataType === 'URL'\n                ? participantProfile.avatarData\n                : ''\n            }\n            onError={(e) => {\n              const img = e.target as HTMLImageElement;\n              img.style.display = 'none';\n            }}\n            className={clsx(\n              'NotifiIntercomChatMessage__avatar',\n              classNames?.avatar,\n            )}\n          />\n          <MessageGroup\n            classNames={classNames?.messageGroup}\n            messages={feed.messages}\n            direction={feed.direction}\n          />\n        </div>\n      ) : (\n        <>\n          <MessageGroup\n            classNames={classNames?.messageGroup}\n            messages={feed.messages}\n            direction={feed.direction}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n", "import { Types } from '@notifi-network/notifi-graphql';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { formatHourTimestamp } from '../../utils/datetimeUtils';\n\nexport type MessageGroupProps = Readonly<{\n  classNames?: Readonly<{\n    messageGroupContainer: string;\n    messageContainer: string;\n    messageBody: string;\n    timeStamp: string;\n    sender: string;\n  }>;\n  messages: Types.ConversationMessageFragment[];\n  direction: string;\n}>;\nexport const MessageGroup: React.FC<MessageGroupProps> = ({\n  classNames,\n  messages,\n  direction,\n}) => {\n  const isIncoming = direction === 'INCOMING';\n  return (\n    <div\n      className={clsx(\n        isIncoming\n          ? 'NotifiIntercomChatIncomingMessageGroup__container'\n          : 'NotifiIntercomChatOutgoingMessageGroup__container',\n        classNames?.messageGroupContainer,\n      )}\n    >\n      {messages.map((message, index) => {\n        return (\n          <div\n            className={clsx(\n              isIncoming\n                ? 'NotifiIntercomChatIncomingMessage__container'\n                : 'NotifiIntercomChatOutgoingMessage__container',\n              classNames?.messageContainer,\n            )}\n            key={index}\n          >\n            <div\n              key={index}\n              className={clsx(\n                isIncoming\n                  ? 'NotifiIntercomChatIncomingMessage__body'\n                  : 'NotifiIntercomChatOutgoingMessage__body',\n                classNames?.messageBody,\n              )}\n            >\n              {isIncoming && index === 0 ? (\n                <div\n                  className={clsx(\n                    'NotifiIntercomChatOutgoingMessage__sender',\n                    classNames?.sender,\n                  )}\n                >\n                  {message.conversationParticipant?.resolvedName}\n                </div>\n              ) : null}\n              <div key={index}>{message.message}</div>\n              <div\n                className={clsx(\n                  'NotifiIntercomChatOutgoingMessage__timeStamp',\n                  classNames?.timeStamp,\n                )}\n              >\n                {formatHourTimestamp(message.createdDate)}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport React, { useCallback, useState } from 'react';\n\nexport type SendMessageSectionProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    textarea: string;\n    button: string;\n  }>;\n  sendConversationMessages: (message: string) => void;\n}>;\n\nexport const SendMessageSection: React.FC<SendMessageSectionProps> = ({\n  classNames,\n  sendConversationMessages,\n}) => {\n  const [sendMessage, setSendMessage] = useState<string | undefined>(undefined);\n  const disabled =\n    sendMessage?.trim().length === 0 || sendMessage === undefined;\n\n  const handleSend = () => {\n    if (sendMessage) {\n      sendConversationMessages(sendMessage);\n      setSendMessage('');\n    }\n  };\n\n  const handleKeypressUp = useCallback(\n    (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (event.key === 'Enter' && !event.shiftKey && !disabled) {\n        handleSend();\n        event.preventDefault();\n      }\n    },\n    [handleSend],\n  );\n\n  return (\n    <div\n      className={clsx(\n        'NotifiIntercomSendMessageSection__container',\n        classNames?.container,\n      )}\n    >\n      <textarea\n        onKeyUp={(e) => handleKeypressUp(e)}\n        className={clsx(\n          'NotifiIntercomSendMessageSection__textarea',\n          classNames?.textarea,\n        )}\n        value={sendMessage}\n        onChange={(e) => {\n          setSendMessage(e.target.value ?? '');\n        }}\n        placeholder={'Write a message...'}\n      />\n      <button\n        disabled={disabled}\n        onClick={handleSend}\n        className={clsx(\n          'NotifiIntercomSendMessageSection__button',\n          classNames?.button,\n        )}\n      >\n        Send\n      </button>\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { useNotifiSubscriptionContext } from 'notifi-react-card/lib/context';\nimport React from 'react';\n\nimport { ChatIcon } from '../../assets/ChatIcon';\nimport { SettingIcon } from '../../assets/SettingIcon';\n\nexport type ChatWindowHeaderProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    content: string;\n  }>;\n  chatWindowHeaderContent: string;\n}>;\n\nexport const ChatWindowHeader: React.FC<ChatWindowHeaderProps> = ({\n  classNames,\n  chatWindowHeaderContent,\n}) => {\n  const { setIntercomCardView } = useNotifiSubscriptionContext();\n  const handleClick = () => {\n    setIntercomCardView({ state: 'settingView' });\n  };\n  return (\n    <div\n      className={clsx('NotifiIntercomHeader__container', classNames?.container)}\n    >\n      <div className={'NotifiIntercomHeader__leftContainer'}>\n        <ChatIcon width={25} height={24} />\n        <div\n          className={clsx('NotifiIntercomHeader__content', classNames?.content)}\n        >\n          {chatWindowHeaderContent}\n        </div>\n      </div>\n      <div\n        onClick={handleClick}\n        className={'NotifiIntercomChatWindow__settingIcon'}\n      >\n        <SettingIcon />\n      </div>\n    </div>\n  );\n};\n", "import React from 'react';\n\nexport type Props = React.SVGProps<SVGSVGElement>;\n\nexport const ChatIcon: React.FC<Props> = (props: Props) => {\n  return (\n    <svg\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M3.15311 3.40909C3.15311 2.07859 4.2317 1 5.5622 1H17.0455C18.376 1 19.4545 2.07859 19.4545 3.40909V6.81818C19.4545 8.14869 18.376 9.22727 17.0455 9.22727H4.96513C4.60464 9.22727 4.2455 9.27148 3.89577 9.35892L2.08876 9.81067C2.04981 9.82041 2.02716 9.81574 2.01212 9.8104C1.99287 9.80356 1.97002 9.78898 1.95023 9.76483C1.93043 9.74069 1.92062 9.71542 1.91769 9.6952C1.9154 9.67941 1.91526 9.65628 1.93245 9.62L2.72868 7.93906C3.00814 7.34909 3.15311 6.70441 3.15311 6.05159V3.40909Z\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M20.9831 16.0454C20.9831 14.7149 19.9045 13.6364 18.574 13.6364H7.09077C5.76027 13.6364 4.68168 14.7149 4.68168 16.0454V19.4545C4.68168 20.785 5.76027 21.8636 7.09078 21.8636H19.1711C19.5316 21.8636 19.8907 21.9078 20.2405 21.9953L22.0475 22.447C22.0864 22.4568 22.1091 22.4521 22.1241 22.4467C22.1434 22.4399 22.1662 22.4253 22.186 22.4012C22.2058 22.377 22.2156 22.3518 22.2185 22.3316C22.2208 22.3158 22.221 22.2926 22.2038 22.2564L21.4075 20.5754C21.1281 19.9854 20.9831 19.3408 20.9831 18.6879V16.0454Z\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      />\n      <mask id=\"path-3-inside-1_136_525\" fill=\"white\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.6362 17.75C11.6362 18.3776 12.1449 18.8864 12.7725 18.8864C13.4001 18.8864 13.9089 18.3776 13.9089 17.75C13.9089 17.1224 13.4001 16.6136 12.7725 16.6136C12.1449 16.6136 11.6362 17.1224 11.6362 17.75ZM16.1816 17.75C16.1816 18.3776 16.6904 18.8864 17.318 18.8864C17.9456 18.8864 18.4543 18.3776 18.4543 17.75C18.4543 17.1224 17.9456 16.6137 17.318 16.6137C16.6904 16.6137 16.1816 17.1224 16.1816 17.75ZM8.22709 18.8864C7.59949 18.8864 7.09073 18.3776 7.09073 17.75C7.09073 17.1224 7.59949 16.6136 8.22709 16.6136C8.85469 16.6136 9.36345 17.1224 9.36345 17.75C9.36345 18.3776 8.85469 18.8864 8.22709 18.8864Z\"\n        />\n      </mask>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.6362 17.75C11.6362 18.3776 12.1449 18.8864 12.7725 18.8864C13.4001 18.8864 13.9089 18.3776 13.9089 17.75C13.9089 17.1224 13.4001 16.6136 12.7725 16.6136C12.1449 16.6136 11.6362 17.1224 11.6362 17.75ZM16.1816 17.75C16.1816 18.3776 16.6904 18.8864 17.318 18.8864C17.9456 18.8864 18.4543 18.3776 18.4543 17.75C18.4543 17.1224 17.9456 16.6137 17.318 16.6137C16.6904 16.6137 16.1816 17.1224 16.1816 17.75ZM8.22709 18.8864C7.59949 18.8864 7.09073 18.3776 7.09073 17.75C7.09073 17.1224 7.59949 16.6136 8.22709 16.6136C8.85469 16.6136 9.36345 17.1224 9.36345 17.75C9.36345 18.3776 8.85469 18.8864 8.22709 18.8864Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M12.7725 20.8864C11.0404 20.8864 9.63618 19.4822 9.63618 17.75H13.6362C13.6362 17.273 13.2495 16.8864 12.7725 16.8864V20.8864ZM15.9089 17.75C15.9089 19.4822 14.5047 20.8864 12.7725 20.8864V16.8864C12.2956 16.8864 11.9089 17.273 11.9089 17.75H15.9089ZM12.7725 14.6136C14.5047 14.6136 15.9089 16.0178 15.9089 17.75H11.9089C11.9089 18.227 12.2956 18.6136 12.7725 18.6136V14.6136ZM9.63618 17.75C9.63618 16.0178 11.0404 14.6136 12.7725 14.6136V18.6136C13.2495 18.6136 13.6362 18.227 13.6362 17.75H9.63618ZM17.318 20.8864C15.5858 20.8864 14.1816 19.4822 14.1816 17.75H18.1816C18.1816 17.273 17.795 16.8864 17.318 16.8864V20.8864ZM20.4543 17.75C20.4543 19.4822 19.0501 20.8864 17.318 20.8864V16.8864C16.841 16.8864 16.4543 17.273 16.4543 17.75H20.4543ZM17.318 14.6137C19.0501 14.6137 20.4543 16.0178 20.4543 17.75H16.4543C16.4543 18.227 16.841 18.6137 17.318 18.6137V14.6137ZM14.1816 17.75C14.1816 16.0178 15.5858 14.6137 17.318 14.6137V18.6137C17.795 18.6137 18.1816 18.227 18.1816 17.75H14.1816ZM9.09073 17.75C9.09073 17.273 8.70406 16.8864 8.22709 16.8864V20.8864C6.49492 20.8864 5.09073 19.4822 5.09073 17.75H9.09073ZM8.22709 18.6136C8.70406 18.6136 9.09073 18.227 9.09073 17.75H5.09073C5.09073 16.0178 6.49492 14.6136 8.22709 14.6136V18.6136ZM7.36345 17.75C7.36345 18.227 7.75012 18.6136 8.22709 18.6136V14.6136C9.95926 14.6136 11.3635 16.0178 11.3635 17.75H7.36345ZM8.22709 16.8864C7.75012 16.8864 7.36345 17.273 7.36345 17.75H11.3635C11.3635 19.4822 9.95926 20.8864 8.22709 20.8864V16.8864Z\"\n        fill=\"currentColor\"\n        mask=\"url(#path-3-inside-1_136_525)\"\n      />\n    </svg>\n  );\n};\n", "import {\n  EventTypeItem,\n  IntercomCardConfigItemV1,\n} from '@notifi-network/notifi-frontend-client';\nimport { Types } from '@notifi-network/notifi-graphql';\nimport clsx from 'clsx';\nimport { useNotifiClientContext } from 'notifi-react-card/lib/context';\nimport { subscribeAlertByFrontendClient } from 'notifi-react-card/lib/utils';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useNotifiForm, useNotifiSubscriptionContext } from '../../context/';\nimport { SubscriptionData, useNotifiSubscribe } from '../../hooks';\nimport { LabelType } from '../../hooks/IntercomCardConfig';\nimport { chatConfiguration } from '../../utils/AlertConfiguration';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from '../subscription/NotifiSubscriptionCard';\nimport {\n  NotifiIntercomChatWindowContainer,\n  NotifiIntercomChatWindowContainerProps,\n} from './NotifiIntercomChatWindowContainer';\nimport { NotifiIntercomFTUNotificationTargetSection } from './NotifiIntercomFTUNotificationTargetSection';\nimport {\n  NotifiStartChatButton,\n  NotifiStartChatButtonProps,\n} from './NotifiStartChatButton';\nimport { SettingHeader, SettingHeaderProps } from './SettingHeader';\n\nexport type IntercomCardProps = Readonly<{\n  classNames?: Readonly<{\n    container?: string;\n    title?: string;\n    subtitle1?: string;\n    subtitle2?: string;\n    NotifiStartChatButton?: NotifiStartChatButtonProps['classNames'];\n    NotifiIntercomChatWindowContainer?: NotifiIntercomChatWindowContainerProps['classNames'];\n    NotifiIntercomSettingHeader: SettingHeaderProps['classNames'];\n    errorMessage: string;\n  }>;\n  inputLabels?: NotifiInputFieldsText;\n  inputs?: Record<string, string | undefined>;\n  inputSeparators?: NotifiInputSeparators;\n  data: IntercomCardConfigItemV1;\n}>;\n\ntype LabelsMap = Record<LabelType, string | null>;\n\nexport const IntercomCard: React.FC<\n  React.PropsWithChildren<IntercomCardProps>\n> = ({\n  classNames,\n  inputLabels,\n  inputs = {},\n  inputSeparators,\n  data,\n}: React.PropsWithChildren<IntercomCardProps>) => {\n  const [chatAlertErrorMessage, setChatAlertErrorMessage] =\n    useState<string>('');\n\n  const { instantSubscribe, isAuthenticated, isInitialized } =\n    useNotifiSubscribe({\n      targetGroupName: 'Intercom',\n    });\n\n  const { client, isUsingFrontendClient, frontendClient } =\n    useNotifiClientContext();\n\n  const { isClientInitialized, isClientAuthenticated } = useMemo(() => {\n    return {\n      isClientInitialized: isUsingFrontendClient\n        ? !!frontendClient.userState\n        : isInitialized,\n      isClientAuthenticated: isUsingFrontendClient\n        ? frontendClient.userState?.status === 'authenticated'\n        : isAuthenticated,\n    };\n  }, [isUsingFrontendClient, client, frontendClient]);\n\n  const subscribeAlert = useCallback(\n    async (\n      alertDetail: Readonly<{\n        eventType: EventTypeItem;\n        inputs: Record<string, unknown>;\n      }>,\n    ): Promise<SubscriptionData> => {\n      if (isUsingFrontendClient) {\n        return subscribeAlertByFrontendClient(frontendClient, alertDetail);\n      } else {\n        return instantSubscribe({\n          alertConfiguration: chatConfiguration(),\n          alertName: alertName,\n        });\n      }\n    },\n    [isUsingFrontendClient, frontendClient],\n  );\n\n  useEffect(() => {\n    if (isClientAuthenticated && isClientInitialized && hasChanges === false) {\n      checkForExistingTargetGroups();\n    }\n  }, [instantSubscribe, isClientAuthenticated, isClientInitialized]);\n\n  const {\n    alerts,\n    intercomCardView,\n    loading,\n    setConversationId,\n    setHasChatAlert,\n    setIntercomCardView,\n    setUserId,\n  } = useNotifiSubscriptionContext();\n\n  const {\n    formErrorMessages,\n    formState,\n    setEmail: setFormEmail,\n    setTelegram: setFormTelegram,\n    hasChanges,\n  } = useNotifiForm();\n\n  const { email, phoneNumber, telegram: telegramId } = formState;\n\n  const {\n    email: emailErrorMessage,\n    phoneNumber: smsErrorMessage,\n    telegram: telegramErrorMessage,\n  } = formErrorMessages;\n\n  const createSupportConversation = useCallback(() => {\n    if (isUsingFrontendClient) {\n      return frontendClient\n        .createSupportConversation(\n          inputs as Types.CreateSupportConversationMutationVariables,\n        )\n        .then((result) => {\n          result.createSupportConversation.participants?.forEach(\n            (participant) => {\n              if (participant?.conversationParticipantType === 'MEMBER') {\n                setUserId(participant.profile.id);\n              }\n            },\n          );\n          setConversationId(result.createSupportConversation.id);\n          setIntercomCardView({\n            state: 'chatWindowView',\n          });\n        });\n    }\n\n    return client.createSupportConversation().then((result) => {\n      result.participants.forEach((participant) => {\n        if (participant.conversationParticipantType === 'MEMBER') {\n          setUserId(participant.profile.id);\n        }\n      });\n      setConversationId(result.id);\n      setIntercomCardView({\n        state: 'chatWindowView',\n      });\n    });\n  }, [inputs]);\n\n  const checkForExistingTargetGroups = useCallback((): void => {\n    for (const alert of Object.values(alerts)) {\n      if (!alert) continue;\n      const { targetGroup } = alert;\n\n      const confirmedEmailTarget = targetGroup.emailTargets?.find(\n        (email) => email?.isConfirmed === true,\n      );\n\n      if (confirmedEmailTarget?.emailAddress) {\n        setFormEmail(confirmedEmailTarget.emailAddress);\n      }\n\n      const confirmedTelegramTarget = targetGroup.telegramTargets?.find(\n        (telegram) => telegram?.isConfirmed === true,\n      );\n\n      if (confirmedTelegramTarget?.telegramId) {\n        setFormTelegram(confirmedTelegramTarget?.telegramId);\n      }\n\n      if (confirmedEmailTarget || confirmedTelegramTarget) {\n        break;\n      }\n\n      const unconfirmedEmailTarget = targetGroup.emailTargets?.find(\n        (email) => email?.isConfirmed === false,\n      );\n\n      setFormEmail(unconfirmedEmailTarget?.emailAddress ?? '');\n      const unconfirmedTelegramTarget = targetGroup.telegramTargets?.find(\n        (telegram) => telegram?.isConfirmed === false,\n      );\n\n      setFormTelegram(unconfirmedTelegramTarget?.telegramId ?? '');\n\n      if (unconfirmedEmailTarget || unconfirmedTelegramTarget) {\n        break;\n      }\n    }\n  }, [alerts]);\n\n  const alertName = 'NOTIFI_CHAT_MESSAGES';\n  useEffect(() => {\n    if (\n      loading ||\n      !isClientInitialized ||\n      intercomCardView.state === 'settingView'\n    ) {\n      return;\n    }\n\n    const hasAlert = alerts[alertName] !== undefined;\n\n    setHasChatAlert(hasAlert);\n    if (hasAlert) {\n      createSupportConversation();\n    } else {\n      setIntercomCardView({\n        state: 'startChatView',\n      });\n    }\n  }, [alerts, loading, isClientInitialized]);\n\n  const hasErrors =\n    emailErrorMessage !== '' ||\n    smsErrorMessage !== '' ||\n    telegramErrorMessage !== '';\n  const disabled =\n    (email === '' && telegramId === '' && phoneNumber === '') || hasErrors;\n\n  const labels = data.labels;\n  const labelsValues = {} as LabelsMap;\n\n  labels.forEach((label) => {\n    labelsValues[label.type] = label.name;\n  });\n  const companySupportTitle =\n    labelsValues.ChatFTUTitle || 'Your Company Support';\n  const companySupportSubtitle =\n    labelsValues.ChatFTUSubTitle ||\n    'Start chatting with our team to get support. We’re here for you 24/7!';\n  const companySupportDescription =\n    labelsValues.ChatFTUDescription ||\n    'Get notifications for your support request';\n  const companyHeaderContent =\n    labelsValues.ChatBannerTitle || 'Company Support';\n  const chatIntroQuestion =\n    labelsValues.ChatIntroQuestion || 'What can we help you with today?';\n\n  const handleStartChatClick = async () => {\n    if (loading) {\n      return;\n    }\n    try {\n      await subscribeAlert({\n        eventType: {\n          type: 'createSupportConversation',\n          name: alertName,\n          sourceType: 'NOTIFI_CHAT',\n          filterType: 'NOTIFI_CHAT_MESSAGES',\n          alertFrequency: 'THREE_MINUTES',\n        },\n        inputs,\n      });\n      const result = await client.createSupportConversation();\n      setConversationId(result.id);\n      result.participants.forEach((participant) => {\n        if (participant.conversationParticipantType === 'MEMBER') {\n          setUserId(participant.profile.id);\n        }\n      });\n\n      setIntercomCardView({ state: 'chatWindowView' });\n    } catch (e) {\n      //TODO: use useErrorHandler hook instead of setTimeout to handle error messages\n      setChatAlertErrorMessage('An error occurred, please try again.');\n      setTimeout(() => {\n        setChatAlertErrorMessage('');\n      }, 5000);\n    }\n  };\n\n  let view = null;\n\n  switch (intercomCardView.state) {\n    case 'startChatView':\n      view = (\n        <>\n          <h1 className={clsx('NotifiIntercomCard__title', classNames?.title)}>\n            {companySupportTitle}\n          </h1>\n          <div\n            className={clsx(\n              'NotifiIntercomCard__subtitle1',\n              classNames?.subtitle1,\n            )}\n          >\n            {companySupportSubtitle}\n          </div>\n          <div\n            className={clsx(\n              'NotifiIntercomCard__subtitle2',\n              classNames?.subtitle2,\n            )}\n          >\n            {companySupportDescription}\n          </div>\n          <NotifiIntercomFTUNotificationTargetSection\n            data={data}\n            inputSeparators={inputSeparators}\n            inputTextFields={inputLabels}\n            inputs={inputs}\n          />\n          <label\n            className={clsx(\n              'NotifiEmailInput__errorMessage',\n              classNames?.errorMessage,\n            )}\n          >\n            {chatAlertErrorMessage}\n          </label>\n          <NotifiStartChatButton\n            classNames={classNames?.NotifiStartChatButton}\n            disabled={disabled}\n            onClick={handleStartChatClick}\n          />\n        </>\n      );\n      break;\n    case 'chatWindowView':\n      view = (\n        <NotifiIntercomChatWindowContainer\n          chatIntroQuestion={chatIntroQuestion}\n          chatWindowHeaderContent={companyHeaderContent}\n          classNames={classNames?.NotifiIntercomChatWindowContainer}\n        />\n      );\n      break;\n\n    case 'settingView':\n      view = (\n        <>\n          <SettingHeader classNames={classNames?.NotifiIntercomSettingHeader} />\n          <div className={'NotifiIntercomCardSettingContent__container'}>\n            <div\n              className={clsx(\n                'NotifiIntercomCard__subtitle2',\n                classNames?.subtitle2,\n              )}\n            >\n              {companySupportDescription}\n            </div>\n            <NotifiIntercomFTUNotificationTargetSection\n              data={data}\n              inputSeparators={inputSeparators}\n              inputTextFields={inputLabels}\n              inputs={inputs}\n            />\n            <label\n              className={clsx(\n                'NotifiEmailInput__errorMessage',\n                classNames?.errorMessage,\n              )}\n            >\n              {chatAlertErrorMessage}\n            </label>\n            <NotifiStartChatButton\n              classNames={classNames?.NotifiStartChatButton}\n              disabled={disabled}\n              onClick={handleStartChatClick}\n            />\n          </div>\n        </>\n      );\n      break;\n    case 'loadingView':\n      view = (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          Loading&#8230;\n        </div>\n      );\n      break;\n  }\n  return <>{view}</>;\n};\n", "import React from 'react';\n\nimport {\n  ChatMessageSection,\n  ChatMessageSectionProps,\n} from './ChatMessageSection';\nimport { ChatWindowHeader, ChatWindowHeaderProps } from './ChatWindowHeader';\nimport { SendMessageSectionProps } from './SendMessageSection';\n\nexport type NotifiIntercomChatWindowContainerProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    header?: ChatWindowHeaderProps['classNames'];\n    chatMessageSection?: ChatMessageSectionProps['classNames'];\n    sendMessageSection?: SendMessageSectionProps['classNames'];\n  }>;\n  chatIntroQuestion: string;\n  chatWindowHeaderContent: string;\n}>;\n\nexport const NotifiIntercomChatWindowContainer: React.FC<\n  React.PropsWithChildren<NotifiIntercomChatWindowContainerProps>\n> = ({\n  classNames,\n  chatWindowHeaderContent,\n  chatIntroQuestion,\n}: React.PropsWithChildren<NotifiIntercomChatWindowContainerProps>) => {\n  return (\n    <>\n      <ChatWindowHeader\n        classNames={classNames?.header}\n        chatWindowHeaderContent={chatWindowHeaderContent}\n      />\n      <ChatMessageSection\n        classNames={classNames?.chatMessageSection}\n        chatIntroQuestion={chatIntroQuestion}\n      />\n    </>\n  );\n};\n", "import { IntercomCardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { NotifiEmailInput, NotifiEmailInputProps } from '../NotifiEmailInput';\nimport { NotifiSmsInput, NotifiSmsInputProps } from '../NotifiSmsInput';\nimport {\n  NotifiTelegramInput,\n  NotifiTelegramInputProps,\n} from '../NotifiTelegramInput';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from '../subscription/NotifiSubscriptionCard';\nimport { NotifiToggleProps } from '../subscription/NotifiToggle';\n\nexport type NotifiIntercomFTUNotificationTargetSectionProps = Readonly<{\n  classNames?: Readonly<{\n    NotifiEmailInput?: NotifiEmailInputProps['classNames'];\n    NotifiSmsInput?: NotifiSmsInputProps['classNames'];\n    NotifiTelegramInput?: NotifiTelegramInputProps['classNames'];\n    container: string;\n    label: string;\n    toggle: NotifiToggleProps['classNames'];\n  }>;\n  data: IntercomCardConfigItemV1;\n  inputs: Record<string, unknown>;\n  inputTextFields?: NotifiInputFieldsText;\n  inputSeparators?: NotifiInputSeparators;\n}>;\n\nexport const NotifiIntercomFTUNotificationTargetSection: React.FC<\n  NotifiIntercomFTUNotificationTargetSectionProps\n> = ({ data, inputSeparators, classNames, inputTextFields }) => {\n  const allowedCountryCodes = [...data.contactInfo.sms.supportedCountryCodes];\n\n  return (\n    <div className={'NotifiSupportNotificationOption__container'}>\n      {data.contactInfo.email.active ? (\n        <NotifiEmailInput\n          disabled={false}\n          classNames={classNames?.NotifiEmailInput}\n          copy={{ label: inputTextFields?.label?.email }}\n          intercomEmailInputContainerStyle={\n            'NotifiIntercomEmailInput__container'\n          }\n          intercomEmailInputStyle={'NotifiIntercomEmailInput__input'}\n          intercomView={true}\n        />\n      ) : null}\n      {inputSeparators?.emailSeparator?.content ? (\n        <div\n          className={clsx(\n            'NotifiInputSeparator__container',\n            'NotifiIntercomInputSeparator__container',\n            inputSeparators?.emailSeparator?.classNames?.container,\n          )}\n        >\n          <div\n            className={clsx(\n              'NotifiInputSeparator__content',\n              inputSeparators.emailSeparator.classNames?.content,\n            )}\n          >\n            {inputSeparators?.emailSeparator?.content}\n          </div>\n        </div>\n      ) : null}\n      {data.contactInfo.sms.active ? (\n        <NotifiSmsInput\n          disabled={false}\n          classNames={classNames?.NotifiSmsInput}\n          allowedCountryCodes={allowedCountryCodes}\n          copy={{ label: inputTextFields?.label?.sms }}\n          intercomSmsInputContainerStyle={'NotifiIntercomSmsInput__container'}\n          intercomSmsInputStyle={'NotifiIntercomSmsInput__input'}\n          intercomSmsDropdownContainerStyle={\n            'NotifiIntercomSmsInput__dropdownContainer'\n          }\n          intercomSmsDropdownSelectStyle={\n            'NotifiIntercomSmsInput__dropdownSelect'\n          }\n          intercomView={true}\n        />\n      ) : null}\n      {inputSeparators?.smsSeparator?.content ? (\n        <div\n          className={clsx(\n            'NotifiInputSeparator__container',\n            'NotifiIntercomInputSeparator__container',\n            inputSeparators?.smsSeparator?.classNames?.container,\n          )}\n        >\n          <div\n            className={clsx(\n              'NotifiInputSeparator__content',\n              inputSeparators.smsSeparator.classNames?.content,\n            )}\n          >\n            {inputSeparators?.smsSeparator?.content}\n          </div>\n        </div>\n      ) : null}\n      {data.contactInfo.telegram.active ? (\n        <NotifiTelegramInput\n          disabled={false}\n          classNames={classNames?.NotifiTelegramInput}\n          copy={{ label: inputTextFields?.label?.telegram }}\n          intercomTelegramInputContainerStyle={\n            'NotifiIntercomTelegramInput__container'\n          }\n          intercomTelegramInputStyle={'NotifiIntercomTelegramInput__input'}\n          intercomView={true}\n        />\n      ) : null}\n    </div>\n  );\n};\n", "import clsx from 'clsx';\nimport { useNotifiSubscriptionContext } from 'notifi-react-card/lib/context';\nimport React from 'react';\n\nexport type NotifiStartChatButtonProps = Readonly<{\n  classNames?: Readonly<{\n    button?: string;\n    label?: string;\n  }>;\n  disabled: boolean;\n  onClick: () => void;\n}>;\n\nexport const NotifiStartChatButton: React.FC<NotifiStartChatButtonProps> = ({\n  classNames,\n  disabled,\n  onClick,\n}) => {\n  const { intercomCardView } = useNotifiSubscriptionContext();\n  return (\n    <button\n      disabled={disabled}\n      className={clsx('NotifiStartChatButton__button', classNames?.button)}\n      onClick={onClick}\n    >\n      <span className={clsx('NotifiStartChatButton__label', classNames?.label)}>\n        {intercomCardView.state === 'settingView'\n          ? 'Save Changes'\n          : 'Start Chatting'}\n      </span>\n    </button>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { BackArrowIcon } from '../../assets/BackArrowIcon';\nimport { useNotifiSubscriptionContext } from '../../context';\n\nexport type SettingHeaderProps = Readonly<{\n  classNames?: Readonly<{\n    container: string;\n    content: string;\n  }>;\n}>;\n\nexport const SettingHeader: React.FC<SettingHeaderProps> = ({ classNames }) => {\n  const { setIntercomCardView } = useNotifiSubscriptionContext();\n  const handleClick = () => {\n    setIntercomCardView({ state: 'chatWindowView' });\n  };\n  return (\n    <div\n      className={clsx('NotifiIntercomHeader__container', classNames?.container)}\n    >\n      <div className={'NotifiIntercomHeader__leftContainer'}>\n        <div\n          onClick={handleClick}\n          className={'NotifiIntercomSettingHeader__backArrow'}\n        >\n          <BackArrowIcon />\n        </div>\n        <div\n          className={clsx('NotifiIntercomHeader__content', classNames?.content)}\n        >\n          Settings\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import React from 'react';\n\nimport {\n  NotifiFormProvider,\n  NotifiSubscriptionContextProvider,\n  useNotifiClientContext,\n} from '../../context';\nimport type { ErrorStateCardProps } from '../common';\nimport type { LoadingStateCardProps } from '../common';\nimport {\n  NotifiInputFieldsText,\n  NotifiInputSeparators,\n} from '../subscription/NotifiSubscriptionCard';\nimport { NotifiIntercomCardContainer } from './NotifiIntercomCardContainer';\nimport { NotifiIntercomChatWindowContainerProps } from './NotifiIntercomChatWindowContainer';\nimport type { NotifiStartChatButtonProps } from './NotifiStartChatButton';\nimport { SettingHeaderProps } from './SettingHeader';\n\nexport type NotifiIntercomCardProps = Readonly<{\n  classNames?: Readonly<{\n    container?: string;\n    title?: string;\n    subtitle1?: string;\n    subtitle2?: string;\n    ErrorStateCard?: ErrorStateCardProps['classNames'];\n    LoadingStateCard?: LoadingStateCardProps['classNames'];\n    NotifiStartChatButton?: NotifiStartChatButtonProps['classNames'];\n    NotifiIntercomChatWindowContainer?: NotifiIntercomChatWindowContainerProps['classNames'];\n    NotifiIntercomSettingHeader: SettingHeaderProps['classNames'];\n    errorMessage: string;\n  }>;\n  inputLabels?: NotifiInputFieldsText;\n  darkMode?: boolean;\n  inputs?: Record<string, string | undefined>;\n  inputSeparators?: NotifiInputSeparators;\n  cardId: string;\n}>;\n\nexport const NotifiIntercomCard: React.FC<\n  React.PropsWithChildren<NotifiIntercomCardProps>\n> = (props: React.PropsWithChildren<NotifiIntercomCardProps>) => {\n  const { params } = useNotifiClientContext();\n\n  return (\n    <NotifiSubscriptionContextProvider {...params}>\n      <NotifiFormProvider>\n        <NotifiIntercomCardContainer {...props} />\n      </NotifiFormProvider>\n    </NotifiSubscriptionContextProvider>\n  );\n};\n", "import clsx from 'clsx';\nimport React from 'react';\n\nimport { useIntercomCard } from '../../hooks/useIntercomCard';\nimport { ErrorStateCard, LoadingStateCard } from '../common';\nimport { IntercomCard } from './IntercomCard';\nimport { NotifiIntercomCardProps } from './NotifiIntercomCard';\n\nexport const NotifiIntercomCardContainer: React.FC<\n  React.PropsWithChildren<NotifiIntercomCardProps>\n> = ({\n  classNames,\n  darkMode,\n  inputLabels,\n  inputs = {},\n  inputSeparators,\n  children,\n  cardId,\n}: React.PropsWithChildren<NotifiIntercomCardProps>) => {\n  let contents: React.ReactNode = null;\n  const card = useIntercomCard(cardId);\n\n  switch (card.state) {\n    case 'loading':\n      contents = <LoadingStateCard classNames={classNames?.LoadingStateCard} />;\n      break;\n    case 'error':\n      contents = (\n        <ErrorStateCard\n          classNames={classNames?.ErrorStateCard}\n          reason={card.reason}\n        />\n      );\n      break;\n    case 'fetched':\n      contents = (\n        <IntercomCard\n          data={card.data}\n          inputs={inputs}\n          inputLabels={inputLabels}\n          inputSeparators={inputSeparators}\n          classNames={classNames}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div\n      className={clsx(\n        darkMode ? 'notifi__dark' : 'notifi__light',\n        'NotifiIntercomCard__container',\n        classNames?.container,\n      )}\n    >\n      {children}\n      {contents}\n    </div>\n  );\n};\n", "import { IntercomCardConfigItemV1 } from '@notifi-network/notifi-frontend-client';\nimport { useEffect, useState } from 'react';\n\nimport { useNotifiClientContext } from '../context';\n\nexport type Data = IntercomCardConfigItemV1;\n\nexport type LoadingState = Readonly<{\n  state: 'loading';\n}>;\n\nexport type FetchedState = Readonly<{\n  state: 'fetched';\n  data: Data;\n}>;\n\nexport type ErrorState = Readonly<{\n  state: 'error';\n  reason: unknown;\n}>;\n\nexport type IntercomCardState = LoadingState | FetchedState | ErrorState;\n\nexport const useIntercomCard = (cardId: string): IntercomCardState => {\n  const [state, setState] = useState<IntercomCardState>({\n    state: 'loading',\n  });\n\n  const { client, isUsingFrontendClient, frontendClient } =\n    useNotifiClientContext();\n\n  useEffect(() => {\n    setState({ state: 'loading' });\n    let card: IntercomCardConfigItemV1 | undefined;\n    (isUsingFrontendClient ? frontendClient : client)\n      .fetchSubscriptionCard({\n        type: 'INTERCOM_CARD',\n        id: cardId,\n      })\n      .then((result) => {\n        if ('dataJson' in result) {\n          if (!result.dataJson) {\n            return Promise.reject(new Error('Failed to fetch data'));\n          }\n          card = JSON.parse(result.dataJson);\n        } else if ('version' in result) {\n          card = result as IntercomCardConfigItemV1;\n        }\n\n        if (card?.version !== 'IntercomV1') {\n          return Promise.reject(new Error('Unsupported config format'));\n        }\n\n        setState({\n          state: 'fetched',\n          data: card,\n        });\n      })\n      .catch((error: unknown) => {\n        setState({\n          state: 'error',\n          reason: error,\n        });\n      });\n  }, [cardId]);\n\n  return state;\n};\n", "export const PUBLISH = 0 as const\nexport type PUBLISH = typeof PUBLISH\n\nexport const SUBSCRIBE = 1 as const\nexport type SUBSCRIBE = typeof SUBSCRIBE\n\nexport const RESET = 2 as const\nexport type RESET = typeof RESET\n\nexport const VALUE = 4 as const\nexport type VALUE = typeof VALUE\n", "/**\n * Utils includes\n * - a handful of functional utilities inspired by or taken from the [Ramda library](https://ramdajs.com/);\n * - TypeScript crutches - the [[tup]] function.\n *\n * Use these for your convenience - they are here so that urx is zero-dependency package.\n *\n * @packageDocumentation\n */\n\n/** @internal */\nexport interface Proc {\n  (): any\n}\n\n/**\n * Performs left to right composition of two functions.\n */\nexport function compose<I, A, R>(a: (arg: A) => R, b: (arg: I) => A): (arg: I) => R {\n  return (arg: I) => a(b(arg))\n}\n\n/**\n * Takes a value and applies a function to it.\n */\nexport function thrush<I, K>(arg: I, proc: (arg: I) => K) {\n  return proc(arg)\n}\n\n/**\n * Takes a 2 argument function and partially applies the first argument.\n */\nexport function curry2to1<T, K, R>(proc: (arg1: T, arg2: K) => R, arg1: T): (arg2: K) => R {\n  return arg2 => proc(arg1, arg2)\n}\n\n/**\n * Takes a 1 argument function and returns a function which when called, executes it with the provided argument.\n */\nexport function curry1to0<T, R>(proc: (arg: T) => R, arg: T): () => R {\n  return () => proc(arg)\n}\n\n/**\n * Returns a function which extracts the property from from the passed object.\n */\nexport function prop(property: string) {\n  return (object: any) => object[property]\n}\n\n/**\n * Calls callback with the first argument, and returns it.\n */\nexport function tap<T>(arg: T, proc: (arg: T) => any): T {\n  proc(arg)\n  return arg\n}\n\n/**\n *  Utility function to help typescript figure out that what we pass is a tuple and not a generic array.\n *  Taken from (this StackOverflow tread)[https://stackoverflow.com/questions/49729550/implicitly-create-a-tuple-in-typescript/52445008#52445008]\n */\nexport function tup<T extends Array<any>>(...args: T): T {\n  return args\n}\n\n/**\n * Calls the passed function.\n */\nexport function call(proc: Proc) {\n  proc()\n}\n\n/**\n * returns a function which when called always returns the passed value\n */\nexport function always<T>(value: T) {\n  return () => value\n}\n\n/**\n * returns a function which calls all passed functions in the passed order.\n * joinProc does not pass arguments or collect return values.\n */\nexport function joinProc(...procs: Proc[]) {\n  return () => {\n    procs.map(call)\n  }\n}\n\nexport function noop() {}\n", "/**\n * urx Actions operate on streams - `publish` publishes data in a stream, and `subscribe` attaches a subscription to a stream.\n * @packageDocumentation\n */\nimport { PUBLISH, RESET, SUBSCRIBE, VALUE } from './constants'\nimport { curry2to1 } from './utils'\n\n/**\n * A Publisher is the **input end** of a Stream. The [[publish]] action publishes values in publishers.\n * @typeParam T the type of values to be published.\n */\nexport interface Publisher<T> {\n  /** @internal */\n  (action: PUBLISH, value: T): void\n}\n\n/**\n * An Emitter is the **output end** of a Stream. The [[subscribe]] action binds {@link Subscription | subscriptions} to emitters.\n * @typeParam T the type of values that will be emitted.\n */\nexport interface Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE, subscription: Subscription<T>): Unsubscribe\n  /** @internal */\n  (action: RESET): void\n}\n\n/**\n * Subscriptions are bound to Emitters with the [[subscribe]] action, and get called with the new values.\n * @typeParam T the Emitter value type.\n */\nexport interface Subscription<T> {\n  (value: T): any\n}\n\n/**\n * Subscribe-like actions return unsubscribe handles of the Unsubscribe type, which, when called, unbind the subscription.\n */\nexport interface Unsubscribe {\n  (): void\n}\n\n/**\n * Streams present both the input and the output ends of a stream.\n * A single stream instance can be both subscribed to and published in.\n */\nexport interface Stream<T> extends Publisher<T>, Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE | PUBLISH | RESET): any // fix for bug with pipe + connect\n}\n\n/**\n * Just like {@link Stream | streams}, stateful streams present both input and output ends of a stream.\n * A single stream instance can be both subscribed to and published in.\n * Stateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n * [[getValue]] can be used to extract value from stateful streams.\n */\nexport interface StatefulStream<T> extends Publisher<T>, Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE | PUBLISH | RESET | VALUE): any // fix for bug with pipe + connect\n  // StatefulStream should extend rather then duplicate the signature, but this somehow causes a bug in TS\n}\n\n/**\n * Subscribes the specified [[Subscription]] to the updates from the Emitter.\n * The emitter calls the subscription with the new data each time new data is published into it.\n *\n * ```ts\n * const foo = stream<number>();\n * subscribe(foo, (value) => console.log(value));\n * ```\n *\n * @returns an [[Unsubscribe]] handle  - calling it will unbind the subscription from the emitter.\n *```ts\n * const foo = stream<number>();\n * const unsub = subscribe(foo, (value) => console.log(value));\n * unsub();\n *```\n */\nexport function subscribe<T>(emitter: Emitter<T>, subscription: Subscription<T>): Unsubscribe {\n  return emitter(SUBSCRIBE, subscription)\n}\n\n/**\n * Publishes the value into the passed [[Publisher]].\n *\n * ```ts\n * const foo = stream<number>();\n * publish(foo, 42);\n * ```\n */\nexport function publish<T>(publisher: Publisher<T>, value: T) {\n  publisher(PUBLISH, value)\n}\n\n/**\n * Clears all subscriptions from the [[Emitter]].\n * ```ts\n * const foo = stream<number>();\n * subscribe(foo, (value) => console.log(value));\n * reset(foo);\n * publish(foo, 42);\n * ```\n */\nexport function reset(emitter: Emitter<any>) {\n  emitter(RESET)\n}\n\n/**\n * Extracts the current value from a stateful stream. Use it only as an escape hatch, as it violates the concept of reactive programming.\n * ```ts\n * const foo = statefulStream(42);\n * console.log(getValue(foo));\n * ```\n */\nexport function getValue<T>(depot: StatefulStream<T>): T {\n  return depot(VALUE)\n}\n\n/**\n * Connects two streams - any value emitted from the emitter will be published in the publisher.\n * ```ts\n * const foo = stream<number>();\n * const bar = stream<number>();\n * subscribe(bar, (value) => console.log(`Bar emitted ${value}`));\n *\n * connect(foo, bar);\n * publish(foo);\n * ```\n * @returns an [[Unsubscribe]] handle which will disconnect the two streams.\n */\nexport function connect<T>(emitter: Emitter<T>, publisher: Publisher<T>) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH))\n}\n\n/**\n * Executes the passed subscription at most once, for the next emit from the emitter.\n * ```ts\n * const foo = stream<number>()\n * handleNext(foo, value => console.log(value)) // called once, with 42\n * publish(foo, 42)\n * publish(foo, 43)\n * ```\n * @returns an [[Unsubscribe]] handle to unbind the subscription if necessary.\n */\nexport function handleNext<T>(emitter: Emitter<T>, subscription: Subscription<T>) {\n  const unsub = emitter(SUBSCRIBE, value => {\n    unsub()\n    subscription(value)\n  })\n  return unsub\n}\n", "/**\n * Streams are the basic building blocks of a reactive system. Think of them as the system permanent \"data tubes\".\n *\n * A stream acts as both an [[Emitter]] and [[Publisher]]. Each stream can have multiple {@link Subscription | Subscriptions}.\n *\n * urx streams are either **stateless** or **stateful**.\n * Stateless streams emit data to existing subscriptions when published, without keeping track of it.\n * Stateful streams remember the last published value and immediately publish it to new subscriptions.\n *\n * ```ts\n * import { stream, statefulStream, publish, subscribe } from \"@virtuoso.dev/urx\";\n *\n * // foo is a stateless stream\n * const foo = stream<number>();\n *\n * publish(foo, 42);\n * // this subsription will not be called...\n * subscribe(foo, (value) => console.log(value));\n * // it will only catch published values after it\n * publish(foo, 43);\n *\n * // stateful streams always start with an initial value\n * const bar = statefulStream(42);\n *\n * // subscribing to a stateful stream\n * // immediately calls the subscription with the current value\n * subscribe(bar, (value) => console.log(value));\n *\n * // subsequent publishing works just like stateless streams\n * publish(bar, 43);\n * ```\n * @packageDocumentation\n */\n\nimport { Emitter, StatefulStream, Stream, Subscription, Unsubscribe, subscribe, connect } from './actions'\nimport { RESET, PUBLISH, SUBSCRIBE, VALUE } from './constants'\nimport { tap, noop } from './utils'\n\n/**\n * Constructs a new stateless stream.\n * ```ts\n * const foo = stream<number>();\n * ```\n * @typeParam T the type of values to publish in the stream.\n * @returns a [[Stream]]\n */\nexport function stream<T>(): Stream<T> {\n  const subscriptions = [] as Subscription<T>[]\n\n  return ((action: PUBLISH | SUBSCRIBE | RESET, arg: any) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length)\n        return\n      case SUBSCRIBE:\n        subscriptions.push(arg)\n        return () => {\n          const indexOf = subscriptions.indexOf(arg)\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1)\n          }\n        }\n      case PUBLISH:\n        subscriptions.slice().forEach(subscription => {\n          subscription(arg as T)\n        })\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  }) as Stream<T>\n}\n\n/**\n * Constructs a new stateful stream.\n * ```ts\n * const foo = statefulStream(42);\n * ```\n * @param initial the initial value in the stream.\n * @typeParam T the type of values to publish in the stream. If omitted, the function infers it from the initial value.\n * @returns a [[StatefulStream]]\n */\nexport function statefulStream<T>(initial: T): StatefulStream<T> {\n  let value: T = initial\n  const innerSubject = stream<T>()\n\n  return ((action: PUBLISH | SUBSCRIBE | RESET | VALUE, arg: any) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg as Subscription<T>\n        subscription(value)\n        break\n      case PUBLISH:\n        value = arg as T\n        break\n      case VALUE:\n        return value\n    }\n    return innerSubject(action as any, arg)\n  }) as StatefulStream<T>\n}\n\n/**\n * Event handlers are special emitters which can have **at most one active subscription**.\n * Subscribing to an event handler unsubscribes the previous subscription, if present.\n * ```ts\n * const foo = stream<number>();\n * const fooEvent = eventHandler(foo);\n *\n * // will be called once with 42\n * subscribe(fooEvent, (value) => console.log(`Sub 1 ${value}`));\n * publish(foo, 42);\n *\n * // unsubscribes sub 1\n * subscribe(fooEvent, (value) => console.log(`Sub 2 ${value}`));\n * publish(foo, 43);\n * ```\n * @param emitter the source emitter.\n * @returns the single-subscription emitter.\n */\nexport function eventHandler<T>(emitter: Emitter<T>) {\n  let unsub: Unsubscribe | undefined\n  let currentSubscription: any\n  let cleanup = () => unsub && unsub()\n\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<T>) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return\n          }\n          cleanup()\n          currentSubscription = subscription\n          unsub = subscribe(emitter, subscription!)\n          return unsub\n        } else {\n          cleanup()\n          return noop\n        }\n      case RESET:\n        cleanup()\n        currentSubscription = null\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<T>\n}\n\n/**\n * Creates and connects a \"junction\" stream to the specified emitter. Often used with [[pipe]], to avoid the multiple evaluation of operator sets.\n *\n * ```ts\n * const foo = stream<number>();\n *\n * const fooX2 = pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`multiplying ${value}`);\n *     return value * 2;\n *   })\n * );\n *\n * subscribe(fooX2, (value) => console.log(value));\n * subscribe(fooX2, (value) => console.log(value));\n *\n * publish(foo, 42); // executes the map operator twice for each subscription.\n *\n * const sharedFooX2 = streamFromEmitter(pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`shared multiplying ${value}`);\n *     return value * 2;\n *   })\n * ));\n *\n * subscribe(sharedFooX2, (value) => console.log(value));\n * subscribe(sharedFooX2, (value) => console.log(value));\n *\n * publish(foo, 42);\n *```\n * @returns the resulting stream.\n */\nexport function streamFromEmitter<T>(emitter: Emitter<T>): Stream<T> {\n  return tap(stream<T>(), stream => connect(emitter, stream))\n}\n\n/**\n * Creates and connects a \"junction\" stateful stream to the specified emitter. Often used with [[pipe]], to avoid the multiple evaluation of operator sets.\n *\n * ```ts\n * const foo = stream<number>();\n *\n * const fooX2 = pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`multiplying ${value}`);\n *     return value * 2;\n *   })\n * );\n *\n * subscribe(fooX2, (value) => console.log(value));\n * subscribe(fooX2, (value) => console.log(value));\n *\n * publish(foo, 42); // executes the map operator twice for each subscription.\n *\n * const sharedFooX2 = statefulStreamFromEmitter(pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`shared multiplying ${value}`);\n *     return value * 2;\n *   })\n * ), 42);\n *\n * subscribe(sharedFooX2, (value) => console.log(value));\n * subscribe(sharedFooX2, (value) => console.log(value));\n *\n * publish(foo, 42);\n *```\n * @param initial the initial value in the stream.\n * @returns the resulting stateful stream.\n */\nexport function statefulStreamFromEmitter<T>(emitter: Emitter<T>, initial: T): StatefulStream<T> {\n  return tap(statefulStream(initial), stream => connect(emitter, stream))\n}\n", "/**\n *\n * Stream values can be transformed and controlled by {@link pipe | **piping**} through **operators**.\n * urx includes several operators like [[map]], [[filter]], [[scan]], and [[throttleTime]].\n * The [[withLatestFrom]] operator allows the combination of values from other streams.\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // create an emitter that first adds 2 to the passed value, then multiplies it by * 2\n * const bar = pipe(foo, map(value => value + 2), map(value => value * 2))\n * subscribe(bar, value => console.log(value))\n * publish(foo, 2) // outputs 8\n * ```\n *\n * ### Implementing Custom Operators\n * To implement your own operators, implement the [[Operator]] interface.\n * @packageDocumentation\n */\nimport { compose, thrush } from './utils'\nimport { Emitter, subscribe, Subscription, reset } from './actions'\nimport { SUBSCRIBE, RESET } from './constants'\n\n/**\n * Operators can transform and control the flow of values.\n * [[pipe]] is used to transform one Emitter into another by stacking operators to its values.\n * To build your own operator that looks like the built-in ones,\n * create a function which returns an operator.\n * The following custom operator multiplies the passed value:\n *\n * ```ts\n * function multiplyBy(multiplier: number): Operator<number> {\n *  return done => value => done(value * multiplier)\n * }\n *\n * const foo = stream<number>()\n * const multipliedFoo = pipe(foo, multiplyBy(3))\n * subscribe(multipliedFoo, value => console.log(value))\n * publish(foo, 42)\n * ```\n */\nexport interface Operator<Input, Output = Input> {\n  (done: (value: Output) => void): (value: Input) => void\n}\n\n/** @internal */\ntype CombineOperatorsReturnType<I, O> = (subscriber: (value: O) => void) => (value: I) => void\n\n/** @internal */\nfunction combineOperators<I>(...operators: Operator<any, any>[]): CombineOperatorsReturnType<I, any> {\n  return (subscriber: (value: any) => void) => {\n    return operators.reduceRight(thrush, subscriber)\n  }\n}\n\n/** @internal */\ntype O<I, OP> = Operator<I, OP>\n\n/**\n * Creates a new emitter from the passed one by piping its values through one or more operators.\n * Operators can perform various actions like filter values, pull values from other emitters, or compute new values.\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // create an emitter that first adds 2 to the passed value, then multiplies it by * 2\n * const bar = pipe(foo, map(value => value + 2), map(value => value * 2))\n * subscribe(bar, value => console.log(value))\n * publish(foo, 2) // outputs 8\n * ```\n * #### Sharing Subscription Calculations\n *\n * `pipe` acts as a proxy for the source emitter, and re-runs the operators for each subscription to the derived emitter.\n * Use [[streamFromEmitter]] or [[statefulStreamFromEmitter]] to avoid that.\n */\nexport function pipe<T>(s: Emitter<T>): Emitter<T> // prettier-ignore\nexport function pipe<T, O1>(s: Emitter<T>, o1: O<T, O1>): Emitter<O1> // prettier-ignore\nexport function pipe<T, O1, O2>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>]): Emitter<O2> // prettier-ignore\nexport function pipe<T, O1, O2, O3>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>]): Emitter<O3> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>]): Emitter<O4> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>]): Emitter<O5> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5, O6>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>, O<O5, O6>]): Emitter<O6> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5, O6, O7>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>, O<O5, O6>, O<O6, O7>]): Emitter<O7> // prettier-ignore\nexport function pipe<T>(source: Emitter<T>, ...operators: O<any, any>[]): Emitter<any> {\n  // prettier-ignore\n  const project = combineOperators(...operators)\n  return ((action: SUBSCRIBE | RESET, subscription: Subscription<any>) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription))\n      case RESET:\n        reset(source)\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  }) as Emitter<any>\n}\n\n/**\n * A function which determines if two values are equal.\n * Implement custom comparators when [[distinctUntilChanged]] needs to work on non-primitive objects.\n * @returns true if values should be considered equal.\n */\nexport interface Comparator<T> {\n  (previous: T, next: T): boolean\n}\n\n/**\n * The default [[Comparator]] for [[distinctUntilChanged]] and [[duc]].\n */\nexport function defaultComparator<T>(previous: T, next: T) {\n  return previous === next\n}\n\n/**\n * Filters out identical values. Pass an optional [[Comparator]] if you need to filter non-primitive values.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, distinctUntilChanged()),\n *  console.log\n * ) // will be called only once\n *\n * publish(foo, 42)\n * publish(foo, 42)\n * ```\n */\nexport function distinctUntilChanged<T>(comparator: Comparator<T> = defaultComparator): Operator<T> {\n  let current: T\n  return done => next => {\n    if (!comparator(current, next)) {\n      current = next\n      done(next)\n    }\n  }\n}\n\n/**\n * Filters out values for which the predicator does not return `true`-ish.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, filter(value => value % 2 === 0)),\n *  console.log\n * ) // will be called only with even values\n *\n * publish(foo, 2)\n * publish(foo, 3)\n * publish(foo, 4)\n * publish(foo, 5)\n * ```\n */\nexport function filter<T>(predicate: (value: T) => boolean): Operator<T> {\n  return done => value => {\n    predicate(value) && done(value)\n  }\n}\n\n/**\n * Maps values using the provided project function.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, map(value => value * 2)),\n *  console.log\n * ) // 4, 6\n *\n * publish(foo, 2)\n * publish(foo, 3)\n * ```\n */\nexport function map<T, K>(project: (value: T) => K): Operator<T, K> {\n  return done => compose(done, project)\n}\n\n/**\n * Maps values to the hard-coded value.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, mapTo(3)),\n *  console.log\n * ) // 3, 3\n *\n * publish(foo, 1)\n * publish(foo, 2)\n * ```\n */\nexport function mapTo<T>(value: T): Operator<any, T> {\n  return done => () => done(value)\n}\n\n/**\n * Works like Array#reduce.\n * Applies an accumulator function on the emitter, and outputs intermediate result. Starts with the initial value.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, scan((acc, value) => acc + value, 2),\n *  console.log\n * ) // 3, 5\n *\n * publish(foo, 1)\n * publish(foo, 2)\n * ```\n */\nexport function scan<T, K>(scanner: (current: T, value: K) => T, initial: T): Operator<K, T> {\n  return done => value => done((initial = scanner(initial, value)))\n}\n\n/**\n * Skips the specified amount of values from the emitter.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, skip(2)),\n *  console.log\n * ) // 3, 4\n *\n * publish(foo, 1) // skipped\n * publish(foo, 2) // skipped\n * publish(foo, 3)\n * publish(foo, 4)\n * ```\n */\nexport function skip<T>(times: number): Operator<T> {\n  return done => value => {\n    times > 0 ? times-- : done(value)\n  }\n}\n\n/**\n * Throttles flowing values at the provided interval in milliseconds.\n * [Throttle VS Debounce in SO](https://stackoverflow.com/questions/25991367/difference-between-throttling-and-debouncing-a-function).\n *\n * ```ts\n *  const foo = stream<number>()\n *  publish(foo, 1)\n *\n *  setTimeout(() => publish(foo, 2), 20)\n *  setTimeout(() => publish(foo, 3), 20)\n *\n *  subscribe(pipe(foo, throttleTime(50)), val => {\n *    console.log(value); // 3\n *  })\n * ```\n */\nexport function throttleTime<T>(interval: number): Operator<T> {\n  let currentValue: T | undefined\n  let timeout: any\n\n  return done => value => {\n    currentValue = value\n\n    if (timeout) {\n      return\n    }\n\n    timeout = setTimeout(() => {\n      timeout = undefined\n      done(currentValue!)\n    }, interval)\n  }\n}\n\n/**\n * Debounces flowing values at the provided interval in milliseconds.\n * [Throttle VS Debounce in SO](https://stackoverflow.com/questions/25991367/difference-between-throttling-and-debouncing-a-function).\n *\n * ```ts\n *  const foo = stream<number>()\n *  publish(foo, 1)\n *\n *  setTimeout(() => publish(foo, 2), 20)\n *  setTimeout(() => publish(foo, 3), 20)\n *\n *  subscribe(pipe(foo, debounceTime(50)), val => {\n *    console.log(value); // 3\n *  })\n * ```\n */\nexport function debounceTime<T>(interval: number): Operator<T> {\n  let currentValue: T | undefined\n  let timeout: any\n\n  return done => value => {\n    currentValue = value\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n\n    timeout = setTimeout(() => {\n      done(currentValue!)\n    }, interval)\n  }\n}\n\n/**\n * Combines the source Emitter with the latest values from the specified Emitters into an array. Outputs only when the source Emitter emits.\n * See [[combineLatest]] for a transformer that outputs when any of the emitters emit.\n *\n * ```ts\n *  const foo = stream<number>()\n *  const bar = stream<number>()\n *  subscribe(\n *    pipe(\n *      foo,\n *      withLatestFrom(bar)\n *    ),\n *    (([foo, bar]) => console.log({ foo, bar }))\n *  )\n *\n *  publish(foo, 1) // nothing happens, bar has not emitted yet\n *  publish(bar, 1) // still nothing\n *  publish(foo, 2) // logs { foo: 2, bar: 1 }\n *  publish(bar, 2)\n *  publish(foo, 3) // logs { foo: 3, bar: 2 }\n * ```\n */\nexport function withLatestFrom<T, R1>(...s: [Emitter<R1>]): Operator<T, [T, R1]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2>(...s: [Emitter<R1>, Emitter<R2>]): Operator<T, [T, R1, R2]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>]): Operator<T, [T, R1, R2, R3]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>]): Operator<T, [T, R1, R2, R3, R4]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>]): Operator<T, [T, R1, R2, R3, R4, R5]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5, R6>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>, Emitter<R6>]): Operator<T, [T, R1, R2, R3, R4, R5, R6]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5, R6, R7>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>, Emitter<R6>, Emitter<R7>]): Operator<T, [T, R1, R2, R3, R4, R5, R6, R7]> // prettier-ignore\nexport function withLatestFrom(...sources: Emitter<any>[]): Operator<any, any> {\n  const values = new Array(sources.length)\n  let called = 0\n  let pendingCall: null | (() => void) = null\n  const allCalled = Math.pow(2, sources.length) - 1\n\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index)\n    subscribe(source, value => {\n      let prevCalled = called\n      called = called | bit\n      values[index] = value\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall()\n        pendingCall = null\n      }\n    })\n  })\n\n  return done => value => {\n    let call = () => done([value].concat(values))\n    if (called === allCalled) {\n      call()\n    } else {\n      pendingCall = call\n    }\n  }\n}\n", "/**\n * Transformers change and combine streams, similar to operators.\n * urx comes with two combinators - [[combineLatest]] and [[merge]], and one convenience filter - [[duc]].\n *\n * @packageDocumentation\n */\nimport { Emitter, publish, reset, subscribe, Subscription } from './actions'\nimport { RESET, SUBSCRIBE } from './constants'\nimport { Comparator, defaultComparator, distinctUntilChanged, pipe } from './pipe'\nimport { stream } from './streams'\nimport { joinProc } from './utils'\n\n/**\n * Merges one or more emitters from the same type into a new Emitter which emits values from any of the source emitters.\n * ```ts\n * const foo = stream<number>()\n * const bar = stream<number>()\n *\n * subscribe(merge(foo, bar), (value) => console.log(value)) // 42, 43\n *\n * publish(foo, 42)\n * publish(bar, 43)\n * ```\n */\nexport function merge<T>(...sources: Emitter<T>[]): Emitter<T> {\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<any>) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map(source => subscribe(source, subscription!)))\n      case RESET:\n        // do nothing, we are stateless\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<T>\n}\n\n/**\n * A convenience wrapper that emits only the distinct values from the passed Emitter. Wraps [[pipe]] and [[distinctUntilChanged]].\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // this line...\n * const a = duc(foo)\n *\n * // is equivalent to this\n * const b = pipe(distinctUntilChanged(foo))\n * ```\n *\n * @param source The source emitter.\n * @param comparator optional custom comparison function for the two values.\n *\n * @typeParam T the type of the value emitted by the source.\n *\n * @returns the resulting emitter.\n */\nexport function duc<T>(source: Emitter<T>, comparator: Comparator<T> = defaultComparator): Emitter<T> {\n  return pipe(source, distinctUntilChanged(comparator))\n}\n\n/**\n * Creates an emitter with the latest values from all passed emitters as an array.\n *\n * `combineLatest` acts as a Depot. Using it on stateless streams persists the last emitted value of each [[Emitter]].\n * Provided that all emitters have emitted at least once, subscribing to the resulting emitter will immediately receive their combined latest values.\n *\n * ```ts\n * const foo = stream<number>()\n * const bar = stream<number>()\n *\n * subscribe(combineLatest(foo, bar), ([foo, bar]) => console.log({ foo, bar }))\n *\n * publish(foo, 42)\n * publish(bar, 43) // { foo: 42, bar: 43 }\n * publish(foo, 44) // { foo: 44, bar: 43 }\n * publish(bar, 45) // { foo: 44, bar: 45 }\n * ```\n */\nexport function combineLatest<O1, O2>(...emitters: [Emitter<O1>, Emitter<O2>]): Emitter<[O1, O2]> // prettier-ignore\nexport function combineLatest<O1, O2, O3>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>]): Emitter<[O1, O2, O3]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>]): Emitter<[O1, O2, O3, O4]> // prettier-ignore\nexport function combineLatest<O1, O2, O3>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>]): Emitter<[O1, O2, O3]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>]): Emitter<[O1, O2, O3, O4, O5]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>]): Emitter<[O1, O2, O3, O4, O5, O6]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>]): Emitter<[O1, O2, O3, O4, O5, O6, O7]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9, O10>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>, Emitter<O10>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9, O10]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9, O10, O11>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>, Emitter<O10>, Emitter<O11>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9, O10, O11]> // prettier-ignore\nexport function combineLatest(...emitters: Emitter<any>[]): Emitter<any> {\n  let innerSubject = stream<any>()\n  const values = new Array(emitters.length)\n  let called = 0\n  const allCalled = Math.pow(2, emitters.length) - 1\n\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index)\n    subscribe(source, value => {\n      values[index] = value\n      called = called | bit\n      if (called === allCalled) {\n        publish(innerSubject, values)\n      }\n    })\n  })\n\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<any>) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription!(values)\n        }\n        return subscribe(innerSubject, subscription!)\n      case RESET:\n        return reset(innerSubject)\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<any>\n}\n", "/**\n * ## Thinking in Systems\n * systems are a stateful **data-processing machines** which accept input through **input streams**,\n * init and maintain state in **depots** and, in certain conditions, emit values to subscriptions through **output streams**.\n * Systems can specify other systems as dependencies, and can act as singletons in the resulting dependency tree.\n *\n * ### Depots\n *\n * The first, and probably the most critical part to understand are **the depots**\n * mostly because they are somewhat implicit.\n * Unlike other state management paradigms, the depots are not kept in a single data structure.\n * Insted, depots are defined and maintained as stateful streams, stateful transfomers\n * like [[combineLatest]] or stateful operators like[ []withLatestFrom] or [[scan]].\n *\n * **Depots persist values over time**.\n * If it was not for them, the system had to re-receive its entire input state simultaneously in order to calculate the values for its output stream.\n *\n * Of course, strictly speaking, it is possible to implement a pure, stateless system as a form of a complex map/reduce. urx would not mind that ;).\n *\n * ### Input Streams\n *\n * The system receives updates from the rest of the world through values published in its input streams.\n * The streams used can be either stateless (acting as means to send **signals**) or stateful, where the initial stream state acts as the default value for that system parameter.\n *\n * The effects of the input streams are up to the system data-processing logic. It can change its depots' state, and/or emit values through its output streams.\n *\n * ### Data Processing\n *\n * The actual system behavior is exclusively implemented by **applying transformers and operators** to the input streams, producing the respective output streams.\n * In the final state the system streams are organized in a directed graph, where incoming data is routed through certain edges and nodes.\n * Simple systems like the one in [urx by example](https://urx.virtuoso.dev/docs/urx-by-example) can use a straightforward single-step transformation (in this case, `combineLatest` and `map`),\n * while complex ones can introduce multiple intermediate streams to model their logic.\n *\n * ### Output Streams\n *\n * The system publishes updates to its clients (other systems or an UI bound to it) by publishing data in its output streams.\n * State-reflecting output streams, like `sum` in the [urx by example](https://urx.virtuoso.dev/docs/urx-by-example) should use stateful streams as output streams.\n * Signal-like output should use regular, stateless streams. In general, stateless input streams tend to have a symmetrical stateless streams, and the opposite.\n *\n * @packageDocumentation\n */\nimport { Emitter } from './actions'\n\n/**\n * Systems are a dictionaries of streams. a [[SystemConstructor]] should return a System.\n */\nexport interface System {\n  [key: string]: Emitter<any>\n}\n\n/**\n * a SystemSpec is the result from a [[system]] call. To obtain the [[System]], pass the spec to [[init]].\n */\nexport interface SystemSpec<SS extends SystemSpecs, C extends SystemConstructor<SS>> {\n  id: string\n  constructor: C\n  dependencies: SS\n  singleton: boolean\n}\n\n/** @internal **/\nexport type AnySystemSpec = SystemSpec<any, any>\n\n/** @internal **/\nexport type SystemSpecs = AnySystemSpec[]\n\n/** @internal **/\nexport type SR<E extends AnySystemSpec, R extends System = ReturnType<E['constructor']>> = R\n\n/** @internal **/\nexport type SpecResults<SS extends SystemSpecs, L = SS['length']> = L extends 0\n  ? []\n  : L extends 1\n  ? [SR<SS[0]>]\n  : L extends 2\n  ? [SR<SS[0]>, SR<SS[1]>]\n  : L extends 3\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>]\n  : L extends 4\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>]\n  : L extends 5\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>]\n  : L extends 6\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>]\n  : L extends 7\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>]\n  : L extends 8\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>]\n  : L extends 9\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>]\n  : L extends 10\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>, SR<SS[9]>]\n  : L extends 11\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>, SR<SS[9]>, SR<SS[10]>]\n  : never\n\n/**\n * The system constructor is a function which initializes and connects streams and returns them as a [[System]].\n * If the [[system]] call specifies system dependencies, the constructor receives the dependencies as an array argument.\n */\nexport type SystemConstructor<D extends SystemSpecs> = (dependencies: SpecResults<D>) => System\n\n/**\n * `system` defines a specification of a system - its constructor, dependencies and if it should act as a singleton in a system dependency tree.\n * When called, system returns a [[SystemSpec]], which is then initialized along with its dependencies by passing it to [[init]].\n *\n * ```ts\n * @import { subscribe, publish, system, init, tup, connect, map, pipe } from 'urx'\n *\n * // a simple system with two streams\n * const sys1 = system(() => {\n *  const a = stream<number>()\n *  const b = stream<number>()\n *\n *  connect(pipe(a, map(value => value * 2)), b)\n *  return { a, b }\n * })\n *\n * // a second system which depends on the streams from the first one\n * const sys2 = system(([ {a, b} ]) => {\n *  const c = stream<number>()\n *  connect(pipe(b, map(value => value * 2)), c)\n *  // re-export the `a` stream, keep `b` internal\n *  return { a, c }\n * }, tup(sys1))\n *\n * // init will recursively initialize sys2 dependencies, in this case sys1\n * const { a, c } = init(sys2)\n * subscribe(c, c => console.log(`Value multiplied by 4`, c))\n * publish(a, 2)\n * ```\n *\n * #### Singletons in Dependency Tree\n *\n * By default, systems will be initialized only once if encountered multiple times in the dependency tree.\n * In the below dependency system tree, systems `b` and `c` will receive the same stream instances from system `a` when system `d` is initialized.\n * ```txt\n *   a\n *  / \\\n * b   c\n *  \\ /\n *   d\n * ```\n * If `a` gets `{singleton: false}` as a last argument, `init` creates two separate instances - one for `b` and one for `c`.\n *\n * @param constructor the system constructor function. Initialize and connect the streams in its body.\n *\n * @param dependencies the system dependencies, which the constructor will receive as arguments.\n * Use the [[tup]] utility **For TypeScript type inference to work correctly**.\n * ```ts\n * const sys3 = system(() => { ... }, tup(sys2, sys1))\n * ```\n * @param __namedParameters Options\n * @param singleton determines if the system will act as a singleton in a system dependency tree. `true` by default.\n */\nexport function system<F extends SystemConstructor<D>, D extends SystemSpecs>(\n  constructor: F,\n  dependencies: D = ([] as unknown) as D,\n  { singleton }: { singleton: boolean } = { singleton: true }\n): SystemSpec<D, F> {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton,\n  }\n}\n\n/** @internal */\nconst id = () => (Symbol() as unknown) as string\n\n/**\n * Initializes a [[SystemSpec]] by recursively initializing its dependencies.\n *\n * ```ts\n * // a simple system with two streams\n * const sys1 = system(() => {\n *  const a = stream<number>()\n *  const b = stream<number>()\n *\n *  connect(pipe(a, map(value => value * 2)), b)\n *  return { a, b }\n * })\n *\n * const { a, b } = init(sys1)\n * subscribe(b, b => console.log(b))\n * publish(a, 2)\n * ```\n *\n * @returns the [[System]] constructed by the spec constructor.\n * @param systemSpec the system spec to initialize.\n */\nexport function init<SS extends AnySystemSpec>(systemSpec: SS): SR<SS> {\n  const singletons = new Map<string, System>()\n  const _init = <SS extends AnySystemSpec>({ id, constructor, dependencies, singleton }: SS) => {\n    if (singleton && singletons.has(id)) {\n      return singletons.get(id)! as SR<SS>\n    }\n    const system = constructor(dependencies.map((e: AnySystemSpec) => _init(e)))\n    if (singleton) {\n      singletons.set(id, system)\n    }\n    return system as any\n  }\n  return _init(systemSpec)\n}\n", "/**\n * `@virtuoso.dev/react-urx` exports the [[systemToComponent]] function.\n * It wraps urx systems in to UI **logic provider components**,\n * mapping the system input and output streams to the component input / output points.\n *\n * ### Simple System wrapped as React Component\n *\n * ```tsx\n * const sys = system(() => {\n *   const foo = statefulStream(42)\n *   return { foo }\n * })\n *\n * const { Component: MyComponent, useEmitterValue } = systemToComponent(sys, {\n *   required: { fooProp: 'foo' },\n * })\n *\n * const Child = () => {\n *   const foo = useEmitterValue('foo')\n *   return <div>{foo}</div>\n * }\n *\n * const App = () => {\n *   return <Comp fooProp={42}><Child /><Comp>\n * }\n * ```\n *\n * @packageDocumentation\n */\nimport * as React from 'react'\nimport {\n  ComponentType,\n  createContext,\n  createElement,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactNode,\n  RefAttributes,\n  useContext,\n  useImperativeHandle,\n  useState,\n  useCallback,\n} from 'react'\nimport {\n  AnySystemSpec,\n  reset,\n  curry1to0,\n  curry2to1,\n  Emitter,\n  SR,\n  eventHandler,\n  getValue,\n  publish,\n  Publisher,\n  init,\n  StatefulStream,\n  Stream,\n  subscribe,\n  always,\n  tap,\n} from '@virtuoso.dev/urx'\n\n/** @internal */\ninterface Dict<T> {\n  [key: string]: T\n}\n\n/** @internal */\nfunction omit<O extends Dict<any>, K extends readonly string[]>(keys: K, obj: O): Omit<O, K[number]> {\n  var result = {} as Dict<any>\n  var index = {} as Dict<1>\n  var idx = 0\n  var len = keys.length\n\n  while (idx < len) {\n    index[keys[idx]] = 1\n    idx += 1\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop]\n    }\n  }\n\n  return result as any\n}\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\n/** @internal */\nexport type Observable<T> = Emitter<T> | Publisher<T>\n\n/**\n * Describes the mapping between the system streams and the component properties.\n * Each property uses the keys as the names of the properties and the values as the corresponding stream names.\n * @typeParam SS the type of the system.\n */\nexport interface SystemPropsMap<SS extends AnySystemSpec, K = keyof SR<SS>, D = { [key: string]: K }> {\n  /**\n   * Specifies the required component properties.\n   */\n  required?: D\n  /**\n   * Specifies the optional component properties.\n   */\n  optional?: D\n  /**\n   * Specifies the component methods, if any. Streams are converted to methods with a single argument.\n   * When invoked, the method publishes the value of the argument to the specified stream.\n   */\n  methods?: D\n  /**\n   * Specifies the component \"event\" properties, if any.\n   * Event properties accept callback functions which get executed when the stream emits a new value.\n   */\n  events?: D\n}\n\n/** @internal */\nexport type PropsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['required'], string>]: M['required'][K] extends string\n    ? SR<E>[M['required'][K]] extends Observable<infer R>\n      ? R\n      : never\n    : never\n} &\n  {\n    [K in Extract<keyof M['optional'], string>]?: M['optional'][K] extends string\n      ? SR<E>[M['optional'][K]] extends Observable<infer R>\n        ? R\n        : never\n      : never\n  } &\n  {\n    [K in Extract<keyof M['events'], string>]?: M['events'][K] extends string\n      ? SR<E>[M['events'][K]] extends Observable<infer R>\n        ? (value: R) => void\n        : never\n      : never\n  }\n\n/** @internal */\nexport type MethodsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['methods'], string>]: M['methods'][K] extends string\n    ? SR<E>[M['methods'][K]] extends Observable<infer R>\n      ? (value: R) => void\n      : never\n    : never\n}\n\n/**\n * Used to correctly specify type refs for system components\n *\n * ```tsx\n * const s = system(() => { return { a: statefulStream(0) } })\n * const { Component } = systemToComponent(s)\n *\n * const App = () => {\n *  const ref = useRef<RefHandle<typeof Component>>()\n *  return <Component ref={ref} />\n * }\n * ```\n *\n * @typeParam T the type of the component\n */\nexport type RefHandle<T> = T extends ForwardRefExoticComponent<RefAttributes<infer Handle>> ? Handle : never\n\n/**\n * Converts a system spec to React component by mapping the system streams to component properties, events and methods. Returns hooks for querying and modifying\n * the system streams from the component's child components.\n * @param systemSpec The return value from a [[system]] call.\n * @param map The streams to props / events / methods mapping Check [[SystemPropsMap]] for more details.\n * @param Root The optional React component to render. By default, the resulting component renders nothing, acting as a logical wrapper for its children.\n * @returns an object containing the following:\n *  - `Component`: the React component.\n *  - `useEmitterValue`: a hook that lets child components use values emitted from the specified output stream.\n *  - `useEmitter`: a hook that calls the provided callback whenever the specified stream emits a value.\n *  - `usePublisher`: a hook which lets child components publish values to the specified stream.\n *  <hr />\n */\nexport function systemToComponent<SS extends AnySystemSpec, M extends SystemPropsMap<SS>, S extends SR<SS>, R>(\n  systemSpec: SS,\n  map: M,\n  Root?: R\n) {\n  const requiredPropNames = Object.keys(map.required || {})\n  const optionalPropNames = Object.keys(map.optional || {})\n  const methodNames = Object.keys(map.methods || {})\n  const eventNames = Object.keys(map.events || {})\n  const Context = createContext<SR<SS>>(({} as unknown) as any)\n\n  type RootCompProps = R extends ComponentType<infer RP> ? RP : { children?: ReactNode }\n\n  type CompProps = PropsFromPropMap<SS, M> & RootCompProps\n\n  type CompMethods = MethodsFromPropMap<SS, M>\n\n  function applyPropsToSystem(system: ReturnType<SS['constructor']>, props: any) {\n    if (system['propsReady']) {\n      publish(system['propsReady'], false)\n    }\n\n    for (const requiredPropName of requiredPropNames) {\n      const stream = system[map.required![requiredPropName]]\n      publish(stream, (props as any)[requiredPropName])\n    }\n\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream = system[map.optional![optionalPropName]]\n        publish(stream, (props as any)[optionalPropName])\n      }\n    }\n\n    if (system['propsReady']) {\n      publish(system['propsReady'], true)\n    }\n  }\n\n  function buildMethods(system: ReturnType<SS['constructor']>) {\n    return methodNames.reduce((acc, methodName) => {\n      ;(acc as any)[methodName] = (value: any) => {\n        const stream = system[map.methods![methodName]]\n        publish(stream, value)\n      }\n      return acc\n    }, {} as CompMethods)\n  }\n\n  function buildEventHandlers(system: ReturnType<SS['constructor']>) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system[map.events![eventName]])\n      return handlers\n    }, {} as { [key: string]: Emitter<any> })\n  }\n\n  /**\n   * A React component generated from an urx system\n   */\n  const Component = forwardRef<CompMethods, CompProps>((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren as any\n\n    const [system] = useState(() => {\n      return tap(init(systemSpec), system => applyPropsToSystem(system, props))\n    })\n\n    const [handlers] = useState(curry1to0(buildEventHandlers, system))\n\n    useIsomorphicLayoutEffect(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName])\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset)\n      }\n    }, [props, handlers, system])\n\n    useIsomorphicLayoutEffect(() => {\n      applyPropsToSystem(system, props)\n    })\n\n    useImperativeHandle(ref, always(buildMethods(system)))\n\n    return createElement(\n      Context.Provider,\n      { value: system },\n      Root\n        ? createElement(\n            (Root as unknown) as ComponentType,\n            omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n            children\n          )\n        : children\n    )\n  })\n\n  const usePublisher = <K extends keyof S>(key: K) => {\n    return useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]) as (\n      value: S[K] extends Stream<infer R> ? R : never\n    ) => void\n  }\n\n  /**\n   * Returns the value emitted from the stream.\n   */\n  const useEmitterValue = <K extends keyof S, V = S[K] extends StatefulStream<infer R> ? R : never>(key: K) => {\n    const context = useContext(Context)\n    const source: StatefulStream<V> = context[key]\n\n    const [value, setValue] = useState(curry1to0(getValue, source))\n\n    useIsomorphicLayoutEffect(\n      () =>\n        subscribe(source, (next: V) => {\n          if (next !== value) {\n            setValue(always(next))\n          }\n        }),\n      [source, value]\n    )\n\n    return value\n  }\n\n  const useEmitter = <K extends keyof S, V = S[K] extends Stream<infer R> ? R : never>(key: K, callback: (value: V) => void) => {\n    const context = useContext(Context)\n    const source: Stream<V> = context[key]\n    useIsomorphicLayoutEffect(() => subscribe(source, callback), [callback, source])\n  }\n\n  return {\n    Component,\n    usePublisher,\n    useEmitterValue,\n    useEmitter,\n  }\n}\n", "import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n", "import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n", "import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n", "import { Log, LogLevel } from '../loggerSystem'\nimport { SizeRange } from '../sizeSystem'\nimport { useSizeWithElRef } from './useSize'\nimport { SizeFunction, ScrollContainerState } from '../interfaces'\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  log: Log,\n  gap?: (gap: number) => void,\n  customScrollParent?: HTMLElement\n) {\n  return useSizeWithElRef((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const windowScrolling = (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : windowScrolling\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    const scrollHeight = customScrollParent\n      ? customScrollParent.scrollHeight\n      : windowScrolling\n      ? document.documentElement.scrollHeight\n      : scrollableElement.scrollHeight\n\n    const viewportHeight = customScrollParent\n      ? customScrollParent.offsetHeight\n      : windowScrolling\n      ? window.innerHeight\n      : scrollableElement.offsetHeight\n\n    scrollContainerStateCallback({\n      scrollTop: Math.max(scrollTop, 0),\n      scrollHeight,\n      viewportHeight,\n    })\n\n    gap?.(resolveGapValue('row-gap', getComputedStyle(el).rowGap, log))\n\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n\nfunction resolveGapValue(property: string, value: string | undefined, log: Log) {\n  if (value !== 'normal' && !value?.endsWith('px')) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN)\n  }\n  if (value === 'normal') {\n    return 0\n  }\n  return parseInt(value ?? '0', 10)\n}\n", "export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n", "export function approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n", "import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\nimport { ScrollContainerState } from '../interfaces'\nimport { flushSync } from 'react-dom'\nimport { approximatelyEqual } from '../utils/approximatelyEqual'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const shouldFlushSync = useRef(false)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const windowScroll = (el as any) === window || (el as any) === document\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight\n\n      const call = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight,\n        })\n      }\n\n      if (shouldFlushSync.current) {\n        flushSync(call)\n      } else {\n        call()\n      }\n      shouldFlushSync.current = false\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight })\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    shouldFlushSync.current = true\n    scrollerRef.current!.scrollBy(location)\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n", "import * as u from '@virtuoso.dev/urx'\nimport { ScrollContainerState } from './interfaces'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<ScrollContainerState>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const fixedFooterHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n    // bogus, has no effect\n    const react18ConcurrentRendering = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollTop }) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollHeight }) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      react18ConcurrentRendering,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n", "interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n", "export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n", "import * as u from '@virtuoso.dev/urx'\n\nexport const recalcSystem = u.system(\n  () => {\n    const recalcInProgress = u.statefulStream(false)\n    return { recalcInProgress }\n  },\n  [],\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\nimport { recalcSystem } from './recalcSystem'\nimport { SizeFunction } from './interfaces'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>, gap: number) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex - prevIndex\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log, gap]: [SizeRange[], number[], Log, number]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>, gap: number) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  const itemCount = index - startIndex\n  const top = size * itemCount + (itemCount - 1) * gap + offset\n  return top > 0 ? top + gap : top\n}\n\nexport type FlatOrGroupedLocation = { index: number | 'LAST' } | { groupIndex: number }\n\nexport function isGroupLocation(location: FlatOrGroupedLocation): location is { groupIndex: number } {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof (location as any).groupIndex !== 'undefined'\n}\n\nexport function originalIndexFromLocation(location: FlatOrGroupedLocation, sizes: SizeState, lastIndex: number) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (isGroupLocation(location)) {\n    // return the index of the first item below the index\n    return sizes.groupIndices[location.groupIndex] + 1\n  } else {\n    const numericIndex = location.index === 'LAST' ? lastIndex : location.index\n    let result = originalIndexFromItemIndex(numericIndex, sizes)\n    result = Math.max(0, result, Math.min(lastIndex, result))\n    return result\n  }\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\nexport const sizeSystem = u.system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const gap = u.statefulStream(0)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log, gap), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes, gap),\n        u.map(([groupIndices, sizes, gap]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree, gap) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(recalcInProgress, true)\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([shiftWith, { offsetTree }, gap]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree, gap)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([shiftWith, sizes, gap]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree, gap),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem, recalcSystem),\n  { singleton: true }\n)\n", "/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n\n  return result\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n    },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: ReturnType<typeof setTimeout> | null = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        u.map(\n          ([\n            [location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log],\n            gap,\n            fixedHeaderHeight,\n            fixedFooterHeight,\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location)\n            const { align, behavior, offset } = normalLocation\n            const lastIndex = totalCount - 1\n\n            const index = originalIndexFromLocation(normalLocation, sizes, lastIndex)\n\n            let top = offsetOf(index, sizes.offsetTree, gap) + headerHeight\n            if (align === 'end') {\n              top += fixedHeaderHeight + findMaxKeyValue(sizes.sizeTree, index)[1]! - viewportHeight + fixedFooterHeight\n              if (index === lastIndex) {\n                top += footerHeight\n              }\n            } else if (align === 'center') {\n              top += (fixedHeaderHeight + findMaxKeyValue(sizes.sizeTree, index)[1]! - viewportHeight + fixedFooterHeight) / 2\n            } else {\n              top -= topListHeight\n            }\n\n            if (offset) {\n              top += offset\n            }\n\n            const retry = (listChanged: boolean) => {\n              cleanup()\n              if (listChanged) {\n                log('retrying to scroll to', { location }, LogLevel.DEBUG)\n                u.publish(scrollToIndex, location)\n              } else {\n                log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n              }\n            }\n\n            cleanup()\n\n            if (behavior === 'smooth') {\n              let listChanged = false\n              unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed\n              })\n\n              unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged)\n              })\n            } else {\n              unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(150)), retry)\n            }\n\n            // if the scroll jump is too small, the list won't get rerendered.\n            // clean this listener\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup()\n            }, 1200)\n\n            u.publish(scrollingInProgress, true)\n            log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n            return { top, behavior }\n          }\n        )\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { approximatelyEqual } from './utils/approximatelyEqual'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nconst DEFAULT_AT_TOP_THRESHOLD = 0\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n  const atTopThreshold = u.statefulStream(DEFAULT_AT_TOP_THRESHOLD)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.statefulStreamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    ),\n    false\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(u.duc(scrollTop), u.duc(atTopThreshold)),\n      u.map(([top, atTopThreshold]) => top <= atTopThreshold),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(u.pipe(isAtTop, u.throttleTime(50)), atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [{ scrollTop, scrollHeight }, viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, { scrollTop, scrollHeight, viewportHeight }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop + viewportHeight) < 1\n\n            if (current.scrollTop !== scrollTop && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(({ scrollTop }) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n", "import * as u from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && u.getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { FlatIndexLocationWithAlign } from './interfaces'\n\nexport function getInitialTopMostItemIndexNumber(location: number | FlatIndexLocationWithAlign, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<number | FlatIndexLocationWithAlign>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n", "/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    const autoscrollToBottom = u.stream<true>()\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    function trapNextSizeIncrease(followOutput: boolean) {\n      const cancel = u.handleNext(atBottomState, (state) => {\n        if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n          u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n          scrollToBottom('auto')\n        }\n      })\n      setTimeout(cancel, 100)\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        trapNextSizeIncrease(followOutput !== false)\n      }\n    )\n\n    u.subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(u.getValue(followOutput) !== false)\n    })\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput, autoscrollToBottom }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n", "import * as u from '@virtuoso.dev/urx'\n\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = u.system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = u.stream<number[]>()\n  const topItemsIndexes = u.stream<[number]>()\n  const groupIndicesAndCount = u.streamFromEmitter(u.pipe(groupCounts, u.map(groupCountsToIndicesAndCount)))\n  u.connect(\n    u.pipe(\n      groupIndicesAndCount,\n      u.map((value) => value.totalCount)\n    ),\n    totalCount\n  )\n  u.connect(\n    u.pipe(\n      groupIndicesAndCount,\n      u.map((value) => value.groupIndices)\n    ),\n    groupIndices\n  )\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(scrollTop, sizes, headerHeight),\n      u.filter(([_, sizes]) => hasGroups(sizes)),\n      u.map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      u.distinctUntilChanged(),\n      u.map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, u.tup(sizeSystem, domIOSystem))\n", "import { ListRange } from './interfaces'\n\nexport function tupleComparator<T1, T2>(prev: [T1, T2] | undefined, current: [T1, T2]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n", "import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight + fixedHeaderHeight\n            listBottom += headerHeight + fixedHeaderHeight\n            listBottom -= deviation\n\n            // console.log({ listTop, scrollTop, stickyHeaderHeight, topViewportAddition })\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null) as u.Operator<NumberTuple | null, NumberTuple>,\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { recalcSystem } from './recalcSystem'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n  firstItemIndex: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  gap: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const itemCount = totalCount - lastIndex\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          recalcInProgress,\n          u.duc(visibleRange, tupleComparator),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          u.duc(gap),\n          data\n        ),\n        u.filter(([mount, recalcInProgress]) => {\n          return mount && !recalcInProgress\n        }),\n        u.map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            gap,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return { ...EMPTY_LIST_STATE, totalCount }\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                gap,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, gap, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap) / (size + gap))\n                  const itemCount = rangeStartIndex - range.start\n                  offset += itemCount * size + itemCount * gap\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size + gap\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, gap, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((value) => value.topListHeight)\n      ),\n      topListHeight\n    )\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          let startIndex = 0\n          let endIndex = items.length - 1\n\n          while (items[startIndex].type === 'group' && startIndex < endIndex) {\n            startIndex++\n          }\n\n          while (items[endIndex].type === 'group' && endIndex > startIndex) {\n            endIndex--\n          }\n\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data, gap }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, gap, data),\n        u.map(([[, count], sizes, firstItemIndex, gap, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, gap, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = u.system(([{ topItemsIndexes }]) => {\n  const topItemCount = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      topItemCount,\n      u.filter((length) => length > 0),\n      u.map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, u.tup(listStateSystem))\n", "import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        u.map(([footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState]) => {\n          return footerHeight + fixedFooterHeight + headerHeight + fixedHeaderHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n", "export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n", "import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { simpleMemoize } from './utils/simpleMemoize'\nimport { recalcSystem } from './recalcSystem'\n\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)\n})\n\ntype UpwardFixState = [number, ListItem<any>[], number, number]\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize]) => {\n            const totalHeight = bottom + offsetBottom\n\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize\n                  }\n                }\n              }\n            }\n\n            return [newDev, items, totalCount, totalHeight] as UpwardFixState\n          },\n          [0, [], 0, 0] as UpwardFixState\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP\n        }),\n        u.map(([[amount], , , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    function scrollByWith(offset: number) {\n      if (offset > 0) {\n        u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        u.publish(deviation, 0)\n      } else {\n        u.publish(deviation, 0)\n        u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n      }\n    }\n\n    u.subscribe(u.pipe(deviationOffset, u.withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling]) => {\n      if (isScrolling && isMobileSafari()) {\n        u.publish(deviation, deviationAmount - offset)\n      } else {\n        scrollByWith(-offset)\n      }\n    })\n\n    // this hack is only necessary for mobile safari which does not support scrollBy while scrolling is in progress.\n    // when the browser stops scrolling, restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        u.filter(([is, deviation, recalc]) => !is && !recalc && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      scrollByWith\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.subscribe(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes, gap),\n        u.map(([offset, { lastSize }, gap]) => offset * lastSize + offset * gap)\n      ),\n      (offset) => {\n        u.publish(deviation, offset)\n        requestAnimationFrame(() => {\n          u.publish(scrollBy, { top: offset })\n          requestAnimationFrame(() => {\n            u.publish(deviation, 0)\n            u.publish(recalcInProgress, false)\n          })\n        })\n      }\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo, ScrollContainerState } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<ScrollContainerState>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight,\n        }\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n", "import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { ScrollIntoViewLocation } from './interfaces'\n\nexport const scrollIntoViewSystem = u.system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex },\n  ]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        u.withLatestFrom(gap),\n        u.map(([[viewLocation, sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop], gap]) => {\n          const { done, behavior, align, ...rest } = viewLocation\n          let location = null\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes, totalCount - 1)\n\n          const itemTop = offsetOf(actualIndex, sizes.offsetTree, gap) + headerHeight + fixedHeaderHeight\n          if (itemTop < scrollTop + fixedHeaderHeight) {\n            location = { ...rest, behavior, align: align ?? 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, actualIndex)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight - fixedFooterHeight) {\n              location = { ...rest, behavior, align: align ?? 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n", "import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(\n      u.pipe(\n        featureGroup1.windowViewportRect,\n        u.map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    )\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n", "import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n", "import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null || !element.offsetParent) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n", "import * as React from 'react'\n\nexport interface VirtuosoMockContextValue {\n  viewportHeight: number\n  itemHeight: number\n}\n\nexport const VirtuosoMockContext = React.createContext<VirtuosoMockContextValue | undefined>(undefined)\n\nexport interface VirtuosoGridMockContextValue {\n  viewportHeight: number\n  viewportWidth: number\n  itemHeight: number\n  itemWidth: number\n}\n\nexport const VirtuosoGridMockContext = React.createContext<VirtuosoGridMockContextValue | undefined>(undefined)\n", "import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC, PropsWithChildren, useContext } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { VirtuosoMockContext } from './utils/context'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = u.statefulStream<unknown>(null)\n  const groupContent = u.statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = u.statefulStream<Components<any>>({})\n  const computeItemKey = u.statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = u.statefulStream('div')\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | Window | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: u.Stream<T>, message: string) {\n  const alias = u.stream<T>()\n  u.subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  u.connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = u.system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: u.stream<any>(),\n    maxHeightCacheSize: u.stream<any>(),\n    footer: u.stream<any>(),\n    header: u.stream<any>(),\n    HeaderContainer: u.stream<any>(),\n    FooterContainer: u.stream<any>(),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    GroupContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  u.subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  u.subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  u.subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  u.subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(propsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    u.publish(propsSystem.components, { ...u.getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    u.publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, u.tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' } as const\nconst ITEM_STYLE = { overflowAnchor: 'none' } as const\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n  const listGap = usePublisher('gap')\n\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? u.noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      // ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          },\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: ITEM_STYLE,\n          },\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      u.noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const viewportHeight = usePublisher('viewportHeight')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const viewportRef = useSize(u.compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight)\n      fixedItemHeight(ctx.itemHeight)\n    }\n  }, [ctx, viewportHeight, fixedItemHeight])\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight)\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 })\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight])\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n      autoscrollToBottom: 'autoscrollToBottom',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n", "import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { FlatIndexLocationWithAlign, GridItem } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport type Data = unknown[] | undefined\n\nexport interface Gap {\n  row: number\n  column: number\n}\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem<unknown>[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildProbeGridState<D = unknown>(items: GridItem<D>[]): GridState {\n  return {\n    ...PROBE_GRID_STATE,\n    items: items,\n  }\n}\n\nfunction buildItems<D>(startIndex: number, endIndex: number, data: D[] | undefined) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map(\n    (_, i) => ({ index: i + startIndex, data: data?.[i + startIndex] } as GridItem<D>)\n  )\n}\n\nfunction gapComparator(prev: Gap, next: Gap) {\n  return prev && prev.column === next.column && prev.row === next.row\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState, footerHeight, headerHeight },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n    log,\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const data = u.statefulStream<Data>(undefined)\n    const gap = u.statefulStream<Gap>({ row: 0, column: 0 })\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(didMount, initialItemCount, data),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count, data]) => {\n          return {\n            items: buildItems(0, count - 1, data),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(gap, gapComparator),\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height),\n          data\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], gap, item, data], viewport]) => {\n          const { row: rowGap, column: columnGap } = gap\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return buildProbeGridState(buildItems(0, 0, data))\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap)\n\n          let startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap))\n          let endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1\n          endIndex = min(totalCount - 1, max(endIndex, perRow - 1))\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex, data)\n          const { top, bottom } = gridLayout(viewport, gap, item, items)\n          const rowCount = ceil(totalCount / perRow)\n          const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        u.map(([viewportDimensions, item, { items }, gap]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, gap, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        u.map(([location, viewport, item, totalCount, gap]) => {\n          const normalLocation = normalizeIndexLocation(location) as FlatIndexLocationWithAlign\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, gap, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      footerHeight,\n      headerHeight,\n      initialItemCount,\n      gap,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n      ...log,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n)\n\nfunction gridLayout<D>(viewport: ElementDimensions, gap: Gap, item: ElementDimensions, items: GridItem<D>[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, gap, item, items[0].index)\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, gap: Gap, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column)\n  const rowCount = floor(index / perRow)\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row\n  return top > 0 ? top + gap.row : top\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number, gap: number) {\n  return max(1, floor((viewportWidth + gap) / (itemWidth + gap)))\n}\n", "import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren, useContext } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\nimport { Log, LogLevel } from './loggerSystem'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { VirtuosoGridMockContext } from './utils/context'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any, any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey<any, any>>(identity)\n  const headerFooterTag = u.statefulStream('div')\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n  const gridGap = usePublisher('gap')\n  const log = useEmitterValue('log')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n    gridGap({\n      row: resolveGapValue('row-gap', getComputedStyle(el).rowGap, log),\n      column: resolveGapValue('column-gap', getComputedStyle(el).columnGap, log),\n    })\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index, item.data, context)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, item.data, context)\n          )\n    })\n  )\n})\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoGridFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoGridMockContext)\n  const itemDimensions = usePublisher('itemDimensions')\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  React.useEffect(() => {\n    if (ctx) {\n      viewportDimensions({ height: ctx.viewportHeight, width: ctx.viewportWidth })\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth })\n    }\n  }, [ctx, viewportDimensions, itemDimensions])\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoGridMockContext)\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const itemDimensions = usePublisher('itemDimensions')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  React.useEffect(() => {\n    if (ctx) {\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth })\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: ctx.viewportWidth })\n    }\n  }, [ctx, windowViewportRect, itemDimensions])\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <GridItems />\n        <Footer />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      context: 'context',\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n\nfunction resolveGapValue(property: string, value: string | undefined, log: Log) {\n  if (value !== 'normal' && !value?.endsWith('px')) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN)\n  }\n  if (value === 'normal') {\n    return 0\n  }\n  return parseInt(value ?? '0', 10)\n}\n", "import { systemToComponent } from '@virtuoso.dev/react-urx'\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren, useContext } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, FixedFooterContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { VirtuosoMockContext } from './utils/context'\n\nconst tableComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = u.statefulStream<unknown>(null)\n  const fixedHeaderContent = u.statefulStream<FixedHeaderContent>(null)\n  const fixedFooterContent = u.statefulStream<FixedFooterContent>(null)\n  const components = u.statefulStream<TableComponents>({})\n  const computeItemKey = u.statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | Window | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'tfoot' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableFooterComponent: distinctProp('TableFoot', 'tfoot'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n    FillerRow: distinctProp('FillerRow'),\n  }\n})\n\nconst combinedSystem = u.system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, u.tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst DefaultFillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    undefined,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const FillerRow = useEmitterValue('FillerRow') || DefaultFillerRow\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      },\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref: callbackRef, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const viewportHeight = usePublisher('viewportHeight')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const viewportRef = useSize(u.compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight)\n      fixedItemHeight(ctx.itemHeight)\n    }\n  }, [ctx, viewportHeight, fixedItemHeight])\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const ctx = useContext(VirtuosoMockContext)\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const fixedItemHeight = usePublisher('fixedItemHeight')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight)\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 })\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight])\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedFooterHeight = usePublisher('fixedFooterHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const fixedFooterContent = useEmitterValue('fixedFooterContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(u.compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const tfootRef = useSize(u.compose(fixedFooterHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n  const TheTFoot = useEmitterValue('TableFooterComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        },\n        fixedHeaderContent()\n      )\n    : null\n  const theFoot = fixedFooterContent\n    ? React.createElement(\n        TheTFoot!,\n        {\n          key: 'TableFoot',\n          style: { zIndex: 1, position: 'sticky', bottom: 0 },\n          ref: tfootRef,\n          ...contextPropIfNotDomElement(TheTFoot, context),\n        },\n        fixedFooterContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) }, [\n          theHead,\n          <Items key=\"TableBody\" />,\n          theFoot,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      fixedFooterContent: 'fixedFooterContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n", "import { ReactElement, Ref } from 'react'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n  ScrollIntoViewLocation,\n  ListRootProps,\n  GridRootProps,\n  FlatIndexLocationWithAlign,\n  FlatScrollIntoViewLocation,\n  SizeFunction,\n  FixedFooterContent,\n} from './interfaces'\nimport { List } from './List'\nimport { Grid } from './Grid'\nimport { Table } from './Table'\n\nexport interface VirtuosoProps<D, C> extends ListRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: SizeFunction\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface GroupedVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * Set the contents of the table footer.\n   */\n  fixedFooterContent?: FixedFooterContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: SizeFunction\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface VirtuosoGridProps<D, C = unknown> extends GridRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<D, C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  context?: C\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey<D, C>\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle {\n  /**\n   * Scrolls the component to the specified item index. See {@link IndexLocationWithAlign} for more options.\n   */\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: FlatScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n  /**\n   * Use this with combination with follow output if you have images loading in the list. Listen to the image loading and call the method.\n   */\n  autoscrollToBottom(): void\n}\n\nexport interface GroupedVirtuosoHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollIntoView(location: number | ScrollIntoViewLocation): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n  autoscrollToBottom(): void\n}\n\nexport interface VirtuosoGridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface TableVirtuosoHandle {\n  scrollIntoView(location: number | FlatScrollIntoViewLocation): void\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData = any, Context = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData = any, Context = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData = any, Context = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableVirtuosoHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <ItemData = any, Context = any>(\n  props: VirtuosoGridProps<ItemData, Context> & { ref?: Ref<VirtuosoGridHandle> }\n) => ReactElement\n"],
  "mappings": "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AAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,MAAK,MAAK,MAAK,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,MAAK,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,MAAK,MAAK,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,MAAK,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,G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",
  "names": ["hasKey", "hasKey", "GqlError", "result", "it", "it", "result", "it", "it", "result", "filter", "_a", "BlockchainEnvironment", "i", "require_utils", "result", "isObject", "i", "l", "merge", "a", "b", "v", "id", "h", "i", "process", "merge", "i", "result", "i", "l", "subscribe", "c", "require_axios", "NotificationTypeName", "result", "c", "a", "useNotifiClient", "expiry", "_e", "result", "data", "b", "id", "a", "walletBlockchain", "walletPublicKey", "s", "f", "import_react", "import_react", "import_react", "import_react", "PUBLISH", "SUBSCRIBE", "RESET", "VALUE", "compose", "a", "b", "arg", "thrush", "proc", "curry2to1", "arg1", "arg2", "curry1to0", "tap", "arg", "proc", "tup", "args", "call", "always", "value", "joinProc", "procs", "map", "noop", "subscribe", "emitter", "subscription", "SUBSCRIBE", "publish", "publisher", "PUBLISH", "reset", "RESET", "getValue", "depot", "VALUE", "connect", "curry2to1", "handleNext", "unsub", "stream", "subscriptions", "action", "splice", "length", "push", "indexOf", "slice", "forEach", "Error", "statefulStream", "initial", "innerSubject", "eventHandler", "currentSubscription", "cleanup", "streamFromEmitter", "statefulStreamFromEmitter", "combineOperators", "operators", "subscriber", "reduceRight", "thrush", "pipe", "source", "project", "defaultComparator", "previous", "next", "distinctUntilChanged", "comparator", "current", "done", "filter", "predicate", "compose", "mapTo", "scan", "scanner", "skip", "times", "throttleTime", "interval", "currentValue", "timeout", "setTimeout", "undefined", "debounceTime", "clearTimeout", "withLatestFrom", "sources", "values", "Array", "called", "pendingCall", "allCalled", "Math", "pow", "index", "bit", "prevCalled", "concat", "merge", "duc", "combineLatest", "emitters", "system", "constructor", "dependencies", "singleton", "id", "Symbol", "init", "systemSpec", "singletons", "Map", "_init", "has", "get", "e", "set", "omit", "keys", "obj", "result", "index", "idx", "len", "length", "prop", "hasOwnProperty", "useIsomorphicLayoutEffect", "document", "React", "systemToComponent", "systemSpec", "map", "Root", "requiredPropNames", "Object", "required", "optionalPropNames", "optional", "methodNames", "methods", "eventNames", "events", "Context", "createContext", "applyPropsToSystem", "system", "props", "publish", "requiredPropName", "stream", "optionalPropName", "buildMethods", "reduce", "acc", "methodName", "value", "buildEventHandlers", "handlers", "eventName", "eventHandler", "Component", "forwardRef", "propsWithChildren", "ref", "children", "useState", "tap", "init", "curry1to0", "subscribe", "values", "reset", "useImperativeHandle", "always", "createElement", "Provider", "usePublisher", "key", "useCallback", "curry2to1", "useEmitterValue", "context", "useContext", "source", "getValue", "setValue", "next", "useEmitter", "callback", "LogLevel", "useIsomorphicLayoutEffect", "document", "useLayoutEffect", "useEffect", "CONSOLE_METHOD_MAP", "DEBUG", "INFO", "_CONSOLE_METHOD_MAP", "WARN", "ERROR", "loggerSystem", "system", "logLevel", "statefulStream", "log", "label", "message", "level", "_getGlobalThis$VIRTUO", "globalThis", "window", "getValue", "console", "singleton", "useSizeWithElRef", "callback", "enabled", "ref", "useRef", "callbackRef", "_el", "ResizeObserver", "observer", "entries", "element", "target", "offsetParent", "elRef", "observe", "current", "unobserve", "useSize", "useChangedListContentsSizes", "itemSize", "scrollContainerStateCallback", "gap", "customScrollParent", "el", "ranges", "children", "field", "length", "results", "i", "child", "item", "dataset", "index", "parseInt", "knownSize", "parseFloat", "size", "lastResult", "endIndex", "push", "startIndex", "scrollableElement", "parentElement", "windowScrolling", "firstElementChild", "scrollTop", "pageYOffset", "documentElement", "scrollHeight", "viewportHeight", "offsetHeight", "innerHeight", "Math", "max", "property", "value", "endsWith", "getComputedStyle", "rowGap", "correctItemSize", "dimension", "round", "getBoundingClientRect", "approximatelyEqual", "num1", "num2", "abs", "useScrollTop", "smoothScrollTargetReached", "scrollerElement", "scrollerRefCallback", "noop", "scrollerRef", "scrollTopTarget", "timeoutRef", "shouldFlushSync", "handler", "useCallback", "ev", "windowScroll", "call", "flushSync", "clearTimeout", "localRef", "addEventListener", "passive", "removeEventListener", "scrollByCallback", "location", "scrollBy", "scrollToCallback", "isSmooth", "behavior", "top", "ceil", "min", "setTimeout", "scrollTo", "domIOSystem", "scrollContainerState", "stream", "deviation", "statefulScrollTop", "headerHeight", "fixedHeaderHeight", "fixedFooterHeight", "footerHeight", "scrollingInProgress", "react18ConcurrentRendering", "connect", "pipe", "map", "_ref", "t", "NIL_NODE", "lvl", "newAANode", "k", "v", "l", "r", "empty", "node", "newTree", "remove", "key", "last", "adjust", "clone", "_last", "deleteLast", "findMaxKeyValue", "Infinity", "undefined", "insert", "split", "skew", "walkWithin", "start", "end", "result", "concat", "walk", "args", "isSingle", "Error", "rl", "rlvl", "rangesWithin", "arrayToRanges", "items", "parser", "_parser", "nextIndex", "nextValue", "_parser2", "findIndexOfClosestSmallerOrEqual", "comparator", "floor", "match", "join", "findClosestSmallerOrEqual", "recalcSystem", "recalcInProgress", "rangeIncludes", "refRange", "range", "indexComparator", "itemIndex", "offsetComparator", "offset", "itemOffset", "_ref2", "offsetPointParser", "point", "createOffsetTree", "prevOffsetTree", "syncStart", "sizeTree", "offsetTree", "prevIndex", "prevSize", "prevOffset", "arrayBinarySearch", "kv", "slice", "_step3", "_iterator3", "done", "_step3$value", "indexOffset", "aOffset", "lastIndex", "lastOffset", "lastSize", "sizeStateReducer", "state", "_ref3", "groupIndices", "newSizeTree", "groupSize", "reduce", "tree", "groupIndex", "insertRanges", "_step", "_iterator", "overlappingRanges", "some", "_step2", "firstPassDone", "shouldInsert", "p", "_iterator2", "rangeStart", "rangeEnd", "_step2$value", "rangeValue", "_insertRanges", "_createOffsetTree", "newOffsetTree", "groupOffsetTree", "offsetOf", "itemCount", "_arrayBinarySearch$fi", "originalIndexFromLocation", "sizes", "originalIndexFromItemIndex", "hasGroups", "groupOffset", "SIZE_MAP", "offsetWidth", "sizeSystem", "_ref4", "sizeRanges", "totalCount", "statefulTotalCount", "statefulStreamFromEmitter", "unshiftWith", "shiftWith", "firstItemIndex", "fixedItemSize", "defaultItemSize", "data", "initial", "withLatestFrom", "scan", "distinctUntilChanged", "u", "filter", "indexes", "_ref5", "idx", "_extends", "_ref6", "_ref7", "_ref7$", "trackItemSizes", "listRefresh", "streamFromEmitter", "_ref8", "_ref9", "newSizes", "changed", "subscribe", "prev", "next", "diff", "val", "publish", "_ref10", "beforeUnshiftWith", "_ref11", "acc", "_ref12", "shiftWithOffset", "_ref13", "_ref14", "_ref15", "tup", "SUPPORTS_SCROLL_TO_OPTIONS", "style", "normalizeIndexLocation", "align", "scrollToIndexSystem", "_ref$", "_ref$2", "scrollToIndex", "topListHeight", "unsubscribeNextListRefresh", "cleartTimeoutRef", "unsubscribeListRefresh", "cleanup", "_ref2$", "normalLocation", "retry", "listChanged", "handleNext", "UP", "INITIAL_BOTTOM_STATE", "atBottom", "notAtBottomBecause", "offsetBottom", "stateFlagsSystem", "isAtBottom", "isAtTop", "atBottomStateChange", "atTopStateChange", "atBottomThreshold", "atTopThreshold", "isScrolling", "merge", "duc", "skip", "mapTo", "debounceTime", "isScrollingBy", "combineLatest", "throttleTime", "atBottomState", "atBottomBecause", "scrollTopDelta", "_ref3$", "_headerHeight", "lastJumpDueToItemResize", "jump", "scrollDirection", "direction", "prevScrollTop", "scrollVelocity", "_", "propsReadySystem", "propsReady", "didMount", "ready", "initialTopMostItemIndexSystem", "scrolledToInitialItem", "initialTopMostItemIndex", "normalizeFollowOutput", "follow", "followOutputSystem", "followOutput", "autoscrollToBottom", "pendingScrollHandle", "scrollToBottom", "followOutputBehavior", "trapNextSizeIncrease", "cancel", "shouldFollow", "behaviorFromFollowOutput", "refreshed", "groupCountsToIndicesAndCount", "counts", "groupCount", "groupedListSystem", "groupCounts", "topItemsIndexes", "groupIndicesAndCount", "tupleComparator", "rangeComparator", "getOverscan", "overscan", "main", "reverse", "getViewportIncrease", "sizeRangeSystem", "listBoundary", "increaseViewportBy", "visibleRange", "listTop", "listBottom", "stickyHeaderHeight", "headerVisible", "topViewportAddition", "bottomViewportAddition", "EMPTY_LIST_STATE", "topItems", "offsetTop", "bottom", "transposeItems", "originalIndex", "transposedItems", "groupRanges", "currentRange", "currentGroupIndex", "shift", "indexOf", "type", "buildListState", "lastItem", "height", "listStateSystem", "rangeTopListHeight", "_ref$3", "stateFlags", "itemsRendered", "listState", "startOffset", "endOffset", "sizesValue", "rangeStartIndex", "rangeEndIndex", "minStartIndex", "offsetPointRanges", "rangesWithinOffsets", "endValue", "findRange", "maxIndex", "tap", "endReached", "count", "startReached", "rangeChanged", "initialItemCountSystem", "initialItemCount", "_ref3$2", "includedGroupsCount", "adjustedCount", "Array", "from", "scrollSeekSystem", "isSeeking", "scrollSeekConfiguration", "speed", "config", "enter", "exit", "velocity", "change", "scrollSeekRangeChanged", "topItemCountSystem", "topItemCount", "totalListHeightSystem", "totalListHeightChanged", "totalListHeight", "simpleMemoize", "func", "called", "isMobileSafari", "test", "navigator", "userAgent", "upwardScrollFixSystem", "deviationOffset", "prevItems", "o", "totalHeight", "newDev", "prevTotalHeight", "amount", "scrollByWith", "deviationAmount", "is", "requestAnimationFrame", "initialScrollTopSystem", "initialScrollTop", "alignToBottomSystem", "alignToBottom", "paddingTopAddition", "windowScrollerSystem", "windowScrollContainerState", "windowViewportRect", "windowScrollTo", "useWindowScroll", "scrollIntoViewSystem", "scrollIntoView", "viewLocation", "rest", "_objectWithoutPropertiesLoose", "_excluded", "actualIndex", "itemTop", "featureGroup1System", "windowScroller", "listSystem", "_ref2$2", "domIO", "_ref2$3", "flags", "featureGroup1", "visibleHeight", "fixedItemHeight", "defaultItemHeight", "positionStickyCssValue", "createElement", "position", "useWindowViewportRectRef", "viewportInfo", "calculateInfo", "rect", "visibleWidth", "width", "customScrollParentRect", "deltaTop", "scrollAndResizeEventHandler", "VirtuosoMockContext", "createContext", "VirtuosoGridMockContext", "_excluded2", "_excluded3", "identity", "listComponentPropsSystem", "itemContent", "context", "groupContent", "components", "computeItemKey", "headerFooterTag", "distinctProp", "propName", "defaultValue", "FooterComponent", "HeaderComponent", "TopItemListComponent", "ListComponent", "ItemComponent", "GroupComponent", "ScrollerComponent", "EmptyPlaceholder", "ScrollSeekPlaceholder", "addDeprecatedAlias", "prop", "alias", "warn", "combinedSystem", "propsSystem", "deprecatedProps", "group", "itemHeight", "scrollingStateChange", "adjustForPrependedItems", "maxHeightCacheSize", "footer", "header", "HeaderContainer", "FooterContainer", "ItemContainer", "ScrollContainer", "GroupContainer", "ListContainer", "emptyComponent", "scrollSeek", "deprecateComponentProp", "componentName", "comp", "_extends2", "placeholder", "DefaultScrollSeekPlaceholder", "React", "GROUP_STYLE", "zIndex", "overflowAnchor", "ITEM_STYLE", "Items", "memo", "showTopList", "_ref5$showTopList", "useEmitterValue", "usePublisher", "windowScrollContainerStateCallback", "_scrollContainerStateCallback", "listGap", "_React$useState", "useState", "setDeviation", "useEmitter", "containerStyle", "boxSizing", "paddingTop", "paddingBottom", "marginTop", "contextPropIfNotDomElement", "scrollerStyle", "outline", "overflowY", "WebkitOverflowScrolling", "viewportStyle", "topItemListStyle", "Header", "Footer", "buildScroller", "props", "_useScrollTop", "tabIndex", "buildWindowScroller", "_useScrollTop2", "Viewport", "ctx", "useContext", "viewportRef", "compose", "WindowViewport", "TopItemListContainer", "TopItemList", "_systemToComponent", "systemToComponent", "required", "optional", "methods", "events", "TheViewport", "WindowScroller", "Scroller", "List", "Component", "INITIAL_GRID_STATE", "itemWidth", "PROBE_GRID_STATE", "buildItems", "gapComparator", "column", "row", "gridSystem", "_ref$4", "gridState", "viewportDimensions", "itemDimensions", "_ref4$", "_ref4$$", "viewport", "columnGap", "viewportWidth", "perRow", "itemsPerRow", "_gridLayout", "gridLayout", "rowCount", "gridComponentPropsSystem", "itemClassName", "listClassName", "GridItems", "scrollHeightCallback", "gridGap", "listRef", "firstItem", "firstChild", "resolveGapValue", "className", "Grid", "tableComponentPropsSystem", "fixedHeaderContent", "fixedFooterContent", "TableComponent", "TableHeadComponent", "TableFooterComponent", "TableBodyComponent", "TableRowComponent", "FillerRow", "DefaultFillerRow", "padding", "border", "paddingTopEl", "paddingBottomEl", "theadRef", "tfootRef", "TheScroller", "TheTable", "TheTHead", "TheTFoot", "theHead", "theFoot", "borderSpacing", "Table", "Virtuoso", "import_react", "import_notifi_react_hooks", "import_react", "import_react", "React", "_a", "_b", "createContext", "useState", "value", "formErrorMessages", "useContext", "ParseError", "code", "Object", "setPrototypeOf", "prototype", "name", "constructor", "Error", "MIN_LENGTH_FOR_NSN", "MAX_LENGTH_FOR_NSN", "MAX_LENGTH_COUNTRY_CODE", "VALID_DIGITS", "DASHES", "SLASHES", "DOTS", "WHITESPACE", "BRACKETS", "TILDES", "VALID_PUNCTUATION", "PLUS_CHARS", "a", "b", "split", "pa", "pb", "i", "na", "Number", "nb", "isNaN", "V3", "V4", "DEFAULT_EXT_PREFIX", "CALLING_CODE_REG_EXP", "Metadata", "metadata", "_classCallCheck", "validateMetadata", "setVersion", "call", "keys", "countries", "filter", "_", "countryCode", "v1", "v2", "v3", "nonGeographic", "nonGeographical", "country", "getCountryMetadata", "undefined", "callingCode", "getCountryCodesForCallingCode", "countryCodes", "countryCallingCodes", "length", "selectNumberingPlan", "test", "hasCountry", "numberingPlan", "NumberingPlan", "hasCallingCode", "getNumberingPlanMetadata", "getCountryCodeForCallingCode", "IDDPrefix", "defaultIDDPrefix", "nationalNumberPattern", "possibleLengths", "formats", "nationalPrefixForParsing", "nationalPrefixTransformRule", "leadingDigits", "hasTypes", "type", "ext", "country_phone_code_to_countries", "country_calling_codes", "globalMetadataObject", "_getFormats", "getDefaultCountryMetadataForRegion", "map", "Format", "_getNationalPrefixFormattingRule", "_nationalPrefixForParsing", "nationalPrefix", "_getNationalPrefixIsOptionalWhenFormatting", "types", "getType", "Type", "format", "_format", "nationalPrefixFormattingRule", "nationalPrefixIsOptionalWhenFormattingInNationalFormat", "usesNationalPrefix", "FIRST_GROUP_ONLY_PREFIX_PATTERN", "is_object", "join", "type_of", "_typeof", "getCountryCallingCode", "countryCallingCode", "isSupportedCountry", "version", "v4", "compare", "RFC3966_EXTN_PREFIX", "getExtensionDigitsPattern", "maxLength", "purpose", "extLimitAfterExplicitLabel", "extLimitAfterLikelyLabel", "extLimitAfterAmbiguousChar", "extLimitWhenNotSure", "possibleSeparatorsBetweenNumberAndExtLabel", "possibleCharsAfterExtLabel", "optionalExtnSuffix", "explicitExtLabels", "ambiguousExtLabels", "ambiguousSeparator", "possibleSeparatorsNumberExtLabelNoComma", "autoDiallingAndExtLabelsFound", "rfcExtn", "explicitExtn", "ambiguousExtn", "americanStyleExtnWithSuffix", "autoDiallingExtn", "onlyCommasExtn", "MIN_LENGTH_PHONE_NUMBER_PATTERN", "VALID_PHONE_NUMBER", "VALID_PHONE_NUMBER_START_REG_EXP", "RegExp", "VALID_PHONE_NUMBER_WITH_EXTENSION", "createExtensionPattern", "VALID_PHONE_NUMBER_PATTERN", "number", "isViablePhoneNumberStart", "EXTN_PATTERN", "start", "search", "numberWithoutExtension", "slice", "matches", "match", "DIGITS", "parseDigit", "character", "string", "result", "_createForOfIteratorHelperLoose", "parsePhoneNumberCharacter", "prevParsedCharacters", "merged", "element", "indexOf", "push", "sort", "nationalNumber", "checkNumberLengthForType", "type_info", "possible_lengths", "mobile_type", "mergeArrays", "actual_length", "minimum_length", "input", "options", "phone", "isPossibleNumber", "isNonGeographicCallingCode", "checkNumberLength", "parseRFC3966", "text", "replace", "part", "isViablePhoneNumber", "formatRFC3966", "regular_expression", "NON_FIXED_LINE_PHONE_TYPES", "matchesEntirely", "isNumberTypeEqualTo", "pattern", "getNumberType", "_metadata", "possibleCountries", "couldNationalNumberBelongToCountry", "formattedNumber", "trim", "FIRST_GROUP_PATTERN", "useInternationalFormat", "withNationalPrefix", "carrierCode", "internationalFormat", "applyInternationalSeparatorStyle", "SINGLE_IDD_PREFIX_REG_EXP", "countryMetadata", "DEFAULT_OPTIONS", "formatExtension", "extension", "formatNationalNumber", "addExtension", "fromCountry", "formatIDD", "formatAs", "chooseFormatForNumber", "formatNationalNumberUsingFormat", "availableFormats", "nationalNnumber", "leadingDigitsPatterns", "lastLeadingDigitsPattern", "fromCountryCallingCode", "iddPrefix", "getIddPrefix", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "PhoneNumber", "countryOrCountryCallingCode", "TypeError", "getCountryAndCountryCallingCode", "getPossibleCountriesForNumber", "isValidNumber", "phoneNumber", "formatNumber", "_objectSpread", "isCountryCode", "metadataJson", "CAPTURING_DIGIT_PATTERN", "IDDPrefixPattern", "matchedGroups", "prefixPattern", "prefixMatch", "exec", "capturedGroupsCount", "hasCapturedGroups", "prefixBeforeNationalNumber", "possiblePositionOfTheFirstCapturedGroup", "possibleNationalPrefix", "extractNationalNumberFromPossiblyIncompleteNumber", "shouldHaveExtractedNationalPrefix", "isPossibleIncompleteNationalNumber", "nationalNumberBefore", "nationalNumberAfter", "possibleShorterNumber", "extractNationalNumber", "possibleShorterNationalNumber", "numberWithoutIDD", "stripIddPrefix", "extractCountryCallingCodeFromInternationalNumberWithoutPlusSign", "shorterNumber", "nationalPhoneNumber", "getCountryByNationalNumber", "MAX_INPUT_STRING_LENGTH", "PHONE_NUMBER_START_PATTERN", "AFTER_PHONE_NUMBER_END_PATTERN", "defaultCountry", "parseInput", "extract", "formattedPhoneNumber", "error", "parsePhoneNumber", "defaultCallingCode", "hasSelectedNumberingPlan", "valid", "extended", "possible", "extractFormattedPhoneNumber", "throwOnError", "startsAt", "withExtensionStripped", "extractExtension", "extractCountryCallingCode", "parseIncompletePhoneNumber", "exactCountry", "getCountryByCallingCode", "parse", "args", "Array", "_slicedToArray", "arg_1", "arg_2", "arg_3", "arg_4", "isObject", "parsePhoneNumberWithError", "normalizeArguments", "arguments", "parsePhoneNumberWithError_", "isValid", "isValidPhoneNumber", "useCallback", "target", "_e", "it", "useEffect", "params", "s", "f", "id", "subscribe", "useMemo", "unreadNotificationCount", "FtuStage", "hasKey", "destinationErrorMessages", "_t", "alerts", "telegramId", "clsx", "useRef", "UNABLE_TO_SUBSCRIBE", "INVALID_NUMBER", "description", "threshold", "sanitizedBottomContentHtml", "icons", "targetGroup", "eventTypes", "inputs", "data", "getParsedPercentage", "getParsedPrice", "isClientTokenExpired", "isClientAuthenticated", "parseISO", "isToday", "Virtuoso", "email"]
}
